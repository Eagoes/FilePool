<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (14 samples, 0.01%)</title><rect x="1067.4" y="245" width="0.1" height="15.0" fill="rgb(227,104,29)" rx="2" ry="2" />
<text  x="1070.39" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="935.4" y="165" width="0.3" height="15.0" fill="rgb(210,137,54)" rx="2" ry="2" />
<text  x="938.40" y="175.5" ></text>
</g>
<g >
<title>_IO_no_init (20 samples, 0.02%)</title><rect x="822.8" y="581" width="0.1" height="15.0" fill="rgb(208,116,28)" rx="2" ry="2" />
<text  x="825.76" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (34 samples, 0.03%)</title><rect x="447.8" y="261" width="0.3" height="15.0" fill="rgb(215,2,26)" rx="2" ry="2" />
<text  x="450.83" y="271.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (145 samples, 0.11%)</title><rect x="45.3" y="245" width="1.4" height="15.0" fill="rgb(245,217,36)" rx="2" ry="2" />
<text  x="48.35" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (307 samples, 0.23%)</title><rect x="1010.9" y="261" width="2.8" height="15.0" fill="rgb(249,45,39)" rx="2" ry="2" />
<text  x="1013.90" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (106 samples, 0.08%)</title><rect x="914.5" y="149" width="1.0" height="15.0" fill="rgb(243,58,5)" rx="2" ry="2" />
<text  x="917.50" y="159.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (803 samples, 0.61%)</title><rect x="142.6" y="165" width="7.3" height="15.0" fill="rgb(228,205,49)" rx="2" ry="2" />
<text  x="145.65" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (511 samples, 0.39%)</title><rect x="1017.7" y="261" width="4.6" height="15.0" fill="rgb(223,138,51)" rx="2" ry="2" />
<text  x="1020.68" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (124 samples, 0.09%)</title><rect x="1006.3" y="261" width="1.1" height="15.0" fill="rgb(221,45,48)" rx="2" ry="2" />
<text  x="1009.30" y="271.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (12 samples, 0.01%)</title><rect x="1017.3" y="197" width="0.1" height="15.0" fill="rgb(212,80,18)" rx="2" ry="2" />
<text  x="1020.25" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (13 samples, 0.01%)</title><rect x="964.3" y="181" width="0.1" height="15.0" fill="rgb(205,13,0)" rx="2" ry="2" />
<text  x="967.32" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (14 samples, 0.01%)</title><rect x="924.4" y="277" width="0.2" height="15.0" fill="rgb(210,102,36)" rx="2" ry="2" />
<text  x="927.45" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (15 samples, 0.01%)</title><rect x="280.8" y="213" width="0.1" height="15.0" fill="rgb(224,111,29)" rx="2" ry="2" />
<text  x="283.79" y="223.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::DecodeMessageField (247 samples, 0.19%)</title><rect x="40.8" y="341" width="2.3" height="15.0" fill="rgb(236,53,29)" rx="2" ry="2" />
<text  x="43.84" y="351.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (18 samples, 0.01%)</title><rect x="157.1" y="197" width="0.2" height="15.0" fill="rgb(205,209,48)" rx="2" ry="2" />
<text  x="160.12" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (61 samples, 0.05%)</title><rect x="1038.9" y="277" width="0.6" height="15.0" fill="rgb(215,113,22)" rx="2" ry="2" />
<text  x="1041.94" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (28 samples, 0.02%)</title><rect x="148.4" y="149" width="0.3" height="15.0" fill="rgb(233,61,4)" rx="2" ry="2" />
<text  x="151.41" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (21 samples, 0.02%)</title><rect x="1024.0" y="277" width="0.2" height="15.0" fill="rgb(209,75,3)" rx="2" ry="2" />
<text  x="1027.04" y="287.5" ></text>
</g>
<g >
<title>malloc (39 samples, 0.03%)</title><rect x="934.1" y="165" width="0.3" height="15.0" fill="rgb(229,59,39)" rx="2" ry="2" />
<text  x="937.10" y="175.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (524 samples, 0.40%)</title><rect x="866.4" y="277" width="4.8" height="15.0" fill="rgb(208,185,8)" rx="2" ry="2" />
<text  x="869.45" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (15 samples, 0.01%)</title><rect x="1111.6" y="565" width="0.2" height="15.0" fill="rgb(238,62,53)" rx="2" ry="2" />
<text  x="1114.63" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateFallback (1,161 samples, 0.89%)</title><rect x="140.2" y="213" width="10.4" height="15.0" fill="rgb(238,138,5)" rx="2" ry="2" />
<text  x="143.16" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (17 samples, 0.01%)</title><rect x="1039.1" y="245" width="0.1" height="15.0" fill="rgb(238,86,22)" rx="2" ry="2" />
<text  x="1042.06" y="255.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (2,547 samples, 1.94%)</title><rect x="380.4" y="181" width="22.9" height="15.0" fill="rgb(206,80,29)" rx="2" ry="2" />
<text  x="383.39" y="191.5" >s..</text>
</g>
<g >
<title>ravl_emplace (33 samples, 0.03%)</title><rect x="816.1" y="565" width="0.3" height="15.0" fill="rgb(241,85,5)" rx="2" ry="2" />
<text  x="819.10" y="575.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (18 samples, 0.01%)</title><rect x="960.7" y="181" width="0.1" height="15.0" fill="rgb(214,103,15)" rx="2" ry="2" />
<text  x="963.66" y="191.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (545 samples, 0.42%)</title><rect x="866.4" y="293" width="4.9" height="15.0" fill="rgb(242,219,53)" rx="2" ry="2" />
<text  x="869.36" y="303.5" ></text>
</g>
<g >
<title>operation_start (72 samples, 0.05%)</title><rect x="811.7" y="565" width="0.6" height="15.0" fill="rgb(242,229,29)" rx="2" ry="2" />
<text  x="814.66" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (35 samples, 0.03%)</title><rect x="278.4" y="229" width="0.3" height="15.0" fill="rgb(219,172,13)" rx="2" ry="2" />
<text  x="281.43" y="239.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (52 samples, 0.04%)</title><rect x="134.1" y="245" width="0.5" height="15.0" fill="rgb(207,105,12)" rx="2" ry="2" />
<text  x="137.12" y="255.5" ></text>
</g>
<g >
<title>moodycamel::details::hash_thread_id (21 samples, 0.02%)</title><rect x="862.9" y="229" width="0.2" height="15.0" fill="rgb(246,167,35)" rx="2" ry="2" />
<text  x="865.94" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (45 samples, 0.03%)</title><rect x="961.1" y="133" width="0.4" height="15.0" fill="rgb(211,20,47)" rx="2" ry="2" />
<text  x="964.11" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (27 samples, 0.02%)</title><rect x="974.9" y="277" width="0.2" height="15.0" fill="rgb(218,172,13)" rx="2" ry="2" />
<text  x="977.87" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_index_for_index (160 samples, 0.12%)</title><rect x="497.7" y="277" width="1.5" height="15.0" fill="rgb(229,101,14)" rx="2" ry="2" />
<text  x="500.73" y="287.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (18 samples, 0.01%)</title><rect x="976.5" y="197" width="0.1" height="15.0" fill="rgb(252,211,35)" rx="2" ry="2" />
<text  x="979.48" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_common.constprop.20 (665 samples, 0.51%)</title><rect x="1092.3" y="581" width="6.0" height="15.0" fill="rgb(221,200,5)" rx="2" ry="2" />
<text  x="1095.29" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (141 samples, 0.11%)</title><rect x="986.1" y="277" width="1.3" height="15.0" fill="rgb(228,155,52)" rx="2" ry="2" />
<text  x="989.14" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::emplace_back&lt;scythedb::Slice&gt; (108 samples, 0.08%)</title><rect x="42.1" y="309" width="1.0" height="15.0" fill="rgb(212,12,13)" rx="2" ry="2" />
<text  x="45.09" y="319.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (15 samples, 0.01%)</title><rect x="845.2" y="165" width="0.1" height="15.0" fill="rgb(220,138,47)" rx="2" ry="2" />
<text  x="848.15" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator= (197 samples, 0.15%)</title><rect x="157.8" y="197" width="1.8" height="15.0" fill="rgb(235,228,19)" rx="2" ry="2" />
<text  x="160.82" y="207.5" ></text>
</g>
<g >
<title>__tls_get_addr (49 samples, 0.04%)</title><rect x="1130.3" y="597" width="0.4" height="15.0" fill="rgb(206,221,42)" rx="2" ry="2" />
<text  x="1133.30" y="607.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (27 samples, 0.02%)</title><rect x="1010.5" y="277" width="0.2" height="15.0" fill="rgb(205,163,8)" rx="2" ry="2" />
<text  x="1013.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (22 samples, 0.02%)</title><rect x="876.3" y="165" width="0.2" height="15.0" fill="rgb(243,175,8)" rx="2" ry="2" />
<text  x="879.33" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (53 samples, 0.04%)</title><rect x="1034.7" y="245" width="0.5" height="15.0" fill="rgb(221,6,16)" rx="2" ry="2" />
<text  x="1037.74" y="255.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (29 samples, 0.02%)</title><rect x="1053.0" y="261" width="0.3" height="15.0" fill="rgb(220,68,18)" rx="2" ry="2" />
<text  x="1056.04" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (22 samples, 0.02%)</title><rect x="434.4" y="261" width="0.2" height="15.0" fill="rgb(244,5,27)" rx="2" ry="2" />
<text  x="437.38" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (606 samples, 0.46%)</title><rect x="911.3" y="245" width="5.4" height="15.0" fill="rgb(244,44,46)" rx="2" ry="2" />
<text  x="914.26" y="255.5" ></text>
</g>
<g >
<title>_IO_old_init (26 samples, 0.02%)</title><rect x="822.9" y="581" width="0.3" height="15.0" fill="rgb(232,65,19)" rx="2" ry="2" />
<text  x="825.94" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (380 samples, 0.29%)</title><rect x="499.7" y="261" width="3.4" height="15.0" fill="rgb(244,73,8)" rx="2" ry="2" />
<text  x="502.71" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (12 samples, 0.01%)</title><rect x="124.7" y="325" width="0.1" height="15.0" fill="rgb(254,80,38)" rx="2" ry="2" />
<text  x="127.66" y="335.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (160 samples, 0.12%)</title><rect x="976.8" y="229" width="1.5" height="15.0" fill="rgb(249,155,0)" rx="2" ry="2" />
<text  x="979.83" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (193 samples, 0.15%)</title><rect x="884.5" y="293" width="1.8" height="15.0" fill="rgb(250,53,13)" rx="2" ry="2" />
<text  x="887.53" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;scythedb::Slice*, std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt; &gt;::__normal_iterator (17 samples, 0.01%)</title><rect x="131.8" y="261" width="0.1" height="15.0" fill="rgb(210,27,30)" rx="2" ry="2" />
<text  x="134.77" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::max_size (28 samples, 0.02%)</title><rect x="131.2" y="261" width="0.2" height="15.0" fill="rgb(216,122,52)" rx="2" ry="2" />
<text  x="134.19" y="271.5" ></text>
</g>
<g >
<title>ravl_emplace (59 samples, 0.05%)</title><rect x="1110.0" y="581" width="0.5" height="15.0" fill="rgb(224,166,47)" rx="2" ry="2" />
<text  x="1112.97" y="591.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (54 samples, 0.04%)</title><rect x="857.0" y="293" width="0.5" height="15.0" fill="rgb(236,63,0)" rx="2" ry="2" />
<text  x="859.99" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (13 samples, 0.01%)</title><rect x="961.4" y="117" width="0.1" height="15.0" fill="rgb(219,187,47)" rx="2" ry="2" />
<text  x="964.36" y="127.5" ></text>
</g>
<g >
<title>std::mutex::lock (169 samples, 0.13%)</title><rect x="991.6" y="229" width="1.5" height="15.0" fill="rgb(237,78,30)" rx="2" ry="2" />
<text  x="994.61" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (29 samples, 0.02%)</title><rect x="987.1" y="261" width="0.3" height="15.0" fill="rgb(252,224,41)" rx="2" ry="2" />
<text  x="990.14" y="271.5" ></text>
</g>
<g >
<title>all (131,001 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(221,211,37)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (44 samples, 0.03%)</title><rect x="1069.7" y="581" width="0.4" height="15.0" fill="rgb(223,22,35)" rx="2" ry="2" />
<text  x="1072.74" y="591.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="501" width="768.5" height="15.0" fill="rgb(243,224,1)" rx="2" ry="2" />
<text  x="13.14" y="511.5" >scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (164 samples, 0.13%)</title><rect x="1054.1" y="245" width="1.5" height="15.0" fill="rgb(221,7,33)" rx="2" ry="2" />
<text  x="1057.15" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (61 samples, 0.05%)</title><rect x="438.0" y="229" width="0.6" height="15.0" fill="rgb(244,125,24)" rx="2" ry="2" />
<text  x="441.04" y="239.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (27 samples, 0.02%)</title><rect x="964.5" y="197" width="0.2" height="15.0" fill="rgb(220,89,36)" rx="2" ry="2" />
<text  x="967.47" y="207.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (26 samples, 0.02%)</title><rect x="276.1" y="213" width="0.2" height="15.0" fill="rgb(228,135,20)" rx="2" ry="2" />
<text  x="279.10" y="223.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (497 samples, 0.38%)</title><rect x="1017.8" y="245" width="4.5" height="15.0" fill="rgb(216,10,7)" rx="2" ry="2" />
<text  x="1020.80" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~_Vector_base (67 samples, 0.05%)</title><rect x="455.2" y="325" width="0.6" height="15.0" fill="rgb(245,149,39)" rx="2" ry="2" />
<text  x="458.16" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (126 samples, 0.10%)</title><rect x="845.4" y="213" width="1.1" height="15.0" fill="rgb(219,166,48)" rx="2" ry="2" />
<text  x="848.41" y="223.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (90 samples, 0.07%)</title><rect x="869.8" y="213" width="0.9" height="15.0" fill="rgb(221,215,37)" rx="2" ry="2" />
<text  x="872.84" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (19 samples, 0.01%)</title><rect x="1032.7" y="245" width="0.2" height="15.0" fill="rgb(215,172,44)" rx="2" ry="2" />
<text  x="1035.71" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (41 samples, 0.03%)</title><rect x="425.5" y="277" width="0.4" height="15.0" fill="rgb(242,122,52)" rx="2" ry="2" />
<text  x="428.55" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (101 samples, 0.08%)</title><rect x="1051.7" y="213" width="0.9" height="15.0" fill="rgb(221,14,24)" rx="2" ry="2" />
<text  x="1054.72" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (34 samples, 0.03%)</title><rect x="946.4" y="277" width="0.3" height="15.0" fill="rgb(245,67,7)" rx="2" ry="2" />
<text  x="949.37" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (48 samples, 0.04%)</title><rect x="157.4" y="197" width="0.4" height="15.0" fill="rgb(228,93,42)" rx="2" ry="2" />
<text  x="160.39" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (43 samples, 0.03%)</title><rect x="905.4" y="261" width="0.4" height="15.0" fill="rgb(210,95,5)" rx="2" ry="2" />
<text  x="908.38" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (26,974 samples, 20.59%)</title><rect x="825.3" y="517" width="243.0" height="15.0" fill="rgb(246,59,42)" rx="2" ry="2" />
<text  x="828.33" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::operator++ (160 samples, 0.12%)</title><rect x="853.1" y="277" width="1.4" height="15.0" fill="rgb(207,3,21)" rx="2" ry="2" />
<text  x="856.08" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (64 samples, 0.05%)</title><rect x="430.0" y="277" width="0.5" height="15.0" fill="rgb(239,97,21)" rx="2" ry="2" />
<text  x="432.95" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (12 samples, 0.01%)</title><rect x="1037.5" y="197" width="0.1" height="15.0" fill="rgb(230,80,6)" rx="2" ry="2" />
<text  x="1040.46" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (40 samples, 0.03%)</title><rect x="148.9" y="133" width="0.3" height="15.0" fill="rgb(230,177,39)" rx="2" ry="2" />
<text  x="151.87" y="143.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (37 samples, 0.03%)</title><rect x="990.9" y="261" width="0.3" height="15.0" fill="rgb(214,102,4)" rx="2" ry="2" />
<text  x="993.85" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (18 samples, 0.01%)</title><rect x="871.5" y="261" width="0.2" height="15.0" fill="rgb(222,89,53)" rx="2" ry="2" />
<text  x="874.55" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (58 samples, 0.04%)</title><rect x="968.3" y="309" width="0.5" height="15.0" fill="rgb(236,76,41)" rx="2" ry="2" />
<text  x="971.30" y="319.5" ></text>
</g>
<g >
<title>ycsbc::CounterGenerator::Next (12 samples, 0.01%)</title><rect x="940.1" y="325" width="0.1" height="15.0" fill="rgb(208,101,46)" rx="2" ry="2" />
<text  x="943.09" y="335.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma.localalias.0 (244 samples, 0.19%)</title><rect x="1124.2" y="597" width="2.2" height="15.0" fill="rgb(246,40,20)" rx="2" ry="2" />
<text  x="1127.23" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (28 samples, 0.02%)</title><rect x="772.9" y="405" width="0.2" height="15.0" fill="rgb(209,222,54)" rx="2" ry="2" />
<text  x="775.89" y="415.5" ></text>
</g>
<g >
<title>pmemobj_tx_get_user_data (19 samples, 0.01%)</title><rect x="423.5" y="229" width="0.2" height="15.0" fill="rgb(241,197,52)" rx="2" ry="2" />
<text  x="426.55" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (83,388 samples, 63.65%)</title><rect x="26.4" y="469" width="751.2" height="15.0" fill="rgb(228,152,34)" rx="2" ry="2" />
<text  x="29.43" y="479.5" >std::function&lt;void </text>
</g>
<g >
<title>std::__shared_count&lt; (16 samples, 0.01%)</title><rect x="502.9" y="245" width="0.1" height="15.0" fill="rgb(250,1,20)" rx="2" ry="2" />
<text  x="505.89" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (15 samples, 0.01%)</title><rect x="949.8" y="213" width="0.2" height="15.0" fill="rgb(250,149,24)" rx="2" ry="2" />
<text  x="952.83" y="223.5" ></text>
</g>
<g >
<title>[unknown] (163 samples, 0.12%)</title><rect x="1116.4" y="533" width="1.5" height="15.0" fill="rgb(211,182,46)" rx="2" ry="2" />
<text  x="1119.44" y="543.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (26 samples, 0.02%)</title><rect x="403.6" y="213" width="0.3" height="15.0" fill="rgb(233,4,21)" rx="2" ry="2" />
<text  x="406.64" y="223.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="581" width="768.5" height="15.0" fill="rgb(237,221,32)" rx="2" ry="2" />
<text  x="13.14" y="591.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (437 samples, 0.33%)</title><rect x="975.2" y="309" width="3.9" height="15.0" fill="rgb(243,102,18)" rx="2" ry="2" />
<text  x="978.16" y="319.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (82,943 samples, 63.31%)</title><rect x="29.4" y="437" width="747.2" height="15.0" fill="rgb(219,216,34)" rx="2" ry="2" />
<text  x="32.44" y="447.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (54 samples, 0.04%)</title><rect x="878.0" y="133" width="0.5" height="15.0" fill="rgb(246,21,47)" rx="2" ry="2" />
<text  x="881.01" y="143.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (62 samples, 0.05%)</title><rect x="722.0" y="325" width="0.6" height="15.0" fill="rgb(223,158,3)" rx="2" ry="2" />
<text  x="724.99" y="335.5" ></text>
</g>
<g >
<title>operator new (21 samples, 0.02%)</title><rect x="909.1" y="245" width="0.2" height="15.0" fill="rgb(213,69,35)" rx="2" ry="2" />
<text  x="912.07" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (32 samples, 0.02%)</title><rect x="422.5" y="133" width="0.2" height="15.0" fill="rgb(244,53,14)" rx="2" ry="2" />
<text  x="425.46" y="143.5" ></text>
</g>
<g >
<title>std::atomic&lt;ycsbc::Operation&gt;::store (112 samples, 0.09%)</title><rect x="1059.3" y="277" width="1.0" height="15.0" fill="rgb(222,134,29)" rx="2" ry="2" />
<text  x="1062.32" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (20 samples, 0.02%)</title><rect x="904.2" y="277" width="0.2" height="15.0" fill="rgb(213,18,51)" rx="2" ry="2" />
<text  x="907.24" y="287.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextSequenceKey[abi:cxx11] (2,216 samples, 1.69%)</title><rect x="918.4" y="325" width="20.0" height="15.0" fill="rgb(209,224,2)" rx="2" ry="2" />
<text  x="921.39" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (22 samples, 0.02%)</title><rect x="924.8" y="277" width="0.2" height="15.0" fill="rgb(207,142,21)" rx="2" ry="2" />
<text  x="927.75" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (121 samples, 0.09%)</title><rect x="876.9" y="117" width="1.1" height="15.0" fill="rgb(239,149,26)" rx="2" ry="2" />
<text  x="879.91" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13 samples, 0.01%)</title><rect x="432.9" y="245" width="0.1" height="15.0" fill="rgb(246,199,54)" rx="2" ry="2" />
<text  x="435.91" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (42 samples, 0.03%)</title><rect x="911.9" y="213" width="0.3" height="15.0" fill="rgb(206,192,32)" rx="2" ry="2" />
<text  x="914.86" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (185 samples, 0.14%)</title><rect x="45.1" y="261" width="1.6" height="15.0" fill="rgb(217,141,33)" rx="2" ry="2" />
<text  x="48.06" y="271.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (15 samples, 0.01%)</title><rect x="133.6" y="293" width="0.2" height="15.0" fill="rgb(222,124,18)" rx="2" ry="2" />
<text  x="136.63" y="303.5" ></text>
</g>
<g >
<title>std::__addressof&lt;scythedb::NVMBlock::NVMBlock (30 samples, 0.02%)</title><rect x="405.7" y="197" width="0.2" height="15.0" fill="rgb(219,97,26)" rx="2" ry="2" />
<text  x="408.66" y="207.5" ></text>
</g>
<g >
<title>XXH64_avalanche (20 samples, 0.02%)</title><rect x="855.7" y="197" width="0.2" height="15.0" fill="rgb(217,171,40)" rx="2" ry="2" />
<text  x="858.70" y="207.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoInsert (15 samples, 0.01%)</title><rect x="825.3" y="357" width="0.2" height="15.0" fill="rgb(209,213,14)" rx="2" ry="2" />
<text  x="828.33" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (12 samples, 0.01%)</title><rect x="1029.0" y="261" width="0.1" height="15.0" fill="rgb(238,38,25)" rx="2" ry="2" />
<text  x="1032.03" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul, true, true&gt;::__calc (29 samples, 0.02%)</title><rect x="1066.9" y="181" width="0.3" height="15.0" fill="rgb(217,99,45)" rx="2" ry="2" />
<text  x="1069.91" y="191.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::size_approx (1,050 samples, 0.80%)</title><rect x="465.8" y="341" width="9.5" height="15.0" fill="rgb(206,51,39)" rx="2" ry="2" />
<text  x="468.83" y="351.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (29 samples, 0.02%)</title><rect x="936.5" y="277" width="0.3" height="15.0" fill="rgb(233,61,44)" rx="2" ry="2" />
<text  x="939.51" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (12 samples, 0.01%)</title><rect x="902.1" y="213" width="0.1" height="15.0" fill="rgb(208,72,46)" rx="2" ry="2" />
<text  x="905.13" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (85 samples, 0.06%)</title><rect x="979.8" y="181" width="0.8" height="15.0" fill="rgb(227,141,3)" rx="2" ry="2" />
<text  x="982.81" y="191.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (122 samples, 0.09%)</title><rect x="400.7" y="149" width="1.1" height="15.0" fill="rgb(228,153,51)" rx="2" ry="2" />
<text  x="403.73" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (44 samples, 0.03%)</title><rect x="1036.7" y="149" width="0.4" height="15.0" fill="rgb(229,148,44)" rx="2" ry="2" />
<text  x="1039.70" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25 samples, 0.02%)</title><rect x="1000.3" y="197" width="0.2" height="15.0" fill="rgb(214,17,19)" rx="2" ry="2" />
<text  x="1003.27" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (31 samples, 0.02%)</title><rect x="1037.8" y="261" width="0.3" height="15.0" fill="rgb(237,22,13)" rx="2" ry="2" />
<text  x="1040.78" y="271.5" ></text>
</g>
<g >
<title>block_get_real_size (17 samples, 0.01%)</title><rect x="1074.2" y="565" width="0.1" height="15.0" fill="rgb(236,151,49)" rx="2" ry="2" />
<text  x="1077.15" y="575.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (30 samples, 0.02%)</title><rect x="954.6" y="277" width="0.3" height="15.0" fill="rgb(250,27,5)" rx="2" ry="2" />
<text  x="957.64" y="287.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (40 samples, 0.03%)</title><rect x="1128.3" y="597" width="0.4" height="15.0" fill="rgb(207,83,41)" rx="2" ry="2" />
<text  x="1131.30" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (25 samples, 0.02%)</title><rect x="1025.7" y="181" width="0.2" height="15.0" fill="rgb(252,185,30)" rx="2" ry="2" />
<text  x="1028.68" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (208 samples, 0.16%)</title><rect x="837.8" y="229" width="1.9" height="15.0" fill="rgb(253,12,51)" rx="2" ry="2" />
<text  x="840.82" y="239.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (133 samples, 0.10%)</title><rect x="795.9" y="549" width="1.2" height="15.0" fill="rgb(238,158,1)" rx="2" ry="2" />
<text  x="798.93" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (26 samples, 0.02%)</title><rect x="433.1" y="277" width="0.3" height="15.0" fill="rgb(220,46,8)" rx="2" ry="2" />
<text  x="436.13" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (379 samples, 0.29%)</title><rect x="912.5" y="213" width="3.4" height="15.0" fill="rgb(242,143,29)" rx="2" ry="2" />
<text  x="915.47" y="223.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextOperation (1,130 samples, 0.86%)</title><rect x="1057.7" y="325" width="10.1" height="15.0" fill="rgb(219,97,37)" rx="2" ry="2" />
<text  x="1060.66" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (129 samples, 0.10%)</title><rect x="1048.0" y="277" width="1.1" height="15.0" fill="rgb(205,61,1)" rx="2" ry="2" />
<text  x="1050.97" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_realloc_insert&lt;scythedb::Slice&gt; (635 samples, 0.48%)</title><rect x="126.3" y="293" width="5.7" height="15.0" fill="rgb(211,30,9)" rx="2" ry="2" />
<text  x="129.30" y="303.5" ></text>
</g>
<g >
<title>vfprintf (57 samples, 0.04%)</title><rect x="823.7" y="565" width="0.5" height="15.0" fill="rgb(230,61,51)" rx="2" ry="2" />
<text  x="826.73" y="575.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (22 samples, 0.02%)</title><rect x="151.8" y="277" width="0.2" height="15.0" fill="rgb(244,220,24)" rx="2" ry="2" />
<text  x="154.75" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (31 samples, 0.02%)</title><rect x="905.1" y="261" width="0.3" height="15.0" fill="rgb(227,139,45)" rx="2" ry="2" />
<text  x="908.09" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (17 samples, 0.01%)</title><rect x="881.6" y="309" width="0.1" height="15.0" fill="rgb(229,140,52)" rx="2" ry="2" />
<text  x="884.56" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (3,851 samples, 2.94%)</title><rect x="75.2" y="261" width="34.7" height="15.0" fill="rgb(229,68,7)" rx="2" ry="2" />
<text  x="78.22" y="271.5" >st..</text>
</g>
<g >
<title>std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~allocator (13 samples, 0.01%)</title><rect x="875.2" y="181" width="0.1" height="15.0" fill="rgb(244,210,44)" rx="2" ry="2" />
<text  x="878.19" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (578 samples, 0.44%)</title><rect x="1033.1" y="293" width="5.2" height="15.0" fill="rgb(217,168,33)" rx="2" ry="2" />
<text  x="1036.08" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (13 samples, 0.01%)</title><rect x="1023.9" y="261" width="0.1" height="15.0" fill="rgb(213,162,18)" rx="2" ry="2" />
<text  x="1026.93" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (162 samples, 0.12%)</title><rect x="901.1" y="293" width="1.5" height="15.0" fill="rgb(236,10,3)" rx="2" ry="2" />
<text  x="904.15" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (14 samples, 0.01%)</title><rect x="871.3" y="277" width="0.2" height="15.0" fill="rgb(224,76,46)" rx="2" ry="2" />
<text  x="874.33" y="287.5" ></text>
</g>
<g >
<title>palloc_mem_action_noop (13 samples, 0.01%)</title><rect x="1166.6" y="597" width="0.1" height="15.0" fill="rgb(219,161,0)" rx="2" ry="2" />
<text  x="1169.61" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (349 samples, 0.27%)</title><rect x="722.6" y="357" width="3.1" height="15.0" fill="rgb(213,43,53)" rx="2" ry="2" />
<text  x="725.55" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (63 samples, 0.05%)</title><rect x="1044.2" y="261" width="0.6" height="15.0" fill="rgb(225,202,4)" rx="2" ry="2" />
<text  x="1047.19" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (234 samples, 0.18%)</title><rect x="930.0" y="293" width="2.1" height="15.0" fill="rgb(237,175,10)" rx="2" ry="2" />
<text  x="932.95" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (80 samples, 0.06%)</title><rect x="1016.2" y="181" width="0.7" height="15.0" fill="rgb(227,144,2)" rx="2" ry="2" />
<text  x="1019.21" y="191.5" ></text>
</g>
<g >
<title>__sched_yield (4,958 samples, 3.78%)</title><rect x="726.0" y="341" width="44.6" height="15.0" fill="rgb(234,141,40)" rx="2" ry="2" />
<text  x="728.97" y="351.5" >__sc..</text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::insert_block_index_entry&lt; (12 samples, 0.01%)</title><rect x="860.2" y="229" width="0.1" height="15.0" fill="rgb(217,127,7)" rx="2" ry="2" />
<text  x="863.22" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (28 samples, 0.02%)</title><rect x="898.0" y="277" width="0.2" height="15.0" fill="rgb(239,29,45)" rx="2" ry="2" />
<text  x="900.97" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (97 samples, 0.07%)</title><rect x="721.7" y="341" width="0.9" height="15.0" fill="rgb(249,103,23)" rx="2" ry="2" />
<text  x="724.68" y="351.5" ></text>
</g>
<g >
<title>_int_malloc (69 samples, 0.05%)</title><rect x="1140.7" y="597" width="0.7" height="15.0" fill="rgb(215,60,52)" rx="2" ry="2" />
<text  x="1143.73" y="607.5" ></text>
</g>
<g >
<title>__lll_unlock_wake_private (20 samples, 0.02%)</title><rect x="1026.8" y="293" width="0.2" height="15.0" fill="rgb(238,189,32)" rx="2" ry="2" />
<text  x="1029.80" y="303.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (127 samples, 0.10%)</title><rect x="719.7" y="357" width="1.1" height="15.0" fill="rgb(222,30,33)" rx="2" ry="2" />
<text  x="722.69" y="367.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (16 samples, 0.01%)</title><rect x="1007.0" y="229" width="0.1" height="15.0" fill="rgb(214,41,47)" rx="2" ry="2" />
<text  x="1009.98" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (7,554 samples, 5.77%)</title><rect x="43.5" y="309" width="68.0" height="15.0" fill="rgb(235,22,28)" rx="2" ry="2" />
<text  x="46.50" y="319.5" >scythed..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (64 samples, 0.05%)</title><rect x="965.1" y="117" width="0.5" height="15.0" fill="rgb(239,169,18)" rx="2" ry="2" />
<text  x="968.07" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (281 samples, 0.21%)</title><rect x="837.8" y="245" width="2.5" height="15.0" fill="rgb(238,146,47)" rx="2" ry="2" />
<text  x="840.80" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (588 samples, 0.45%)</title><rect x="858.6" y="261" width="5.3" height="15.0" fill="rgb(210,77,47)" rx="2" ry="2" />
<text  x="861.60" y="271.5" ></text>
</g>
<g >
<title>_int_free (20 samples, 0.02%)</title><rect x="1069.5" y="581" width="0.1" height="15.0" fill="rgb(219,192,13)" rx="2" ry="2" />
<text  x="1072.47" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (41 samples, 0.03%)</title><rect x="846.5" y="213" width="0.4" height="15.0" fill="rgb(224,151,37)" rx="2" ry="2" />
<text  x="849.54" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (659 samples, 0.50%)</title><rect x="841.2" y="229" width="5.9" height="15.0" fill="rgb(243,195,49)" rx="2" ry="2" />
<text  x="844.17" y="239.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (81 samples, 0.06%)</title><rect x="156.3" y="165" width="0.8" height="15.0" fill="rgb(224,217,51)" rx="2" ry="2" />
<text  x="159.35" y="175.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (364 samples, 0.28%)</title><rect x="991.5" y="261" width="3.3" height="15.0" fill="rgb(211,9,5)" rx="2" ry="2" />
<text  x="994.47" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::swap (40 samples, 0.03%)</title><rect x="415.1" y="245" width="0.4" height="15.0" fill="rgb(214,224,39)" rx="2" ry="2" />
<text  x="418.13" y="255.5" ></text>
</g>
<g >
<title>scythedb_bench (131,001 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(215,9,8)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >scythedb_bench</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (660 samples, 0.50%)</title><rect x="910.9" y="277" width="6.0" height="15.0" fill="rgb(250,211,50)" rx="2" ry="2" />
<text  x="913.93" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14 samples, 0.01%)</title><rect x="1029.9" y="245" width="0.2" height="15.0" fill="rgb(215,180,8)" rx="2" ry="2" />
<text  x="1032.93" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (14 samples, 0.01%)</title><rect x="841.7" y="213" width="0.1" height="15.0" fill="rgb(233,175,31)" rx="2" ry="2" />
<text  x="844.66" y="223.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (176 samples, 0.13%)</title><rect x="860.8" y="197" width="1.6" height="15.0" fill="rgb(229,224,6)" rx="2" ry="2" />
<text  x="863.84" y="207.5" ></text>
</g>
<g >
<title>pmem_memset (29 samples, 0.02%)</title><rect x="1091.5" y="581" width="0.3" height="15.0" fill="rgb(211,52,25)" rx="2" ry="2" />
<text  x="1094.55" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (30 samples, 0.02%)</title><rect x="843.0" y="213" width="0.3" height="15.0" fill="rgb(252,198,6)" rx="2" ry="2" />
<text  x="846.02" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (29 samples, 0.02%)</title><rect x="884.1" y="325" width="0.3" height="15.0" fill="rgb(233,125,3)" rx="2" ry="2" />
<text  x="887.12" y="335.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (307 samples, 0.23%)</title><rect x="1010.9" y="277" width="2.8" height="15.0" fill="rgb(230,4,41)" rx="2" ry="2" />
<text  x="1013.90" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (344 samples, 0.26%)</title><rect x="111.9" y="309" width="3.1" height="15.0" fill="rgb(209,157,47)" rx="2" ry="2" />
<text  x="114.92" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (13 samples, 0.01%)</title><rect x="47.0" y="277" width="0.1" height="15.0" fill="rgb(225,208,2)" rx="2" ry="2" />
<text  x="49.98" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_deallocate (53 samples, 0.04%)</title><rect x="128.0" y="277" width="0.5" height="15.0" fill="rgb(242,211,54)" rx="2" ry="2" />
<text  x="131.01" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (61 samples, 0.05%)</title><rect x="424.6" y="229" width="0.6" height="15.0" fill="rgb(231,109,17)" rx="2" ry="2" />
<text  x="427.65" y="239.5" ></text>
</g>
<g >
<title>XXH_readLE64_align (31 samples, 0.02%)</title><rect x="856.3" y="197" width="0.3" height="15.0" fill="rgb(248,12,3)" rx="2" ry="2" />
<text  x="859.34" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (33 samples, 0.03%)</title><rect x="1036.8" y="117" width="0.3" height="15.0" fill="rgb(211,128,10)" rx="2" ry="2" />
<text  x="1039.75" y="127.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (220 samples, 0.17%)</title><rect x="1020.2" y="197" width="1.9" height="15.0" fill="rgb(247,218,5)" rx="2" ry="2" />
<text  x="1023.15" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (412 samples, 0.31%)</title><rect x="932.7" y="261" width="3.8" height="15.0" fill="rgb(230,141,31)" rx="2" ry="2" />
<text  x="935.74" y="271.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::write_all_fields (15 samples, 0.01%)</title><rect x="1057.4" y="309" width="0.2" height="15.0" fill="rgb(232,107,24)" rx="2" ry="2" />
<text  x="1060.44" y="319.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (29 samples, 0.02%)</title><rect x="118.8" y="293" width="0.3" height="15.0" fill="rgb(251,140,20)" rx="2" ry="2" />
<text  x="121.83" y="303.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (661 samples, 0.50%)</title><rect x="387.7" y="149" width="5.9" height="15.0" fill="rgb(237,44,12)" rx="2" ry="2" />
<text  x="390.66" y="159.5" ></text>
</g>
<g >
<title>XXH64_endian_align (91 samples, 0.07%)</title><rect x="953.3" y="213" width="0.8" height="15.0" fill="rgb(246,117,43)" rx="2" ry="2" />
<text  x="956.28" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (23 samples, 0.02%)</title><rect x="1005.7" y="245" width="0.2" height="15.0" fill="rgb(248,5,49)" rx="2" ry="2" />
<text  x="1008.71" y="255.5" ></text>
</g>
<g >
<title>_int_free (50 samples, 0.04%)</title><rect x="1002.9" y="149" width="0.4" height="15.0" fill="rgb(226,126,46)" rx="2" ry="2" />
<text  x="1005.89" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (41 samples, 0.03%)</title><rect x="987.7" y="245" width="0.4" height="15.0" fill="rgb(249,16,34)" rx="2" ry="2" />
<text  x="990.72" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (594 samples, 0.45%)</title><rect x="449.4" y="341" width="5.3" height="15.0" fill="rgb(214,12,51)" rx="2" ry="2" />
<text  x="452.38" y="351.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.01%)</title><rect x="865.3" y="245" width="0.1" height="15.0" fill="rgb(235,96,9)" rx="2" ry="2" />
<text  x="868.28" y="255.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (15 samples, 0.01%)</title><rect x="882.1" y="325" width="0.1" height="15.0" fill="rgb(247,180,53)" rx="2" ry="2" />
<text  x="885.11" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (30 samples, 0.02%)</title><rect x="897.2" y="245" width="0.3" height="15.0" fill="rgb(243,185,36)" rx="2" ry="2" />
<text  x="900.24" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (97 samples, 0.07%)</title><rect x="969.0" y="277" width="0.9" height="15.0" fill="rgb(248,111,38)" rx="2" ry="2" />
<text  x="972.04" y="287.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (23 samples, 0.02%)</title><rect x="121.0" y="309" width="0.2" height="15.0" fill="rgb(239,73,43)" rx="2" ry="2" />
<text  x="124.01" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (46 samples, 0.04%)</title><rect x="908.8" y="261" width="0.5" height="15.0" fill="rgb(242,16,21)" rx="2" ry="2" />
<text  x="911.85" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::allocate (12 samples, 0.01%)</title><rect x="42.3" y="261" width="0.1" height="15.0" fill="rgb(221,103,18)" rx="2" ry="2" />
<text  x="45.31" y="271.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (22 samples, 0.02%)</title><rect x="1034.9" y="197" width="0.2" height="15.0" fill="rgb(249,82,21)" rx="2" ry="2" />
<text  x="1037.93" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (124 samples, 0.09%)</title><rect x="882.6" y="325" width="1.1" height="15.0" fill="rgb(223,22,40)" rx="2" ry="2" />
<text  x="885.60" y="335.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.01%)</title><rect x="897.0" y="229" width="0.1" height="15.0" fill="rgb(205,101,40)" rx="2" ry="2" />
<text  x="899.97" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (151 samples, 0.12%)</title><rect x="909.5" y="277" width="1.4" height="15.0" fill="rgb(211,210,12)" rx="2" ry="2" />
<text  x="912.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15 samples, 0.01%)</title><rect x="432.0" y="229" width="0.1" height="15.0" fill="rgb(220,119,5)" rx="2" ry="2" />
<text  x="434.98" y="239.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (16 samples, 0.01%)</title><rect x="858.1" y="293" width="0.2" height="15.0" fill="rgb(243,117,24)" rx="2" ry="2" />
<text  x="861.13" y="303.5" ></text>
</g>
<g >
<title>ycsbc::UniformGenerator::Next (140 samples, 0.11%)</title><rect x="1042.5" y="277" width="1.3" height="15.0" fill="rgb(223,74,27)" rx="2" ry="2" />
<text  x="1045.55" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (54 samples, 0.04%)</title><rect x="928.3" y="229" width="0.5" height="15.0" fill="rgb(209,130,51)" rx="2" ry="2" />
<text  x="931.29" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (145 samples, 0.11%)</title><rect x="979.5" y="245" width="1.3" height="15.0" fill="rgb(207,180,7)" rx="2" ry="2" />
<text  x="982.50" y="255.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (100 samples, 0.08%)</title><rect x="154.4" y="261" width="0.9" height="15.0" fill="rgb(243,202,34)" rx="2" ry="2" />
<text  x="157.43" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::Slice&gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (12 samples, 0.01%)</title><rect x="130.6" y="261" width="0.1" height="15.0" fill="rgb(206,155,29)" rx="2" ry="2" />
<text  x="133.63" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (176 samples, 0.13%)</title><rect x="724.1" y="293" width="1.6" height="15.0" fill="rgb(248,228,54)" rx="2" ry="2" />
<text  x="727.09" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="915.9" y="213" width="0.2" height="15.0" fill="rgb(230,101,5)" rx="2" ry="2" />
<text  x="918.94" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (23 samples, 0.02%)</title><rect x="1050.6" y="229" width="0.2" height="15.0" fill="rgb(205,17,3)" rx="2" ry="2" />
<text  x="1053.63" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (2,165 samples, 1.65%)</title><rect x="47.2" y="261" width="19.5" height="15.0" fill="rgb(254,12,43)" rx="2" ry="2" />
<text  x="50.19" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (12 samples, 0.01%)</title><rect x="1044.3" y="229" width="0.1" height="15.0" fill="rgb(217,101,49)" rx="2" ry="2" />
<text  x="1047.34" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (62 samples, 0.05%)</title><rect x="1049.3" y="229" width="0.6" height="15.0" fill="rgb(225,180,41)" rx="2" ry="2" />
<text  x="1052.29" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (61 samples, 0.05%)</title><rect x="958.3" y="261" width="0.6" height="15.0" fill="rgb(241,6,17)" rx="2" ry="2" />
<text  x="961.34" y="271.5" ></text>
</g>
<g >
<title>run_get_data_start (22 samples, 0.02%)</title><rect x="1113.2" y="581" width="0.2" height="15.0" fill="rgb(227,194,49)" rx="2" ry="2" />
<text  x="1116.18" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (280 samples, 0.21%)</title><rect x="927.4" y="293" width="2.5" height="15.0" fill="rgb(247,220,46)" rx="2" ry="2" />
<text  x="930.42" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (26 samples, 0.02%)</title><rect x="983.6" y="229" width="0.2" height="15.0" fill="rgb(243,100,43)" rx="2" ry="2" />
<text  x="986.58" y="239.5" ></text>
</g>
<g >
<title>XXH64_round (18 samples, 0.01%)</title><rect x="953.7" y="181" width="0.2" height="15.0" fill="rgb(218,117,5)" rx="2" ry="2" />
<text  x="956.74" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;void  (128 samples, 0.10%)</title><rect x="148.7" y="149" width="1.2" height="15.0" fill="rgb(253,189,0)" rx="2" ry="2" />
<text  x="151.73" y="159.5" ></text>
</g>
<g >
<title>ycsbc::DelegateClient (26,932 samples, 20.56%)</title><rect x="825.7" y="357" width="242.6" height="15.0" fill="rgb(224,30,12)" rx="2" ry="2" />
<text  x="828.71" y="367.5" >ycsbc::DelegateClient</text>
</g>
<g >
<title>__lll_unlock_wake_private (76 samples, 0.06%)</title><rect x="888.2" y="309" width="0.7" height="15.0" fill="rgb(226,54,19)" rx="2" ry="2" />
<text  x="891.17" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="983.8" y="229" width="0.1" height="15.0" fill="rgb(210,174,54)" rx="2" ry="2" />
<text  x="986.82" y="239.5" ></text>
</g>
<g >
<title>utils::RandomDouble (262 samples, 0.20%)</title><rect x="1065.5" y="293" width="2.3" height="15.0" fill="rgb(242,175,12)" rx="2" ry="2" />
<text  x="1068.48" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (12 samples, 0.01%)</title><rect x="847.9" y="165" width="0.1" height="15.0" fill="rgb(237,171,7)" rx="2" ry="2" />
<text  x="850.91" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (38 samples, 0.03%)</title><rect x="1039.7" y="229" width="0.3" height="15.0" fill="rgb(235,175,48)" rx="2" ry="2" />
<text  x="1042.68" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (22 samples, 0.02%)</title><rect x="980.6" y="181" width="0.2" height="15.0" fill="rgb(219,122,36)" rx="2" ry="2" />
<text  x="983.57" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (3,040 samples, 2.32%)</title><rect x="249.0" y="229" width="27.4" height="15.0" fill="rgb(225,199,36)" rx="2" ry="2" />
<text  x="251.99" y="239.5" >p..</text>
</g>
<g >
<title>__random (329 samples, 0.25%)</title><rect x="888.9" y="309" width="2.9" height="15.0" fill="rgb(250,77,12)" rx="2" ry="2" />
<text  x="891.85" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (29 samples, 0.02%)</title><rect x="1129.2" y="597" width="0.3" height="15.0" fill="rgb(210,4,17)" rx="2" ry="2" />
<text  x="1132.19" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;scythedb::Slice*, std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt; &gt; (13 samples, 0.01%)</title><rect x="127.0" y="277" width="0.1" height="15.0" fill="rgb(250,28,26)" rx="2" ry="2" />
<text  x="130.02" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block::set_empty&lt; (214 samples, 0.16%)</title><rect x="495.8" y="293" width="1.9" height="15.0" fill="rgb(246,108,15)" rx="2" ry="2" />
<text  x="498.78" y="303.5" ></text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (89 samples, 0.07%)</title><rect x="1169.0" y="597" width="0.8" height="15.0" fill="rgb(219,107,49)" rx="2" ry="2" />
<text  x="1171.96" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (179 samples, 0.14%)</title><rect x="431.0" y="261" width="1.7" height="15.0" fill="rgb(254,144,12)" rx="2" ry="2" />
<text  x="434.05" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (132 samples, 0.10%)</title><rect x="878.8" y="165" width="1.2" height="15.0" fill="rgb(225,69,3)" rx="2" ry="2" />
<text  x="881.80" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20 samples, 0.02%)</title><rect x="977.9" y="197" width="0.2" height="15.0" fill="rgb(233,37,35)" rx="2" ry="2" />
<text  x="980.88" y="207.5" ></text>
</g>
<g >
<title>__condvar_confirm_wakeup (45 samples, 0.03%)</title><rect x="1119.4" y="597" width="0.4" height="15.0" fill="rgb(216,73,40)" rx="2" ry="2" />
<text  x="1122.37" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (38 samples, 0.03%)</title><rect x="882.9" y="293" width="0.3" height="15.0" fill="rgb(213,156,32)" rx="2" ry="2" />
<text  x="885.88" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (102 samples, 0.08%)</title><rect x="156.2" y="197" width="0.9" height="15.0" fill="rgb(230,33,20)" rx="2" ry="2" />
<text  x="159.20" y="207.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;scythedb::Slice, std::move_iterator&lt;scythedb::Slice*&gt; &gt; (57 samples, 0.04%)</title><rect x="128.8" y="261" width="0.5" height="15.0" fill="rgb(254,35,16)" rx="2" ry="2" />
<text  x="131.83" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (17 samples, 0.01%)</title><rect x="988.4" y="261" width="0.2" height="15.0" fill="rgb(224,192,4)" rx="2" ry="2" />
<text  x="991.45" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (13 samples, 0.01%)</title><rect x="1129.1" y="597" width="0.1" height="15.0" fill="rgb(210,39,30)" rx="2" ry="2" />
<text  x="1132.07" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (316 samples, 0.24%)</title><rect x="924.6" y="293" width="2.8" height="15.0" fill="rgb(227,139,12)" rx="2" ry="2" />
<text  x="927.57" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (102 samples, 0.08%)</title><rect x="1012.0" y="213" width="0.9" height="15.0" fill="rgb(215,84,41)" rx="2" ry="2" />
<text  x="1015.01" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (213 samples, 0.16%)</title><rect x="902.7" y="309" width="2.0" height="15.0" fill="rgb(214,8,12)" rx="2" ry="2" />
<text  x="905.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (28 samples, 0.02%)</title><rect x="897.5" y="261" width="0.3" height="15.0" fill="rgb(212,222,7)" rx="2" ry="2" />
<text  x="900.52" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (84 samples, 0.06%)</title><rect x="845.6" y="197" width="0.7" height="15.0" fill="rgb(226,108,46)" rx="2" ry="2" />
<text  x="848.56" y="207.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (62 samples, 0.05%)</title><rect x="961.0" y="149" width="0.6" height="15.0" fill="rgb(239,159,34)" rx="2" ry="2" />
<text  x="964.05" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (67 samples, 0.05%)</title><rect x="1044.1" y="277" width="0.7" height="15.0" fill="rgb(251,179,51)" rx="2" ry="2" />
<text  x="1047.15" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14 samples, 0.01%)</title><rect x="1031.1" y="277" width="0.2" height="15.0" fill="rgb(245,14,44)" rx="2" ry="2" />
<text  x="1034.12" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (257 samples, 0.20%)</title><rect x="1015.2" y="245" width="2.3" height="15.0" fill="rgb(246,206,5)" rx="2" ry="2" />
<text  x="1018.19" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (150 samples, 0.11%)</title><rect x="933.4" y="197" width="1.4" height="15.0" fill="rgb(235,206,31)" rx="2" ry="2" />
<text  x="936.43" y="207.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (89 samples, 0.07%)</title><rect x="1034.4" y="261" width="0.8" height="15.0" fill="rgb(254,68,30)" rx="2" ry="2" />
<text  x="1037.44" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (157 samples, 0.12%)</title><rect x="721.1" y="357" width="1.5" height="15.0" fill="rgb(235,93,53)" rx="2" ry="2" />
<text  x="724.14" y="367.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (486 samples, 0.37%)</title><rect x="1169.8" y="597" width="4.4" height="15.0" fill="rgb(213,182,28)" rx="2" ry="2" />
<text  x="1172.80" y="607.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (38 samples, 0.03%)</title><rect x="1168.6" y="597" width="0.4" height="15.0" fill="rgb(209,128,37)" rx="2" ry="2" />
<text  x="1171.62" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (122 samples, 0.09%)</title><rect x="124.8" y="309" width="1.1" height="15.0" fill="rgb(219,188,7)" rx="2" ry="2" />
<text  x="127.77" y="319.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Put (5,891 samples, 4.50%)</title><rect x="828.7" y="325" width="53.0" height="15.0" fill="rgb(240,139,33)" rx="2" ry="2" />
<text  x="831.65" y="335.5" >scyth..</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (96 samples, 0.07%)</title><rect x="129.5" y="245" width="0.9" height="15.0" fill="rgb(247,102,26)" rx="2" ry="2" />
<text  x="132.49" y="255.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::_M_gen_rand (49 samples, 0.04%)</title><rect x="1043.0" y="213" width="0.5" height="15.0" fill="rgb(239,195,47)" rx="2" ry="2" />
<text  x="1046.04" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;int  (135 samples, 0.10%)</title><rect x="160.8" y="261" width="1.2" height="15.0" fill="rgb(241,72,50)" rx="2" ry="2" />
<text  x="163.81" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (67 samples, 0.05%)</title><rect x="139.5" y="197" width="0.6" height="15.0" fill="rgb(212,185,52)" rx="2" ry="2" />
<text  x="142.54" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15 samples, 0.01%)</title><rect x="446.3" y="261" width="0.2" height="15.0" fill="rgb(227,155,6)" rx="2" ry="2" />
<text  x="449.32" y="271.5" ></text>
</g>
<g >
<title>__tls_get_addr (15 samples, 0.01%)</title><rect x="419.3" y="245" width="0.1" height="15.0" fill="rgb(245,202,16)" rx="2" ry="2" />
<text  x="422.26" y="255.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;scythedb::Slice*&gt;::base (21 samples, 0.02%)</title><rect x="130.1" y="181" width="0.2" height="15.0" fill="rgb(232,186,40)" rx="2" ry="2" />
<text  x="133.11" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (938 samples, 0.72%)</title><rect x="871.9" y="245" width="8.4" height="15.0" fill="rgb(217,134,18)" rx="2" ry="2" />
<text  x="874.88" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (19 samples, 0.01%)</title><rect x="839.9" y="213" width="0.1" height="15.0" fill="rgb(233,71,25)" rx="2" ry="2" />
<text  x="842.86" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (33 samples, 0.03%)</title><rect x="1041.2" y="245" width="0.3" height="15.0" fill="rgb(215,58,16)" rx="2" ry="2" />
<text  x="1044.18" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (30 samples, 0.02%)</title><rect x="401.8" y="165" width="0.3" height="15.0" fill="rgb(228,224,28)" rx="2" ry="2" />
<text  x="404.83" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::standard_alloc_policy&lt;char&gt;::allocate (123 samples, 0.09%)</title><rect x="141.5" y="181" width="1.1" height="15.0" fill="rgb(208,149,54)" rx="2" ry="2" />
<text  x="144.50" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (101 samples, 0.08%)</title><rect x="1012.0" y="197" width="0.9" height="15.0" fill="rgb(216,191,53)" rx="2" ry="2" />
<text  x="1015.02" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (21 samples, 0.02%)</title><rect x="900.7" y="277" width="0.2" height="15.0" fill="rgb(246,214,33)" rx="2" ry="2" />
<text  x="903.70" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (33 samples, 0.03%)</title><rect x="425.6" y="245" width="0.3" height="15.0" fill="rgb(241,83,49)" rx="2" ry="2" />
<text  x="428.62" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (45 samples, 0.03%)</title><rect x="402.3" y="165" width="0.4" height="15.0" fill="rgb(224,7,34)" rx="2" ry="2" />
<text  x="405.32" y="175.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (63 samples, 0.05%)</title><rect x="1056.8" y="229" width="0.5" height="15.0" fill="rgb(225,141,2)" rx="2" ry="2" />
<text  x="1059.78" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (89 samples, 0.07%)</title><rect x="1051.7" y="197" width="0.8" height="15.0" fill="rgb(220,141,44)" rx="2" ry="2" />
<text  x="1054.74" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (18 samples, 0.01%)</title><rect x="1044.5" y="213" width="0.1" height="15.0" fill="rgb(219,131,42)" rx="2" ry="2" />
<text  x="1047.46" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (19 samples, 0.01%)</title><rect x="939.3" y="229" width="0.2" height="15.0" fill="rgb(219,159,8)" rx="2" ry="2" />
<text  x="942.30" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (22 samples, 0.02%)</title><rect x="276.4" y="229" width="0.2" height="15.0" fill="rgb(241,138,28)" rx="2" ry="2" />
<text  x="279.37" y="239.5" ></text>
</g>
<g >
<title>constructor_tx_alloc (12 samples, 0.01%)</title><rect x="1074.4" y="565" width="0.1" height="15.0" fill="rgb(248,123,6)" rx="2" ry="2" />
<text  x="1077.41" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistNext (137 samples, 0.10%)</title><rect x="156.1" y="213" width="1.2" height="15.0" fill="rgb(242,20,54)" rx="2" ry="2" />
<text  x="159.11" y="223.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::param_type::a (13 samples, 0.01%)</title><rect x="1067.5" y="245" width="0.1" height="15.0" fill="rgb(248,83,41)" rx="2" ry="2" />
<text  x="1070.52" y="255.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;, std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (23 samples, 0.02%)</title><rect x="145.9" y="53" width="0.2" height="15.0" fill="rgb(221,111,31)" rx="2" ry="2" />
<text  x="148.89" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.01%)</title><rect x="1049.7" y="197" width="0.1" height="15.0" fill="rgb(210,213,13)" rx="2" ry="2" />
<text  x="1052.67" y="207.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;scythedb::InternalNode, pmem::obj::persistent_ptr&lt;char&gt; const&amp;, decltype (76 samples, 0.06%)</title><rect x="413.9" y="245" width="0.7" height="15.0" fill="rgb(212,161,26)" rx="2" ry="2" />
<text  x="416.92" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (23 samples, 0.02%)</title><rect x="1049.6" y="213" width="0.2" height="15.0" fill="rgb(220,206,47)" rx="2" ry="2" />
<text  x="1052.61" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (183 samples, 0.14%)</title><rect x="724.0" y="309" width="1.7" height="15.0" fill="rgb(209,84,20)" rx="2" ry="2" />
<text  x="727.05" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (262 samples, 0.20%)</title><rect x="1035.3" y="245" width="2.3" height="15.0" fill="rgb(227,128,45)" rx="2" ry="2" />
<text  x="1038.29" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (22 samples, 0.02%)</title><rect x="903.3" y="277" width="0.2" height="15.0" fill="rgb(248,142,37)" rx="2" ry="2" />
<text  x="906.30" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (71 samples, 0.05%)</title><rect x="910.1" y="245" width="0.7" height="15.0" fill="rgb(249,159,11)" rx="2" ry="2" />
<text  x="913.14" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (27 samples, 0.02%)</title><rect x="881.3" y="309" width="0.2" height="15.0" fill="rgb(253,53,41)" rx="2" ry="2" />
<text  x="884.29" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::MessageID::AssignID (234 samples, 0.18%)</title><rect x="852.4" y="293" width="2.1" height="15.0" fill="rgb(253,160,51)" rx="2" ry="2" />
<text  x="855.41" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (26 samples, 0.02%)</title><rect x="935.0" y="197" width="0.3" height="15.0" fill="rgb(231,58,12)" rx="2" ry="2" />
<text  x="938.04" y="207.5" ></text>
</g>
<g >
<title>scythedb::PMMemcpy&lt;char&gt; (70 samples, 0.05%)</title><rect x="429.9" y="293" width="0.7" height="15.0" fill="rgb(227,213,16)" rx="2" ry="2" />
<text  x="432.92" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (84 samples, 0.06%)</title><rect x="1012.2" y="165" width="0.7" height="15.0" fill="rgb(242,164,45)" rx="2" ry="2" />
<text  x="1015.17" y="175.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (37 samples, 0.03%)</title><rect x="1056.9" y="181" width="0.3" height="15.0" fill="rgb(210,3,33)" rx="2" ry="2" />
<text  x="1059.90" y="191.5" ></text>
</g>
<g >
<title>pmem_memcpy (16 samples, 0.01%)</title><rect x="1161.3" y="581" width="0.2" height="15.0" fill="rgb(210,2,24)" rx="2" ry="2" />
<text  x="1164.32" y="591.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (16 samples, 0.01%)</title><rect x="161.5" y="181" width="0.2" height="15.0" fill="rgb(209,52,35)" rx="2" ry="2" />
<text  x="164.54" y="191.5" ></text>
</g>
<g >
<title>ravl_find (87 samples, 0.07%)</title><rect x="1110.5" y="581" width="0.8" height="15.0" fill="rgb(219,167,54)" rx="2" ry="2" />
<text  x="1113.51" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (451 samples, 0.34%)</title><rect x="155.9" y="245" width="4.0" height="15.0" fill="rgb(206,45,24)" rx="2" ry="2" />
<text  x="158.87" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (13 samples, 0.01%)</title><rect x="276.6" y="245" width="0.1" height="15.0" fill="rgb(240,120,51)" rx="2" ry="2" />
<text  x="279.57" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (41 samples, 0.03%)</title><rect x="1039.7" y="245" width="0.3" height="15.0" fill="rgb(213,178,42)" rx="2" ry="2" />
<text  x="1042.67" y="255.5" ></text>
</g>
<g >
<title>scythedb::Status::Status (112 samples, 0.09%)</title><rect x="718.7" y="357" width="1.0" height="15.0" fill="rgb(240,140,28)" rx="2" ry="2" />
<text  x="721.68" y="367.5" ></text>
</g>
<g >
<title>pthread_cond_init@@GLIBC_2.3.2 (25 samples, 0.02%)</title><rect x="836.3" y="293" width="0.3" height="15.0" fill="rgb(230,73,36)" rx="2" ry="2" />
<text  x="839.34" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (158 samples, 0.12%)</title><rect x="110.1" y="293" width="1.4" height="15.0" fill="rgb(252,193,4)" rx="2" ry="2" />
<text  x="113.06" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::CalcQueueLane (154 samples, 0.12%)</title><rect x="1008.7" y="261" width="1.4" height="15.0" fill="rgb(207,177,47)" rx="2" ry="2" />
<text  x="1011.74" y="271.5" ></text>
</g>
<g >
<title>alloc_class_calc_size_idx (26 samples, 0.02%)</title><rect x="1141.8" y="597" width="0.2" height="15.0" fill="rgb(246,112,30)" rx="2" ry="2" />
<text  x="1144.77" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (12 samples, 0.01%)</title><rect x="935.9" y="197" width="0.1" height="15.0" fill="rgb(213,130,24)" rx="2" ry="2" />
<text  x="938.86" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (343 samples, 0.26%)</title><rect x="1001.7" y="213" width="3.1" height="15.0" fill="rgb(223,102,44)" rx="2" ry="2" />
<text  x="1004.67" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (264 samples, 0.20%)</title><rect x="112.4" y="261" width="2.4" height="15.0" fill="rgb(210,3,8)" rx="2" ry="2" />
<text  x="115.39" y="271.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (17 samples, 0.01%)</title><rect x="916.2" y="197" width="0.1" height="15.0" fill="rgb(209,64,11)" rx="2" ry="2" />
<text  x="919.18" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (272 samples, 0.21%)</title><rect x="964.8" y="181" width="2.4" height="15.0" fill="rgb(243,134,8)" rx="2" ry="2" />
<text  x="967.77" y="191.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (137 samples, 0.10%)</title><rect x="1043.9" y="309" width="1.2" height="15.0" fill="rgb(248,35,8)" rx="2" ry="2" />
<text  x="1046.87" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (317 samples, 0.24%)</title><rect x="722.8" y="341" width="2.9" height="15.0" fill="rgb(244,211,27)" rx="2" ry="2" />
<text  x="725.84" y="351.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (24 samples, 0.02%)</title><rect x="40.6" y="341" width="0.2" height="15.0" fill="rgb(244,185,22)" rx="2" ry="2" />
<text  x="43.63" y="351.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (155 samples, 0.12%)</title><rect x="774.0" y="389" width="1.4" height="15.0" fill="rgb(253,53,18)" rx="2" ry="2" />
<text  x="776.96" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="549" width="768.5" height="15.0" fill="rgb(249,16,51)" rx="2" ry="2" />
<text  x="13.14" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (30 samples, 0.02%)</title><rect x="922.9" y="229" width="0.2" height="15.0" fill="rgb(230,41,54)" rx="2" ry="2" />
<text  x="925.85" y="239.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (36 samples, 0.03%)</title><rect x="143.8" y="53" width="0.3" height="15.0" fill="rgb(237,120,34)" rx="2" ry="2" />
<text  x="146.83" y="63.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (42 samples, 0.03%)</title><rect x="776.2" y="421" width="0.4" height="15.0" fill="rgb(235,30,48)" rx="2" ry="2" />
<text  x="779.17" y="431.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (39 samples, 0.03%)</title><rect x="836.6" y="293" width="0.3" height="15.0" fill="rgb(225,155,6)" rx="2" ry="2" />
<text  x="839.59" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (47 samples, 0.04%)</title><rect x="1028.7" y="277" width="0.5" height="15.0" fill="rgb(214,133,28)" rx="2" ry="2" />
<text  x="1031.75" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (140 samples, 0.11%)</title><rect x="1024.7" y="261" width="1.3" height="15.0" fill="rgb(242,87,23)" rx="2" ry="2" />
<text  x="1027.75" y="271.5" ></text>
</g>
<g >
<title>operator new (22 samples, 0.02%)</title><rect x="870.4" y="181" width="0.2" height="15.0" fill="rgb(209,192,32)" rx="2" ry="2" />
<text  x="873.44" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12 samples, 0.01%)</title><rect x="949.4" y="197" width="0.2" height="15.0" fill="rgb(233,92,30)" rx="2" ry="2" />
<text  x="952.44" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;int  (3,943 samples, 3.01%)</title><rect x="74.5" y="277" width="35.6" height="15.0" fill="rgb(242,68,22)" rx="2" ry="2" />
<text  x="77.54" y="287.5" >std..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (35 samples, 0.03%)</title><rect x="878.1" y="117" width="0.4" height="15.0" fill="rgb(249,219,14)" rx="2" ry="2" />
<text  x="881.14" y="127.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::back (20 samples, 0.02%)</title><rect x="978.8" y="277" width="0.2" height="15.0" fill="rgb(218,6,14)" rx="2" ry="2" />
<text  x="981.84" y="287.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (277 samples, 0.21%)</title><rect x="1015.1" y="277" width="2.5" height="15.0" fill="rgb(233,183,36)" rx="2" ry="2" />
<text  x="1018.06" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (22 samples, 0.02%)</title><rect x="1017.1" y="181" width="0.2" height="15.0" fill="rgb(232,124,17)" rx="2" ry="2" />
<text  x="1020.05" y="191.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (187 samples, 0.14%)</title><rect x="996.7" y="277" width="1.7" height="15.0" fill="rgb(244,1,24)" rx="2" ry="2" />
<text  x="999.72" y="287.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (43 samples, 0.03%)</title><rect x="836.0" y="293" width="0.3" height="15.0" fill="rgb(205,173,5)" rx="2" ry="2" />
<text  x="838.96" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_deallocate (48 samples, 0.04%)</title><rect x="455.2" y="309" width="0.5" height="15.0" fill="rgb(205,117,6)" rx="2" ry="2" />
<text  x="458.23" y="319.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (24 samples, 0.02%)</title><rect x="108.2" y="197" width="0.2" height="15.0" fill="rgb(212,97,13)" rx="2" ry="2" />
<text  x="111.18" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (71 samples, 0.05%)</title><rect x="1012.9" y="229" width="0.7" height="15.0" fill="rgb(206,23,16)" rx="2" ry="2" />
<text  x="1015.93" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (101 samples, 0.08%)</title><rect x="950.7" y="245" width="0.9" height="15.0" fill="rgb(206,172,38)" rx="2" ry="2" />
<text  x="953.66" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (15 samples, 0.01%)</title><rect x="883.9" y="325" width="0.1" height="15.0" fill="rgb(237,214,4)" rx="2" ry="2" />
<text  x="886.89" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (22 samples, 0.02%)</title><rect x="934.8" y="197" width="0.2" height="15.0" fill="rgb(227,143,6)" rx="2" ry="2" />
<text  x="937.78" y="207.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (225 samples, 0.17%)</title><rect x="1015.4" y="213" width="2.0" height="15.0" fill="rgb(213,126,29)" rx="2" ry="2" />
<text  x="1018.41" y="223.5" ></text>
</g>
<g >
<title>XXH64_finalize (78 samples, 0.06%)</title><rect x="953.4" y="197" width="0.7" height="15.0" fill="rgb(244,58,10)" rx="2" ry="2" />
<text  x="956.35" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (22 samples, 0.02%)</title><rect x="276.7" y="245" width="0.2" height="15.0" fill="rgb(242,23,38)" rx="2" ry="2" />
<text  x="279.69" y="255.5" ></text>
</g>
<g >
<title>std::operator!=&lt;scythedb::Slice*&gt; (42 samples, 0.03%)</title><rect x="129.9" y="213" width="0.4" height="15.0" fill="rgb(226,31,29)" rx="2" ry="2" />
<text  x="132.92" y="223.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (16 samples, 0.01%)</title><rect x="951.3" y="229" width="0.2" height="15.0" fill="rgb(211,148,35)" rx="2" ry="2" />
<text  x="954.31" y="239.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (77 samples, 0.06%)</title><rect x="993.1" y="245" width="0.7" height="15.0" fill="rgb(238,9,48)" rx="2" ry="2" />
<text  x="996.13" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (18 samples, 0.01%)</title><rect x="886.8" y="293" width="0.1" height="15.0" fill="rgb(232,198,50)" rx="2" ry="2" />
<text  x="889.77" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateAligned (1,052 samples, 0.80%)</title><rect x="415.7" y="261" width="9.5" height="15.0" fill="rgb(225,154,22)" rx="2" ry="2" />
<text  x="418.72" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (35 samples, 0.03%)</title><rect x="850.6" y="245" width="0.3" height="15.0" fill="rgb(246,201,34)" rx="2" ry="2" />
<text  x="853.59" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (16 samples, 0.01%)</title><rect x="984.4" y="245" width="0.1" height="15.0" fill="rgb(236,114,48)" rx="2" ry="2" />
<text  x="987.36" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (83 samples, 0.06%)</title><rect x="1041.7" y="245" width="0.8" height="15.0" fill="rgb(224,52,36)" rx="2" ry="2" />
<text  x="1044.74" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::AssignQueue (261 samples, 0.20%)</title><rect x="854.5" y="293" width="2.4" height="15.0" fill="rgb(237,116,4)" rx="2" ry="2" />
<text  x="857.52" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::DecodeMessageField (1,165 samples, 0.89%)</title><rect x="121.9" y="341" width="10.5" height="15.0" fill="rgb(218,181,52)" rx="2" ry="2" />
<text  x="124.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (100 samples, 0.08%)</title><rect x="930.5" y="261" width="0.9" height="15.0" fill="rgb(245,102,47)" rx="2" ry="2" />
<text  x="933.47" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::deallocate (46 samples, 0.04%)</title><rect x="128.1" y="261" width="0.4" height="15.0" fill="rgb(245,158,54)" rx="2" ry="2" />
<text  x="131.07" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (16 samples, 0.01%)</title><rect x="1026.1" y="277" width="0.2" height="15.0" fill="rgb(243,49,2)" rx="2" ry="2" />
<text  x="1029.13" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (17 samples, 0.01%)</title><rect x="878.6" y="149" width="0.2" height="15.0" fill="rgb(225,138,51)" rx="2" ry="2" />
<text  x="881.63" y="159.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (144 samples, 0.11%)</title><rect x="1061.5" y="277" width="1.3" height="15.0" fill="rgb(221,126,1)" rx="2" ry="2" />
<text  x="1064.54" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (19 samples, 0.01%)</title><rect x="112.1" y="277" width="0.2" height="15.0" fill="rgb(223,10,52)" rx="2" ry="2" />
<text  x="115.12" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::emplace_back&lt;scythedb::Slice&gt; (709 samples, 0.54%)</title><rect x="126.0" y="309" width="6.4" height="15.0" fill="rgb(206,193,29)" rx="2" ry="2" />
<text  x="129.02" y="319.5" ></text>
</g>
<g >
<title>pmemobj_tx_get_user_data (21 samples, 0.02%)</title><rect x="815.7" y="549" width="0.2" height="15.0" fill="rgb(207,150,37)" rx="2" ry="2" />
<text  x="818.72" y="559.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;scythedb::Slice*&gt;::move_iterator (26 samples, 0.02%)</title><rect x="129.1" y="245" width="0.2" height="15.0" fill="rgb(243,29,38)" rx="2" ry="2" />
<text  x="132.11" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26 samples, 0.02%)</title><rect x="119.7" y="229" width="0.2" height="15.0" fill="rgb(247,5,25)" rx="2" ry="2" />
<text  x="122.69" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (144 samples, 0.11%)</title><rect x="1066.1" y="245" width="1.3" height="15.0" fill="rgb(212,218,25)" rx="2" ry="2" />
<text  x="1069.09" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (549 samples, 0.42%)</title><rect x="962.4" y="261" width="5.0" height="15.0" fill="rgb(215,97,45)" rx="2" ry="2" />
<text  x="965.41" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (39 samples, 0.03%)</title><rect x="775.8" y="421" width="0.3" height="15.0" fill="rgb(222,33,47)" rx="2" ry="2" />
<text  x="778.76" y="431.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="883.0" y="277" width="0.2" height="15.0" fill="rgb(246,30,46)" rx="2" ry="2" />
<text  x="886.00" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (13,497 samples, 10.30%)</title><rect x="282.1" y="197" width="121.5" height="15.0" fill="rgb(241,183,39)" rx="2" ry="2" />
<text  x="285.06" y="207.5" >scythedb::NVMBl..</text>
</g>
<g >
<title>pmemobj_root (14 samples, 0.01%)</title><rect x="150.8" y="277" width="0.1" height="15.0" fill="rgb(209,156,34)" rx="2" ry="2" />
<text  x="153.78" y="287.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (137 samples, 0.10%)</title><rect x="1042.6" y="261" width="1.2" height="15.0" fill="rgb(251,68,1)" rx="2" ry="2" />
<text  x="1045.57" y="271.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (236 samples, 0.18%)</title><rect x="433.4" y="309" width="2.1" height="15.0" fill="rgb(210,7,22)" rx="2" ry="2" />
<text  x="436.40" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::push_back (109 samples, 0.08%)</title><rect x="42.1" y="325" width="1.0" height="15.0" fill="rgb(236,121,2)" rx="2" ry="2" />
<text  x="45.08" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (34 samples, 0.03%)</title><rect x="425.6" y="261" width="0.3" height="15.0" fill="rgb(249,59,26)" rx="2" ry="2" />
<text  x="428.61" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (101 samples, 0.08%)</title><rect x="379.1" y="165" width="0.9" height="15.0" fill="rgb(205,209,22)" rx="2" ry="2" />
<text  x="382.07" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (12 samples, 0.01%)</title><rect x="1044.9" y="277" width="0.1" height="15.0" fill="rgb(241,188,41)" rx="2" ry="2" />
<text  x="1047.92" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17 samples, 0.01%)</title><rect x="893.6" y="277" width="0.2" height="15.0" fill="rgb(206,179,30)" rx="2" ry="2" />
<text  x="896.61" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (124 samples, 0.09%)</title><rect x="904.8" y="293" width="1.1" height="15.0" fill="rgb(209,92,20)" rx="2" ry="2" />
<text  x="907.77" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (100 samples, 0.08%)</title><rect x="1025.0" y="197" width="0.9" height="15.0" fill="rgb(250,177,40)" rx="2" ry="2" />
<text  x="1028.03" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (19 samples, 0.01%)</title><rect x="948.1" y="197" width="0.2" height="15.0" fill="rgb(216,160,23)" rx="2" ry="2" />
<text  x="951.11" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (3,552 samples, 2.71%)</title><rect x="76.5" y="229" width="32.0" height="15.0" fill="rgb(208,28,54)" rx="2" ry="2" />
<text  x="79.54" y="239.5" >sc..</text>
</g>
<g >
<title>scythedb::Hash64 (131 samples, 0.10%)</title><rect x="1008.9" y="245" width="1.2" height="15.0" fill="rgb(244,222,7)" rx="2" ry="2" />
<text  x="1011.95" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (24 samples, 0.02%)</title><rect x="897.5" y="245" width="0.3" height="15.0" fill="rgb(230,139,13)" rx="2" ry="2" />
<text  x="900.54" y="255.5" ></text>
</g>
<g >
<title>__pthread_once_slow (26,974 samples, 20.59%)</title><rect x="825.3" y="581" width="243.0" height="15.0" fill="rgb(240,161,41)" rx="2" ry="2" />
<text  x="828.33" y="591.5" >__pthread_once_slow</text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (560 samples, 0.43%)</title><rect x="116.0" y="309" width="5.0" height="15.0" fill="rgb(245,171,49)" rx="2" ry="2" />
<text  x="118.96" y="319.5" ></text>
</g>
<g >
<title>ulog_entry_valid (13 samples, 0.01%)</title><rect x="1116.0" y="581" width="0.1" height="15.0" fill="rgb(248,98,35)" rx="2" ry="2" />
<text  x="1118.98" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (76 samples, 0.06%)</title><rect x="1049.2" y="245" width="0.7" height="15.0" fill="rgb(231,16,31)" rx="2" ry="2" />
<text  x="1052.25" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (12 samples, 0.01%)</title><rect x="894.1" y="261" width="0.1" height="15.0" fill="rgb(234,197,48)" rx="2" ry="2" />
<text  x="897.11" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (127 samples, 0.10%)</title><rect x="1046.3" y="245" width="1.1" height="15.0" fill="rgb(248,50,22)" rx="2" ry="2" />
<text  x="1049.28" y="255.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (14 samples, 0.01%)</title><rect x="999.4" y="277" width="0.1" height="15.0" fill="rgb(241,48,27)" rx="2" ry="2" />
<text  x="1002.38" y="287.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::~MutexLock (574 samples, 0.44%)</title><rect x="20.8" y="453" width="5.2" height="15.0" fill="rgb(229,29,32)" rx="2" ry="2" />
<text  x="23.82" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (17 samples, 0.01%)</title><rect x="1034.1" y="245" width="0.2" height="15.0" fill="rgb(247,61,13)" rx="2" ry="2" />
<text  x="1037.13" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (559 samples, 0.43%)</title><rect x="911.6" y="229" width="5.0" height="15.0" fill="rgb(233,83,29)" rx="2" ry="2" />
<text  x="914.59" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (153 samples, 0.12%)</title><rect x="965.8" y="149" width="1.4" height="15.0" fill="rgb(244,76,2)" rx="2" ry="2" />
<text  x="968.79" y="159.5" ></text>
</g>
<g >
<title>XXH64_endian_align (115 samples, 0.09%)</title><rect x="1009.0" y="213" width="1.0" height="15.0" fill="rgb(216,11,30)" rx="2" ry="2" />
<text  x="1012.00" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (431 samples, 0.33%)</title><rect x="975.2" y="293" width="3.9" height="15.0" fill="rgb(217,14,48)" rx="2" ry="2" />
<text  x="978.21" y="303.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (19 samples, 0.01%)</title><rect x="405.2" y="197" width="0.1" height="15.0" fill="rgb(206,189,41)" rx="2" ry="2" />
<text  x="408.15" y="207.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (196 samples, 0.15%)</title><rect x="944.6" y="277" width="1.7" height="15.0" fill="rgb(253,223,36)" rx="2" ry="2" />
<text  x="947.57" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (46 samples, 0.04%)</title><rect x="380.0" y="181" width="0.4" height="15.0" fill="rgb(234,199,18)" rx="2" ry="2" />
<text  x="382.98" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (47 samples, 0.04%)</title><rect x="847.1" y="229" width="0.4" height="15.0" fill="rgb(217,60,47)" rx="2" ry="2" />
<text  x="850.11" y="239.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (396 samples, 0.30%)</title><rect x="991.2" y="277" width="3.6" height="15.0" fill="rgb(219,93,39)" rx="2" ry="2" />
<text  x="994.19" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (42 samples, 0.03%)</title><rect x="849.8" y="277" width="0.4" height="15.0" fill="rgb(242,15,15)" rx="2" ry="2" />
<text  x="852.80" y="287.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (16 samples, 0.01%)</title><rect x="879.7" y="117" width="0.2" height="15.0" fill="rgb(231,198,41)" rx="2" ry="2" />
<text  x="882.74" y="127.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (231 samples, 0.18%)</title><rect x="72.1" y="229" width="2.1" height="15.0" fill="rgb(225,105,21)" rx="2" ry="2" />
<text  x="75.09" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (165 samples, 0.13%)</title><rect x="927.6" y="277" width="1.5" height="15.0" fill="rgb(220,219,34)" rx="2" ry="2" />
<text  x="930.64" y="287.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul, true, true&gt;::__calc (14 samples, 0.01%)</title><rect x="994.5" y="133" width="0.1" height="15.0" fill="rgb(230,137,40)" rx="2" ry="2" />
<text  x="997.49" y="143.5" ></text>
</g>
<g >
<title>__gthread_active_p (14 samples, 0.01%)</title><rect x="874.3" y="229" width="0.1" height="15.0" fill="rgb(216,166,1)" rx="2" ry="2" />
<text  x="877.31" y="239.5" ></text>
</g>
<g >
<title>scythedb::LookupKey::LookupKey (15 samples, 0.01%)</title><rect x="43.1" y="341" width="0.1" height="15.0" fill="rgb(250,51,54)" rx="2" ry="2" />
<text  x="46.08" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (155 samples, 0.12%)</title><rect x="1051.4" y="261" width="1.4" height="15.0" fill="rgb(248,204,18)" rx="2" ry="2" />
<text  x="1054.40" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (84 samples, 0.06%)</title><rect x="938.9" y="293" width="0.7" height="15.0" fill="rgb(250,175,22)" rx="2" ry="2" />
<text  x="941.85" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::add_data_to_tx (134 samples, 0.10%)</title><rect x="143.4" y="85" width="1.2" height="15.0" fill="rgb(209,228,3)" rx="2" ry="2" />
<text  x="146.39" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (184 samples, 0.14%)</title><rect x="1046.1" y="261" width="1.7" height="15.0" fill="rgb(224,102,49)" rx="2" ry="2" />
<text  x="1049.14" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;ycsbc::Operation&gt;::operator= (128 samples, 0.10%)</title><rect x="1059.2" y="293" width="1.1" height="15.0" fill="rgb(222,129,0)" rx="2" ry="2" />
<text  x="1062.17" y="303.5" ></text>
</g>
<g >
<title>ravl_delete_cb (12 samples, 0.01%)</title><rect x="816.0" y="565" width="0.1" height="15.0" fill="rgb(213,110,6)" rx="2" ry="2" />
<text  x="818.99" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (69 samples, 0.05%)</title><rect x="1023.7" y="309" width="0.6" height="15.0" fill="rgb(249,174,26)" rx="2" ry="2" />
<text  x="1026.66" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23 samples, 0.02%)</title><rect x="1050.9" y="245" width="0.2" height="15.0" fill="rgb(220,5,33)" rx="2" ry="2" />
<text  x="1053.85" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (363 samples, 0.28%)</title><rect x="932.9" y="245" width="3.3" height="15.0" fill="rgb(205,200,19)" rx="2" ry="2" />
<text  x="935.92" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (84 samples, 0.06%)</title><rect x="960.9" y="181" width="0.8" height="15.0" fill="rgb(251,43,39)" rx="2" ry="2" />
<text  x="963.90" y="191.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (70 samples, 0.05%)</title><rect x="957.1" y="229" width="0.7" height="15.0" fill="rgb(245,18,46)" rx="2" ry="2" />
<text  x="960.15" y="239.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (328 samples, 0.25%)</title><rect x="837.4" y="261" width="2.9" height="15.0" fill="rgb(239,189,31)" rx="2" ry="2" />
<text  x="840.38" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (819 samples, 0.63%)</title><rect x="795.1" y="565" width="7.4" height="15.0" fill="rgb(205,136,50)" rx="2" ry="2" />
<text  x="798.12" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (22 samples, 0.02%)</title><rect x="905.2" y="245" width="0.2" height="15.0" fill="rgb(234,87,18)" rx="2" ry="2" />
<text  x="908.17" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (128 samples, 0.10%)</title><rect x="1049.1" y="277" width="1.2" height="15.0" fill="rgb(230,133,26)" rx="2" ry="2" />
<text  x="1052.13" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (93 samples, 0.07%)</title><rect x="1129.5" y="597" width="0.8" height="15.0" fill="rgb(240,34,38)" rx="2" ry="2" />
<text  x="1132.46" y="607.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (126 samples, 0.10%)</title><rect x="406.0" y="213" width="1.2" height="15.0" fill="rgb(245,93,8)" rx="2" ry="2" />
<text  x="409.04" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateAligned (270 samples, 0.21%)</title><rect x="420.3" y="197" width="2.5" height="15.0" fill="rgb(233,181,37)" rx="2" ry="2" />
<text  x="423.35" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (38 samples, 0.03%)</title><rect x="157.4" y="181" width="0.4" height="15.0" fill="rgb(246,74,37)" rx="2" ry="2" />
<text  x="160.44" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (50 samples, 0.04%)</title><rect x="849.0" y="261" width="0.4" height="15.0" fill="rgb(251,149,23)" rx="2" ry="2" />
<text  x="851.96" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (93 samples, 0.07%)</title><rect x="882.8" y="309" width="0.9" height="15.0" fill="rgb(233,173,28)" rx="2" ry="2" />
<text  x="885.82" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::end (12 samples, 0.01%)</title><rect x="132.2" y="277" width="0.1" height="15.0" fill="rgb(219,12,43)" rx="2" ry="2" />
<text  x="135.17" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (21 samples, 0.02%)</title><rect x="283.4" y="181" width="0.2" height="15.0" fill="rgb(250,92,22)" rx="2" ry="2" />
<text  x="286.43" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (33 samples, 0.03%)</title><rect x="895.2" y="293" width="0.3" height="15.0" fill="rgb(229,203,30)" rx="2" ry="2" />
<text  x="898.19" y="303.5" ></text>
</g>
<g >
<title>[unknown] (163 samples, 0.12%)</title><rect x="1116.4" y="549" width="1.5" height="15.0" fill="rgb(225,218,4)" rx="2" ry="2" />
<text  x="1119.44" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (438 samples, 0.33%)</title><rect x="876.1" y="213" width="4.0" height="15.0" fill="rgb(246,27,41)" rx="2" ry="2" />
<text  x="879.15" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18 samples, 0.01%)</title><rect x="1023.9" y="277" width="0.1" height="15.0" fill="rgb(250,100,25)" rx="2" ry="2" />
<text  x="1026.88" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (277 samples, 0.21%)</title><rect x="1035.3" y="261" width="2.5" height="15.0" fill="rgb(244,224,16)" rx="2" ry="2" />
<text  x="1038.26" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (92 samples, 0.07%)</title><rect x="437.0" y="261" width="0.8" height="15.0" fill="rgb(206,181,19)" rx="2" ry="2" />
<text  x="439.96" y="271.5" ></text>
</g>
<g >
<title>_int_free (1,101 samples, 0.84%)</title><rect x="1130.8" y="597" width="9.9" height="15.0" fill="rgb(238,27,8)" rx="2" ry="2" />
<text  x="1133.81" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15 samples, 0.01%)</title><rect x="1047.2" y="213" width="0.2" height="15.0" fill="rgb(213,205,43)" rx="2" ry="2" />
<text  x="1050.22" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (246 samples, 0.19%)</title><rect x="430.9" y="277" width="2.2" height="15.0" fill="rgb(246,27,13)" rx="2" ry="2" />
<text  x="433.91" y="287.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (15 samples, 0.01%)</title><rect x="1023.1" y="309" width="0.1" height="15.0" fill="rgb(244,17,8)" rx="2" ry="2" />
<text  x="1026.10" y="319.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (138 samples, 0.11%)</title><rect x="981.2" y="309" width="1.2" height="15.0" fill="rgb(207,112,16)" rx="2" ry="2" />
<text  x="984.18" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::PutMsgHandle (37,112 samples, 28.33%)</title><rect x="121.5" y="357" width="334.3" height="15.0" fill="rgb(206,101,22)" rx="2" ry="2" />
<text  x="124.48" y="367.5" >scythedb::(anonymous namespace)::NVMBlockProc..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (144 samples, 0.11%)</title><rect x="1002.6" y="197" width="1.3" height="15.0" fill="rgb(209,18,28)" rx="2" ry="2" />
<text  x="1005.64" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (27 samples, 0.02%)</title><rect x="961.8" y="181" width="0.2" height="15.0" fill="rgb(222,164,39)" rx="2" ry="2" />
<text  x="964.76" y="191.5" ></text>
</g>
<g >
<title>pmemobj_tx_alloc (12 samples, 0.01%)</title><rect x="1167.3" y="597" width="0.1" height="15.0" fill="rgb(251,72,26)" rx="2" ry="2" />
<text  x="1170.28" y="607.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (42 samples, 0.03%)</title><rect x="976.3" y="245" width="0.4" height="15.0" fill="rgb(236,39,13)" rx="2" ry="2" />
<text  x="979.31" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (12 samples, 0.01%)</title><rect x="155.3" y="261" width="0.2" height="15.0" fill="rgb(233,28,20)" rx="2" ry="2" />
<text  x="158.35" y="271.5" ></text>
</g>
<g >
<title>operation_add_typed_entry (23 samples, 0.02%)</title><rect x="1085.9" y="581" width="0.2" height="15.0" fill="rgb(221,141,14)" rx="2" ry="2" />
<text  x="1088.92" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (60 samples, 0.05%)</title><rect x="913.9" y="165" width="0.5" height="15.0" fill="rgb(226,14,50)" rx="2" ry="2" />
<text  x="916.88" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (22 samples, 0.02%)</title><rect x="988.1" y="245" width="0.2" height="15.0" fill="rgb(207,211,31)" rx="2" ry="2" />
<text  x="991.10" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (153 samples, 0.12%)</title><rect x="868.4" y="165" width="1.4" height="15.0" fill="rgb(243,148,19)" rx="2" ry="2" />
<text  x="871.38" y="175.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (14 samples, 0.01%)</title><rect x="281.9" y="197" width="0.2" height="15.0" fill="rgb(227,52,18)" rx="2" ry="2" />
<text  x="284.94" y="207.5" ></text>
</g>
<g >
<title>std::operator==&lt;scythedb::Slice*&gt; (30 samples, 0.02%)</title><rect x="130.0" y="197" width="0.3" height="15.0" fill="rgb(220,198,17)" rx="2" ry="2" />
<text  x="133.03" y="207.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (282 samples, 0.22%)</title><rect x="723.2" y="325" width="2.5" height="15.0" fill="rgb(243,102,26)" rx="2" ry="2" />
<text  x="726.16" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt;::_M_head (82 samples, 0.06%)</title><rect x="774.6" y="373" width="0.8" height="15.0" fill="rgb(211,9,54)" rx="2" ry="2" />
<text  x="777.62" y="383.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (13 samples, 0.01%)</title><rect x="877.0" y="101" width="0.1" height="15.0" fill="rgb(220,160,26)" rx="2" ry="2" />
<text  x="879.97" y="111.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (114 samples, 0.09%)</title><rect x="1063.0" y="277" width="1.1" height="15.0" fill="rgb(247,9,6)" rx="2" ry="2" />
<text  x="1066.04" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (87 samples, 0.07%)</title><rect x="1048.2" y="261" width="0.8" height="15.0" fill="rgb(216,169,44)" rx="2" ry="2" />
<text  x="1051.18" y="271.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (57 samples, 0.04%)</title><rect x="1056.8" y="213" width="0.5" height="15.0" fill="rgb(227,166,46)" rx="2" ry="2" />
<text  x="1059.81" y="223.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.1 (27 samples, 0.02%)</title><rect x="1189.4" y="597" width="0.2" height="15.0" fill="rgb(245,226,16)" rx="2" ry="2" />
<text  x="1192.37" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (77 samples, 0.06%)</title><rect x="108.6" y="245" width="0.7" height="15.0" fill="rgb(212,102,40)" rx="2" ry="2" />
<text  x="111.61" y="255.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (26,974 samples, 20.59%)</title><rect x="825.3" y="549" width="243.0" height="15.0" fill="rgb(229,86,26)" rx="2" ry="2" />
<text  x="828.33" y="559.5" >std::call_once&lt;void </text>
</g>
<g >
<title>scythedb::NVMBlock::Get (7,972 samples, 6.09%)</title><rect x="43.2" y="341" width="71.8" height="15.0" fill="rgb(227,82,47)" rx="2" ry="2" />
<text  x="46.22" y="351.5" >scythedb..</text>
</g>
<g >
<title>pmemobj_direct_inline (28 samples, 0.02%)</title><rect x="425.7" y="229" width="0.2" height="15.0" fill="rgb(207,25,2)" rx="2" ry="2" />
<text  x="428.65" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (19 samples, 0.01%)</title><rect x="904.1" y="261" width="0.1" height="15.0" fill="rgb(240,90,12)" rx="2" ry="2" />
<text  x="907.06" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Add (35,115 samples, 26.81%)</title><rect x="132.5" y="325" width="316.3" height="15.0" fill="rgb(242,6,25)" rx="2" ry="2" />
<text  x="135.53" y="335.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>std::__invoke_impl&lt;int, int  (26,974 samples, 20.59%)</title><rect x="825.3" y="373" width="243.0" height="15.0" fill="rgb(253,34,52)" rx="2" ry="2" />
<text  x="828.33" y="383.5" >std::__invoke_impl&lt;int, int </text>
</g>
<g >
<title>scythedb::Slice::data (15 samples, 0.01%)</title><rect x="108.0" y="197" width="0.2" height="15.0" fill="rgb(253,197,36)" rx="2" ry="2" />
<text  x="111.05" y="207.5" ></text>
</g>
<g >
<title>ycsbc::DiscreteGenerator&lt;ycsbc::Operation&gt;::Next (1,072 samples, 0.82%)</title><rect x="1058.2" y="309" width="9.6" height="15.0" fill="rgb(233,43,6)" rx="2" ry="2" />
<text  x="1061.18" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (54 samples, 0.04%)</title><rect x="152.7" y="245" width="0.5" height="15.0" fill="rgb(227,124,29)" rx="2" ry="2" />
<text  x="155.69" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateNewChunk (48 samples, 0.04%)</title><rect x="422.3" y="165" width="0.5" height="15.0" fill="rgb(221,9,8)" rx="2" ry="2" />
<text  x="425.35" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (718 samples, 0.55%)</title><rect x="438.9" y="245" width="6.5" height="15.0" fill="rgb(210,89,8)" rx="2" ry="2" />
<text  x="441.90" y="255.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (15 samples, 0.01%)</title><rect x="915.6" y="165" width="0.1" height="15.0" fill="rgb(243,124,8)" rx="2" ry="2" />
<text  x="918.58" y="175.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (28 samples, 0.02%)</title><rect x="107.6" y="181" width="0.2" height="15.0" fill="rgb(216,131,20)" rx="2" ry="2" />
<text  x="110.59" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (42 samples, 0.03%)</title><rect x="420.8" y="165" width="0.4" height="15.0" fill="rgb(241,86,22)" rx="2" ry="2" />
<text  x="423.79" y="175.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (24 samples, 0.02%)</title><rect x="176.1" y="229" width="0.2" height="15.0" fill="rgb(218,88,22)" rx="2" ry="2" />
<text  x="179.06" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (20 samples, 0.02%)</title><rect x="1044.4" y="229" width="0.2" height="15.0" fill="rgb(212,75,42)" rx="2" ry="2" />
<text  x="1047.45" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (21 samples, 0.02%)</title><rect x="899.5" y="293" width="0.2" height="15.0" fill="rgb(245,16,17)" rx="2" ry="2" />
<text  x="902.51" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (14 samples, 0.01%)</title><rect x="1026.1" y="261" width="0.2" height="15.0" fill="rgb(212,99,46)" rx="2" ry="2" />
<text  x="1029.14" y="271.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::FreeList&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block&gt;::add (12 samples, 0.01%)</title><rect x="499.2" y="277" width="0.1" height="15.0" fill="rgb(231,172,50)" rx="2" ry="2" />
<text  x="502.20" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="926.1" y="229" width="0.1" height="15.0" fill="rgb(205,116,38)" rx="2" ry="2" />
<text  x="929.12" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::AssignQueue (164 samples, 0.13%)</title><rect x="1008.7" y="277" width="1.5" height="15.0" fill="rgb(229,163,4)" rx="2" ry="2" />
<text  x="1011.69" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (25 samples, 0.02%)</title><rect x="145.0" y="53" width="0.2" height="15.0" fill="rgb(251,85,27)" rx="2" ry="2" />
<text  x="148.01" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (110 samples, 0.08%)</title><rect x="1020.3" y="149" width="1.0" height="15.0" fill="rgb(254,176,35)" rx="2" ry="2" />
<text  x="1023.32" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (103 samples, 0.08%)</title><rect x="964.9" y="149" width="0.9" height="15.0" fill="rgb(212,141,31)" rx="2" ry="2" />
<text  x="967.86" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (13 samples, 0.01%)</title><rect x="981.3" y="277" width="0.2" height="15.0" fill="rgb(216,28,25)" rx="2" ry="2" />
<text  x="984.34" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (17 samples, 0.01%)</title><rect x="1022.8" y="293" width="0.2" height="15.0" fill="rgb(246,77,35)" rx="2" ry="2" />
<text  x="1025.84" y="303.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (20 samples, 0.02%)</title><rect x="1051.2" y="261" width="0.2" height="15.0" fill="rgb(225,134,28)" rx="2" ry="2" />
<text  x="1054.22" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (65 samples, 0.05%)</title><rect x="870.1" y="197" width="0.6" height="15.0" fill="rgb(226,131,26)" rx="2" ry="2" />
<text  x="873.07" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,669 samples, 1.27%)</title><rect x="135.7" y="261" width="15.1" height="15.0" fill="rgb(250,140,20)" rx="2" ry="2" />
<text  x="138.75" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (12 samples, 0.01%)</title><rect x="989.8" y="165" width="0.1" height="15.0" fill="rgb(234,152,40)" rx="2" ry="2" />
<text  x="992.83" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::operator-=&lt;unsigned long, unsigned long&gt; (45 samples, 0.03%)</title><rect x="420.8" y="181" width="0.4" height="15.0" fill="rgb(221,147,2)" rx="2" ry="2" />
<text  x="423.76" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (14 samples, 0.01%)</title><rect x="915.3" y="133" width="0.2" height="15.0" fill="rgb(223,22,33)" rx="2" ry="2" />
<text  x="918.33" y="143.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (1,355 samples, 1.03%)</title><rect x="837.2" y="277" width="12.2" height="15.0" fill="rgb(248,155,20)" rx="2" ry="2" />
<text  x="840.20" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (148 samples, 0.11%)</title><rect x="884.8" y="261" width="1.3" height="15.0" fill="rgb(237,36,21)" rx="2" ry="2" />
<text  x="887.75" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (55 samples, 0.04%)</title><rect x="903.7" y="277" width="0.5" height="15.0" fill="rgb(239,167,16)" rx="2" ry="2" />
<text  x="906.74" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (81 samples, 0.06%)</title><rect x="985.2" y="245" width="0.7" height="15.0" fill="rgb(253,215,9)" rx="2" ry="2" />
<text  x="988.20" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (18 samples, 0.01%)</title><rect x="884.2" y="293" width="0.2" height="15.0" fill="rgb(251,167,9)" rx="2" ry="2" />
<text  x="887.19" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (207 samples, 0.16%)</title><rect x="860.6" y="213" width="1.8" height="15.0" fill="rgb(240,5,38)" rx="2" ry="2" />
<text  x="863.56" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (151 samples, 0.12%)</title><rect x="119.2" y="277" width="1.3" height="15.0" fill="rgb(219,124,44)" rx="2" ry="2" />
<text  x="122.16" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (43 samples, 0.03%)</title><rect x="928.4" y="197" width="0.4" height="15.0" fill="rgb(225,201,4)" rx="2" ry="2" />
<text  x="931.37" y="207.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.03%)</title><rect x="844.5" y="165" width="0.3" height="15.0" fill="rgb(219,201,46)" rx="2" ry="2" />
<text  x="847.53" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (13 samples, 0.01%)</title><rect x="906.1" y="309" width="0.2" height="15.0" fill="rgb(219,28,32)" rx="2" ry="2" />
<text  x="909.14" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (57 samples, 0.04%)</title><rect x="134.1" y="277" width="0.5" height="15.0" fill="rgb(246,191,20)" rx="2" ry="2" />
<text  x="137.08" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (23 samples, 0.02%)</title><rect x="1006.1" y="261" width="0.2" height="15.0" fill="rgb(222,195,41)" rx="2" ry="2" />
<text  x="1009.09" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (206 samples, 0.16%)</title><rect x="979.3" y="309" width="1.9" height="15.0" fill="rgb(212,54,20)" rx="2" ry="2" />
<text  x="982.32" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_destroy (32 samples, 0.02%)</title><rect x="834.4" y="293" width="0.3" height="15.0" fill="rgb(239,164,12)" rx="2" ry="2" />
<text  x="837.40" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (105 samples, 0.08%)</title><rect x="1051.7" y="229" width="0.9" height="15.0" fill="rgb(222,133,16)" rx="2" ry="2" />
<text  x="1054.69" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::NewNode (1,334 samples, 1.02%)</title><rect x="413.4" y="277" width="12.0" height="15.0" fill="rgb(227,77,6)" rx="2" ry="2" />
<text  x="416.36" y="287.5" ></text>
</g>
<g >
<title>scythedb::MakePersistent&lt;scythedb::InternalNode, char, pmem::obj::persistent_ptr&lt;char&gt; const&amp;, decltype (230 samples, 0.18%)</title><rect x="413.6" y="261" width="2.1" height="15.0" fill="rgb(207,69,37)" rx="2" ry="2" />
<text  x="416.65" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (27 samples, 0.02%)</title><rect x="911.9" y="197" width="0.2" height="15.0" fill="rgb(226,12,2)" rx="2" ry="2" />
<text  x="914.88" y="207.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (21 samples, 0.02%)</title><rect x="1069.3" y="581" width="0.2" height="15.0" fill="rgb(215,131,8)" rx="2" ry="2" />
<text  x="1072.28" y="591.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (351 samples, 0.27%)</title><rect x="102.8" y="197" width="3.2" height="15.0" fill="rgb(252,151,8)" rx="2" ry="2" />
<text  x="105.80" y="207.5" ></text>
</g>
<g >
<title>palloc_heap_action_on_process (168 samples, 0.13%)</title><rect x="1074.5" y="565" width="1.5" height="15.0" fill="rgb(206,104,17)" rx="2" ry="2" />
<text  x="1077.53" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::SeekGreaterOrEqual (7,564 samples, 5.77%)</title><rect x="43.5" y="325" width="68.1" height="15.0" fill="rgb(239,168,53)" rx="2" ry="2" />
<text  x="46.49" y="335.5" >scythed..</text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (2,157 samples, 1.65%)</title><rect x="133.8" y="293" width="19.4" height="15.0" fill="rgb(245,77,7)" rx="2" ry="2" />
<text  x="136.76" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (13 samples, 0.01%)</title><rect x="974.3" y="261" width="0.2" height="15.0" fill="rgb(230,194,22)" rx="2" ry="2" />
<text  x="977.35" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (29 samples, 0.02%)</title><rect x="1019.6" y="197" width="0.2" height="15.0" fill="rgb(219,72,16)" rx="2" ry="2" />
<text  x="1022.57" y="207.5" ></text>
</g>
<g >
<title>heap_get_bestfit_block (21 samples, 0.02%)</title><rect x="1070.3" y="581" width="0.2" height="15.0" fill="rgb(219,58,37)" rx="2" ry="2" />
<text  x="1073.34" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (185 samples, 0.14%)</title><rect x="868.2" y="197" width="1.6" height="15.0" fill="rgb(210,10,41)" rx="2" ry="2" />
<text  x="871.18" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (16 samples, 0.01%)</title><rect x="923.0" y="213" width="0.1" height="15.0" fill="rgb(224,111,3)" rx="2" ry="2" />
<text  x="925.95" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (19 samples, 0.01%)</title><rect x="115.1" y="341" width="0.2" height="15.0" fill="rgb(251,67,3)" rx="2" ry="2" />
<text  x="118.14" y="351.5" ></text>
</g>
<g >
<title>__gthread_active_p (21 samples, 0.02%)</title><rect x="1060.5" y="261" width="0.2" height="15.0" fill="rgb(233,128,21)" rx="2" ry="2" />
<text  x="1063.47" y="271.5" ></text>
</g>
<g >
<title>lane_release (243 samples, 0.19%)</title><rect x="1071.4" y="581" width="2.2" height="15.0" fill="rgb(251,26,38)" rx="2" ry="2" />
<text  x="1074.41" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (134 samples, 0.10%)</title><rect x="962.6" y="197" width="1.3" height="15.0" fill="rgb(224,46,33)" rx="2" ry="2" />
<text  x="965.65" y="207.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (110 samples, 0.08%)</title><rect x="1055.6" y="245" width="1.0" height="15.0" fill="rgb(233,226,18)" rx="2" ry="2" />
<text  x="1058.63" y="255.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (22 samples, 0.02%)</title><rect x="160.2" y="277" width="0.2" height="15.0" fill="rgb(210,101,45)" rx="2" ry="2" />
<text  x="163.20" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (355 samples, 0.27%)</title><rect x="964.0" y="213" width="3.2" height="15.0" fill="rgb(212,216,52)" rx="2" ry="2" />
<text  x="967.03" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator= (76 samples, 0.06%)</title><rect x="421.5" y="181" width="0.7" height="15.0" fill="rgb(231,180,42)" rx="2" ry="2" />
<text  x="424.53" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (17 samples, 0.01%)</title><rect x="950.5" y="261" width="0.1" height="15.0" fill="rgb(248,81,48)" rx="2" ry="2" />
<text  x="953.46" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (80 samples, 0.06%)</title><rect x="1054.9" y="213" width="0.7" height="15.0" fill="rgb(230,144,53)" rx="2" ry="2" />
<text  x="1057.90" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (26 samples, 0.02%)</title><rect x="903.5" y="277" width="0.2" height="15.0" fill="rgb(249,218,4)" rx="2" ry="2" />
<text  x="906.51" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator+= (37 samples, 0.03%)</title><rect x="421.2" y="181" width="0.3" height="15.0" fill="rgb(216,9,17)" rx="2" ry="2" />
<text  x="424.20" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (13 samples, 0.01%)</title><rect x="448.4" y="293" width="0.1" height="15.0" fill="rgb(208,54,43)" rx="2" ry="2" />
<text  x="451.36" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (126 samples, 0.10%)</title><rect x="160.9" y="245" width="1.1" height="15.0" fill="rgb(215,160,46)" rx="2" ry="2" />
<text  x="163.88" y="255.5" ></text>
</g>
<g >
<title>std::mutex::lock (160 samples, 0.12%)</title><rect x="1054.2" y="229" width="1.4" height="15.0" fill="rgb(231,47,1)" rx="2" ry="2" />
<text  x="1057.18" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (51 samples, 0.04%)</title><rect x="994.2" y="197" width="0.4" height="15.0" fill="rgb(232,160,44)" rx="2" ry="2" />
<text  x="997.18" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (41 samples, 0.03%)</title><rect x="907.1" y="293" width="0.4" height="15.0" fill="rgb(207,87,45)" rx="2" ry="2" />
<text  x="910.13" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::CalcQueueLane (243 samples, 0.19%)</title><rect x="854.7" y="277" width="2.2" height="15.0" fill="rgb(251,142,45)" rx="2" ry="2" />
<text  x="857.68" y="287.5" ></text>
</g>
<g >
<title>[unknown] (72 samples, 0.05%)</title><rect x="793.3" y="565" width="0.7" height="15.0" fill="rgb(214,136,32)" rx="2" ry="2" />
<text  x="796.32" y="575.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (39 samples, 0.03%)</title><rect x="954.3" y="277" width="0.3" height="15.0" fill="rgb(245,34,44)" rx="2" ry="2" />
<text  x="957.27" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (15 samples, 0.01%)</title><rect x="155.3" y="277" width="0.2" height="15.0" fill="rgb(250,40,21)" rx="2" ry="2" />
<text  x="158.34" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (134 samples, 0.10%)</title><rect x="843.6" y="197" width="1.2" height="15.0" fill="rgb(236,146,3)" rx="2" ry="2" />
<text  x="846.64" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (33 samples, 0.03%)</title><rect x="1003.6" y="181" width="0.3" height="15.0" fill="rgb(231,5,24)" rx="2" ry="2" />
<text  x="1006.61" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (20 samples, 0.02%)</title><rect x="1006.5" y="229" width="0.2" height="15.0" fill="rgb(218,10,3)" rx="2" ry="2" />
<text  x="1009.49" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (23 samples, 0.02%)</title><rect x="926.6" y="213" width="0.2" height="15.0" fill="rgb(245,125,11)" rx="2" ry="2" />
<text  x="929.56" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13 samples, 0.01%)</title><rect x="1005.5" y="213" width="0.1" height="15.0" fill="rgb(218,82,17)" rx="2" ry="2" />
<text  x="1008.51" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (95 samples, 0.07%)</title><rect x="905.0" y="277" width="0.8" height="15.0" fill="rgb(251,137,28)" rx="2" ry="2" />
<text  x="907.98" y="287.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (22 samples, 0.02%)</title><rect x="1053.5" y="261" width="0.2" height="15.0" fill="rgb(223,3,11)" rx="2" ry="2" />
<text  x="1056.46" y="271.5" ></text>
</g>
<g >
<title>std::mutex::unlock (109 samples, 0.08%)</title><rect x="1055.6" y="229" width="1.0" height="15.0" fill="rgb(214,227,12)" rx="2" ry="2" />
<text  x="1058.63" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (329 samples, 0.25%)</title><rect x="419.9" y="245" width="3.0" height="15.0" fill="rgb(225,34,49)" rx="2" ry="2" />
<text  x="422.93" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (197 samples, 0.15%)</title><rect x="1024.6" y="309" width="1.8" height="15.0" fill="rgb(237,159,47)" rx="2" ry="2" />
<text  x="1027.63" y="319.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (12 samples, 0.01%)</title><rect x="421.0" y="149" width="0.1" height="15.0" fill="rgb(205,229,16)" rx="2" ry="2" />
<text  x="423.95" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (38 samples, 0.03%)</title><rect x="922.8" y="245" width="0.3" height="15.0" fill="rgb(252,94,28)" rx="2" ry="2" />
<text  x="925.79" y="255.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (23 samples, 0.02%)</title><rect x="20.4" y="421" width="0.3" height="15.0" fill="rgb(215,199,35)" rx="2" ry="2" />
<text  x="23.45" y="431.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (379 samples, 0.29%)</title><rect x="1053.9" y="261" width="3.4" height="15.0" fill="rgb(243,47,26)" rx="2" ry="2" />
<text  x="1056.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (30 samples, 0.02%)</title><rect x="885.3" y="197" width="0.3" height="15.0" fill="rgb(252,22,47)" rx="2" ry="2" />
<text  x="888.34" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (3,595 samples, 2.74%)</title><rect x="76.2" y="245" width="32.3" height="15.0" fill="rgb(239,63,37)" rx="2" ry="2" />
<text  x="79.15" y="255.5" >sc..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="977.7" y="197" width="0.2" height="15.0" fill="rgb(236,11,30)" rx="2" ry="2" />
<text  x="980.75" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::construct_at_end&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (108 samples, 0.08%)</title><rect x="144.6" y="85" width="1.0" height="15.0" fill="rgb(227,155,25)" rx="2" ry="2" />
<text  x="147.64" y="95.5" ></text>
</g>
<g >
<title>lane_redo_extend (17 samples, 0.01%)</title><rect x="1142.9" y="597" width="0.1" height="15.0" fill="rgb(242,174,4)" rx="2" ry="2" />
<text  x="1145.85" y="607.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (31 samples, 0.02%)</title><rect x="1019.9" y="197" width="0.2" height="15.0" fill="rgb(240,64,40)" rx="2" ry="2" />
<text  x="1022.86" y="207.5" ></text>
</g>
<g >
<title>rand (19 samples, 0.01%)</title><rect x="892.6" y="309" width="0.2" height="15.0" fill="rgb(217,192,6)" rx="2" ry="2" />
<text  x="895.61" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (12 samples, 0.01%)</title><rect x="842.5" y="181" width="0.1" height="15.0" fill="rgb(239,56,33)" rx="2" ry="2" />
<text  x="845.50" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (71 samples, 0.05%)</title><rect x="1032.3" y="277" width="0.6" height="15.0" fill="rgb(244,22,13)" rx="2" ry="2" />
<text  x="1035.28" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (25 samples, 0.02%)</title><rect x="1004.4" y="197" width="0.2" height="15.0" fill="rgb(205,94,6)" rx="2" ry="2" />
<text  x="1007.38" y="207.5" ></text>
</g>
<g >
<title>std::operator&amp; (537 samples, 0.41%)</title><rect x="713.7" y="325" width="4.8" height="15.0" fill="rgb(251,42,18)" rx="2" ry="2" />
<text  x="716.66" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (27 samples, 0.02%)</title><rect x="867.9" y="197" width="0.2" height="15.0" fill="rgb(250,158,13)" rx="2" ry="2" />
<text  x="870.86" y="207.5" ></text>
</g>
<g >
<title>vfprintf (106 samples, 0.08%)</title><rect x="1116.9" y="501" width="1.0" height="15.0" fill="rgb(211,47,17)" rx="2" ry="2" />
<text  x="1119.92" y="511.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::MutexLock (19 samples, 0.01%)</title><rect x="12.6" y="469" width="0.2" height="15.0" fill="rgb(230,53,9)" rx="2" ry="2" />
<text  x="15.64" y="479.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (22 samples, 0.02%)</title><rect x="165.1" y="261" width="0.2" height="15.0" fill="rgb(239,107,22)" rx="2" ry="2" />
<text  x="168.13" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (34 samples, 0.03%)</title><rect x="965.3" y="85" width="0.3" height="15.0" fill="rgb(234,126,44)" rx="2" ry="2" />
<text  x="968.25" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (334 samples, 0.25%)</title><rect x="912.7" y="181" width="3.0" height="15.0" fill="rgb(213,40,45)" rx="2" ry="2" />
<text  x="915.70" y="191.5" ></text>
</g>
<g >
<title>ravl_foreach_node (36 samples, 0.03%)</title><rect x="1111.3" y="581" width="0.3" height="15.0" fill="rgb(250,226,46)" rx="2" ry="2" />
<text  x="1114.29" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void  (171 samples, 0.13%)</title><rect x="958.1" y="277" width="1.5" height="15.0" fill="rgb(213,89,33)" rx="2" ry="2" />
<text  x="961.06" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (22 samples, 0.02%)</title><rect x="149.0" y="117" width="0.2" height="15.0" fill="rgb(235,228,17)" rx="2" ry="2" />
<text  x="152.00" y="127.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (25 samples, 0.02%)</title><rect x="454.5" y="309" width="0.2" height="15.0" fill="rgb(244,62,35)" rx="2" ry="2" />
<text  x="457.45" y="319.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;&gt; (16 samples, 0.01%)</title><rect x="777.4" y="437" width="0.2" height="15.0" fill="rgb(208,53,52)" rx="2" ry="2" />
<text  x="780.41" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (18 samples, 0.01%)</title><rect x="1010.5" y="261" width="0.2" height="15.0" fill="rgb(231,24,39)" rx="2" ry="2" />
<text  x="1013.52" y="271.5" ></text>
</g>
<g >
<title>XXH_readLE64_align (22 samples, 0.02%)</title><rect x="1009.8" y="181" width="0.2" height="15.0" fill="rgb(226,152,12)" rx="2" ry="2" />
<text  x="1012.80" y="191.5" ></text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (87 samples, 0.07%)</title><rect x="898.3" y="261" width="0.7" height="15.0" fill="rgb(225,53,41)" rx="2" ry="2" />
<text  x="901.26" y="271.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (3,469 samples, 2.65%)</title><rect x="887.1" y="325" width="31.3" height="15.0" fill="rgb(227,104,38)" rx="2" ry="2" />
<text  x="890.15" y="335.5" >yc..</text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (77 samples, 0.06%)</title><rect x="969.2" y="245" width="0.7" height="15.0" fill="rgb(225,198,14)" rx="2" ry="2" />
<text  x="972.17" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="875.9" y="181" width="0.1" height="15.0" fill="rgb(215,81,28)" rx="2" ry="2" />
<text  x="878.86" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="845.0" y="181" width="0.1" height="15.0" fill="rgb(239,184,4)" rx="2" ry="2" />
<text  x="847.97" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~vector (16 samples, 0.01%)</title><rect x="121.3" y="341" width="0.2" height="15.0" fill="rgb(250,91,37)" rx="2" ry="2" />
<text  x="124.33" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (30 samples, 0.02%)</title><rect x="431.7" y="213" width="0.3" height="15.0" fill="rgb(237,12,44)" rx="2" ry="2" />
<text  x="434.71" y="223.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (36 samples, 0.03%)</title><rect x="777.1" y="421" width="0.3" height="15.0" fill="rgb(217,112,22)" rx="2" ry="2" />
<text  x="780.08" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (45 samples, 0.03%)</title><rect x="1040.3" y="245" width="0.4" height="15.0" fill="rgb(231,99,1)" rx="2" ry="2" />
<text  x="1043.31" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (17 samples, 0.01%)</title><rect x="897.8" y="261" width="0.1" height="15.0" fill="rgb(238,174,29)" rx="2" ry="2" />
<text  x="900.77" y="271.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (1,983 samples, 1.51%)</title><rect x="919.8" y="309" width="17.9" height="15.0" fill="rgb(253,89,36)" rx="2" ry="2" />
<text  x="922.85" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (14,259 samples, 10.88%)</title><rect x="278.7" y="229" width="128.5" height="15.0" fill="rgb(214,22,34)" rx="2" ry="2" />
<text  x="281.74" y="239.5" >std::_Function_h..</text>
</g>
<g >
<title>utils::RandomDouble (78 samples, 0.06%)</title><rect x="1056.6" y="245" width="0.7" height="15.0" fill="rgb(213,216,39)" rx="2" ry="2" />
<text  x="1059.64" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (109 samples, 0.08%)</title><rect x="1006.4" y="245" width="1.0" height="15.0" fill="rgb(220,200,10)" rx="2" ry="2" />
<text  x="1009.37" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (13 samples, 0.01%)</title><rect x="895.0" y="277" width="0.2" height="15.0" fill="rgb(209,12,47)" rx="2" ry="2" />
<text  x="898.05" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1,210 samples, 0.92%)</title><rect x="436.1" y="309" width="10.9" height="15.0" fill="rgb(230,123,11)" rx="2" ry="2" />
<text  x="439.15" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (274 samples, 0.21%)</title><rect x="959.8" y="229" width="2.5" height="15.0" fill="rgb(246,215,7)" rx="2" ry="2" />
<text  x="962.78" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (14 samples, 0.01%)</title><rect x="908.5" y="277" width="0.2" height="15.0" fill="rgb(235,183,27)" rx="2" ry="2" />
<text  x="911.53" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (37 samples, 0.03%)</title><rect x="834.7" y="293" width="0.3" height="15.0" fill="rgb(220,171,6)" rx="2" ry="2" />
<text  x="837.69" y="303.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (1,010 samples, 0.77%)</title><rect x="494.3" y="325" width="9.1" height="15.0" fill="rgb(216,170,2)" rx="2" ry="2" />
<text  x="497.26" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (338 samples, 0.26%)</title><rect x="971.0" y="229" width="3.0" height="15.0" fill="rgb(240,104,53)" rx="2" ry="2" />
<text  x="974.00" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (24 samples, 0.02%)</title><rect x="921.4" y="229" width="0.3" height="15.0" fill="rgb(238,120,28)" rx="2" ry="2" />
<text  x="924.44" y="239.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (651 samples, 0.50%)</title><rect x="396.0" y="165" width="5.8" height="15.0" fill="rgb(209,211,43)" rx="2" ry="2" />
<text  x="398.97" y="175.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (12 samples, 0.01%)</title><rect x="960.2" y="197" width="0.2" height="15.0" fill="rgb(226,221,28)" rx="2" ry="2" />
<text  x="963.24" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18 samples, 0.01%)</title><rect x="843.3" y="213" width="0.2" height="15.0" fill="rgb(225,17,49)" rx="2" ry="2" />
<text  x="846.29" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (52 samples, 0.04%)</title><rect x="414.6" y="245" width="0.5" height="15.0" fill="rgb(235,163,45)" rx="2" ry="2" />
<text  x="417.60" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (118 samples, 0.09%)</title><rect x="424.1" y="245" width="1.1" height="15.0" fill="rgb(235,156,51)" rx="2" ry="2" />
<text  x="427.13" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (20 samples, 0.02%)</title><rect x="1047.6" y="245" width="0.2" height="15.0" fill="rgb(221,52,45)" rx="2" ry="2" />
<text  x="1050.57" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (422 samples, 0.32%)</title><rect x="858.6" y="245" width="3.8" height="15.0" fill="rgb(223,49,33)" rx="2" ry="2" />
<text  x="861.62" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (285 samples, 0.22%)</title><rect x="920.8" y="261" width="2.5" height="15.0" fill="rgb(243,94,36)" rx="2" ry="2" />
<text  x="923.75" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (142 samples, 0.11%)</title><rect x="979.5" y="229" width="1.3" height="15.0" fill="rgb(248,226,14)" rx="2" ry="2" />
<text  x="982.53" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (15 samples, 0.01%)</title><rect x="868.6" y="133" width="0.2" height="15.0" fill="rgb(226,81,45)" rx="2" ry="2" />
<text  x="871.64" y="143.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (291 samples, 0.22%)</title><rect x="947.7" y="261" width="2.7" height="15.0" fill="rgb(222,134,22)" rx="2" ry="2" />
<text  x="950.73" y="271.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (299 samples, 0.23%)</title><rect x="955.1" y="277" width="2.7" height="15.0" fill="rgb(238,224,46)" rx="2" ry="2" />
<text  x="958.15" y="287.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::operator= (402 samples, 0.31%)</title><rect x="499.6" y="293" width="3.6" height="15.0" fill="rgb(208,130,49)" rx="2" ry="2" />
<text  x="502.55" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (355 samples, 0.27%)</title><rect x="970.9" y="261" width="3.2" height="15.0" fill="rgb(227,147,10)" rx="2" ry="2" />
<text  x="973.92" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::push_back (713 samples, 0.54%)</title><rect x="126.0" y="325" width="6.4" height="15.0" fill="rgb(237,183,26)" rx="2" ry="2" />
<text  x="128.99" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (14 samples, 0.01%)</title><rect x="881.9" y="309" width="0.1" height="15.0" fill="rgb(249,170,21)" rx="2" ry="2" />
<text  x="884.86" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (116 samples, 0.09%)</title><rect x="989.0" y="197" width="1.0" height="15.0" fill="rgb(207,166,33)" rx="2" ry="2" />
<text  x="992.00" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="977.4" y="197" width="0.1" height="15.0" fill="rgb(231,88,36)" rx="2" ry="2" />
<text  x="980.38" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (304 samples, 0.23%)</title><rect x="1010.9" y="245" width="2.8" height="15.0" fill="rgb(240,41,16)" rx="2" ry="2" />
<text  x="1013.93" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (326 samples, 0.25%)</title><rect x="933.1" y="213" width="3.0" height="15.0" fill="rgb(207,162,6)" rx="2" ry="2" />
<text  x="936.12" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (43 samples, 0.03%)</title><rect x="883.2" y="293" width="0.4" height="15.0" fill="rgb(231,163,54)" rx="2" ry="2" />
<text  x="886.22" y="303.5" ></text>
</g>
<g >
<title>__gthread_active_p (17 samples, 0.01%)</title><rect x="963.9" y="197" width="0.1" height="15.0" fill="rgb(206,100,19)" rx="2" ry="2" />
<text  x="966.86" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (220 samples, 0.17%)</title><rect x="1010.9" y="229" width="2.0" height="15.0" fill="rgb(211,96,32)" rx="2" ry="2" />
<text  x="1013.95" y="239.5" ></text>
</g>
<g >
<title>operation_finish (22 samples, 0.02%)</title><rect x="808.3" y="565" width="0.2" height="15.0" fill="rgb(247,4,28)" rx="2" ry="2" />
<text  x="811.31" y="575.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (982 samples, 0.75%)</title><rect x="494.4" y="309" width="8.9" height="15.0" fill="rgb(226,46,54)" rx="2" ry="2" />
<text  x="497.44" y="319.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (39 samples, 0.03%)</title><rect x="976.3" y="229" width="0.4" height="15.0" fill="rgb(217,200,2)" rx="2" ry="2" />
<text  x="979.34" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (93 samples, 0.07%)</title><rect x="1002.8" y="181" width="0.8" height="15.0" fill="rgb(224,125,11)" rx="2" ry="2" />
<text  x="1005.77" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (24 samples, 0.02%)</title><rect x="899.1" y="261" width="0.3" height="15.0" fill="rgb(216,197,6)" rx="2" ry="2" />
<text  x="902.14" y="271.5" ></text>
</g>
<g >
<title>std::mutex::lock (277 samples, 0.21%)</title><rect x="1060.3" y="293" width="2.5" height="15.0" fill="rgb(211,47,40)" rx="2" ry="2" />
<text  x="1063.35" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (144 samples, 0.11%)</title><rect x="1024.7" y="277" width="1.3" height="15.0" fill="rgb(207,180,35)" rx="2" ry="2" />
<text  x="1027.72" y="287.5" ></text>
</g>
<g >
<title>heap_get_best_class (14 samples, 0.01%)</title><rect x="1142.7" y="597" width="0.1" height="15.0" fill="rgb(229,160,39)" rx="2" ry="2" />
<text  x="1145.67" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (26,974 samples, 20.59%)</title><rect x="825.3" y="501" width="243.0" height="15.0" fill="rgb(206,39,54)" rx="2" ry="2" />
<text  x="828.33" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16 samples, 0.01%)</title><rect x="938.6" y="277" width="0.2" height="15.0" fill="rgb(239,134,14)" rx="2" ry="2" />
<text  x="941.64" y="287.5" ></text>
</g>
<g >
<title>std::__addressof&lt;scythedb::NVMBlock::NVMBlock (13 samples, 0.01%)</title><rect x="405.9" y="213" width="0.1" height="15.0" fill="rgb(228,166,8)" rx="2" ry="2" />
<text  x="408.93" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (14 samples, 0.01%)</title><rect x="961.8" y="165" width="0.1" height="15.0" fill="rgb(212,218,34)" rx="2" ry="2" />
<text  x="964.81" y="175.5" ></text>
</g>
<g >
<title>scythedb::Hash64 (103 samples, 0.08%)</title><rect x="953.3" y="245" width="0.9" height="15.0" fill="rgb(219,101,2)" rx="2" ry="2" />
<text  x="956.25" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (191 samples, 0.15%)</title><rect x="930.2" y="277" width="1.8" height="15.0" fill="rgb(247,201,19)" rx="2" ry="2" />
<text  x="933.23" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (24 samples, 0.02%)</title><rect x="128.1" y="245" width="0.2" height="15.0" fill="rgb(245,110,27)" rx="2" ry="2" />
<text  x="131.12" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (397 samples, 0.30%)</title><rect x="499.6" y="277" width="3.6" height="15.0" fill="rgb(248,44,43)" rx="2" ry="2" />
<text  x="502.58" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (56 samples, 0.04%)</title><rect x="893.8" y="277" width="0.5" height="15.0" fill="rgb(234,74,30)" rx="2" ry="2" />
<text  x="896.81" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (134 samples, 0.10%)</title><rect x="1051.6" y="245" width="1.2" height="15.0" fill="rgb(247,28,23)" rx="2" ry="2" />
<text  x="1054.59" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (31 samples, 0.02%)</title><rect x="100.3" y="197" width="0.3" height="15.0" fill="rgb(250,74,37)" rx="2" ry="2" />
<text  x="103.32" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_snapshot.constprop.25 (1,219 samples, 0.93%)</title><rect x="1098.3" y="581" width="11.0" height="15.0" fill="rgb(254,208,38)" rx="2" ry="2" />
<text  x="1101.28" y="591.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (52 samples, 0.04%)</title><rect x="824.4" y="581" width="0.4" height="15.0" fill="rgb(224,104,10)" rx="2" ry="2" />
<text  x="827.36" y="591.5" ></text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (17 samples, 0.01%)</title><rect x="421.4" y="165" width="0.1" height="15.0" fill="rgb(209,141,14)" rx="2" ry="2" />
<text  x="424.38" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (1,344 samples, 1.03%)</title><rect x="906.3" y="309" width="12.1" height="15.0" fill="rgb(205,28,8)" rx="2" ry="2" />
<text  x="909.26" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (26 samples, 0.02%)</title><rect x="912.2" y="213" width="0.3" height="15.0" fill="rgb(230,154,38)" rx="2" ry="2" />
<text  x="915.23" y="223.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (17 samples, 0.01%)</title><rect x="846.4" y="197" width="0.1" height="15.0" fill="rgb(234,115,29)" rx="2" ry="2" />
<text  x="849.39" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (28 samples, 0.02%)</title><rect x="846.6" y="197" width="0.3" height="15.0" fill="rgb(237,146,14)" rx="2" ry="2" />
<text  x="849.61" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (76 samples, 0.06%)</title><rect x="1012.2" y="133" width="0.7" height="15.0" fill="rgb(233,108,11)" rx="2" ry="2" />
<text  x="1015.22" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (20 samples, 0.02%)</title><rect x="918.2" y="293" width="0.2" height="15.0" fill="rgb(214,207,54)" rx="2" ry="2" />
<text  x="921.19" y="303.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::operator++ (102 samples, 0.08%)</title><rect x="952.0" y="261" width="1.0" height="15.0" fill="rgb(233,188,16)" rx="2" ry="2" />
<text  x="955.05" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (17 samples, 0.01%)</title><rect x="903.9" y="261" width="0.2" height="15.0" fill="rgb(253,64,32)" rx="2" ry="2" />
<text  x="906.91" y="271.5" ></text>
</g>
<g >
<title>operator delete (24 samples, 0.02%)</title><rect x="447.9" y="245" width="0.2" height="15.0" fill="rgb(241,172,29)" rx="2" ry="2" />
<text  x="450.92" y="255.5" ></text>
</g>
<g >
<title>__gthread_active_p (42 samples, 0.03%)</title><rect x="873.9" y="213" width="0.4" height="15.0" fill="rgb(208,179,2)" rx="2" ry="2" />
<text  x="876.93" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1040.5" y="213" width="0.1" height="15.0" fill="rgb(231,87,47)" rx="2" ry="2" />
<text  x="1043.46" y="223.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (45 samples, 0.03%)</title><rect x="281.5" y="197" width="0.4" height="15.0" fill="rgb(209,135,38)" rx="2" ry="2" />
<text  x="284.53" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (45 samples, 0.03%)</title><rect x="931.4" y="261" width="0.4" height="15.0" fill="rgb(248,189,15)" rx="2" ry="2" />
<text  x="934.41" y="271.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="565" width="768.5" height="15.0" fill="rgb(226,180,1)" rx="2" ry="2" />
<text  x="13.14" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>malloc (16 samples, 0.01%)</title><rect x="1073.6" y="581" width="0.1" height="15.0" fill="rgb(236,93,19)" rx="2" ry="2" />
<text  x="1076.60" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (56 samples, 0.04%)</title><rect x="981.6" y="245" width="0.5" height="15.0" fill="rgb(248,176,2)" rx="2" ry="2" />
<text  x="984.56" y="255.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (10,662 samples, 8.14%)</title><rect x="283.9" y="181" width="96.1" height="15.0" fill="rgb(212,35,11)" rx="2" ry="2" />
<text  x="286.94" y="191.5" >scythedb::G..</text>
</g>
<g >
<title>pmemobj_tx_stage (13 samples, 0.01%)</title><rect x="415.3" y="229" width="0.1" height="15.0" fill="rgb(222,41,17)" rx="2" ry="2" />
<text  x="418.31" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (49 samples, 0.04%)</title><rect x="838.3" y="213" width="0.5" height="15.0" fill="rgb(253,0,34)" rx="2" ry="2" />
<text  x="841.33" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (59 samples, 0.05%)</title><rect x="1041.0" y="277" width="0.5" height="15.0" fill="rgb(214,80,25)" rx="2" ry="2" />
<text  x="1044.00" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (37 samples, 0.03%)</title><rect x="1014.4" y="245" width="0.3" height="15.0" fill="rgb(247,17,11)" rx="2" ry="2" />
<text  x="1017.40" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (33 samples, 0.03%)</title><rect x="434.6" y="261" width="0.3" height="15.0" fill="rgb(247,138,10)" rx="2" ry="2" />
<text  x="437.58" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_check_len (28 samples, 0.02%)</title><rect x="42.7" y="277" width="0.3" height="15.0" fill="rgb(245,217,22)" rx="2" ry="2" />
<text  x="45.74" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (34 samples, 0.03%)</title><rect x="115.3" y="325" width="0.3" height="15.0" fill="rgb(253,168,9)" rx="2" ry="2" />
<text  x="118.33" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (100 samples, 0.08%)</title><rect x="868.5" y="149" width="0.9" height="15.0" fill="rgb(224,57,7)" rx="2" ry="2" />
<text  x="871.53" y="159.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (92 samples, 0.07%)</title><rect x="966.3" y="117" width="0.9" height="15.0" fill="rgb(229,140,15)" rx="2" ry="2" />
<text  x="969.34" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (50 samples, 0.04%)</title><rect x="989.2" y="181" width="0.4" height="15.0" fill="rgb(236,146,40)" rx="2" ry="2" />
<text  x="992.19" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (385 samples, 0.29%)</title><rect x="975.4" y="277" width="3.4" height="15.0" fill="rgb(251,83,38)" rx="2" ry="2" />
<text  x="978.38" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (263 samples, 0.20%)</title><rect x="122.2" y="325" width="2.4" height="15.0" fill="rgb(211,110,30)" rx="2" ry="2" />
<text  x="125.24" y="335.5" ></text>
</g>
<g >
<title>std::make_pair&lt;pmem::obj::persistent_ptr&lt;char&gt;&amp;, unsigned long&amp;&gt; (23 samples, 0.02%)</title><rect x="150.4" y="181" width="0.2" height="15.0" fill="rgb(227,107,48)" rx="2" ry="2" />
<text  x="153.40" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (59 samples, 0.05%)</title><rect x="146.8" y="117" width="0.5" height="15.0" fill="rgb(223,155,10)" rx="2" ry="2" />
<text  x="149.76" y="127.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (68 samples, 0.05%)</title><rect x="1064.1" y="277" width="0.6" height="15.0" fill="rgb(213,220,50)" rx="2" ry="2" />
<text  x="1067.13" y="287.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (264 samples, 0.20%)</title><rect x="1015.1" y="261" width="2.4" height="15.0" fill="rgb(253,103,25)" rx="2" ry="2" />
<text  x="1018.13" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (36 samples, 0.03%)</title><rect x="41.7" y="309" width="0.4" height="15.0" fill="rgb(250,201,28)" rx="2" ry="2" />
<text  x="44.73" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (178 samples, 0.14%)</title><rect x="868.2" y="181" width="1.6" height="15.0" fill="rgb(253,141,30)" rx="2" ry="2" />
<text  x="871.21" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (123 samples, 0.09%)</title><rect x="124.8" y="325" width="1.1" height="15.0" fill="rgb(210,59,33)" rx="2" ry="2" />
<text  x="127.77" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (184 samples, 0.14%)</title><rect x="988.6" y="261" width="1.7" height="15.0" fill="rgb(251,115,8)" rx="2" ry="2" />
<text  x="991.60" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (32 samples, 0.02%)</title><rect x="921.7" y="229" width="0.2" height="15.0" fill="rgb(253,194,33)" rx="2" ry="2" />
<text  x="924.66" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (14 samples, 0.01%)</title><rect x="120.4" y="261" width="0.1" height="15.0" fill="rgb(254,102,34)" rx="2" ry="2" />
<text  x="123.40" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16 samples, 0.01%)</title><rect x="1052.8" y="261" width="0.2" height="15.0" fill="rgb(207,217,23)" rx="2" ry="2" />
<text  x="1055.83" y="271.5" ></text>
</g>
<g >
<title>find_le (58 samples, 0.04%)</title><rect x="1142.1" y="597" width="0.6" height="15.0" fill="rgb(218,13,42)" rx="2" ry="2" />
<text  x="1145.13" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14 samples, 0.01%)</title><rect x="970.1" y="261" width="0.1" height="15.0" fill="rgb(237,185,50)" rx="2" ry="2" />
<text  x="973.12" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (34 samples, 0.03%)</title><rect x="141.1" y="165" width="0.3" height="15.0" fill="rgb(238,147,22)" rx="2" ry="2" />
<text  x="144.10" y="175.5" ></text>
</g>
<g >
<title>tx_action_reserve.constprop.27 (20 samples, 0.02%)</title><rect x="1113.6" y="581" width="0.2" height="15.0" fill="rgb(221,13,8)" rx="2" ry="2" />
<text  x="1116.58" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (25 samples, 0.02%)</title><rect x="847.8" y="197" width="0.2" height="15.0" fill="rgb(232,48,26)" rx="2" ry="2" />
<text  x="850.79" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20 samples, 0.02%)</title><rect x="971.9" y="213" width="0.2" height="15.0" fill="rgb(233,198,33)" rx="2" ry="2" />
<text  x="974.93" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (20 samples, 0.02%)</title><rect x="140.9" y="165" width="0.2" height="15.0" fill="rgb(225,48,53)" rx="2" ry="2" />
<text  x="143.90" y="175.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (57 samples, 0.04%)</title><rect x="794.6" y="565" width="0.5" height="15.0" fill="rgb(235,213,17)" rx="2" ry="2" />
<text  x="797.60" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::allocate (79 samples, 0.06%)</title><rect x="127.3" y="261" width="0.7" height="15.0" fill="rgb(237,196,42)" rx="2" ry="2" />
<text  x="130.30" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_realloc_insert&lt;scythedb::Slice&gt; (103 samples, 0.08%)</title><rect x="42.1" y="293" width="0.9" height="15.0" fill="rgb(253,29,11)" rx="2" ry="2" />
<text  x="45.10" y="303.5" ></text>
</g>
<g >
<title>__random_r (88 samples, 0.07%)</title><rect x="891.8" y="309" width="0.8" height="15.0" fill="rgb(252,221,13)" rx="2" ry="2" />
<text  x="894.81" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Node (12 samples, 0.01%)</title><rect x="425.2" y="261" width="0.1" height="15.0" fill="rgb(248,214,48)" rx="2" ry="2" />
<text  x="428.19" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (39 samples, 0.03%)</title><rect x="969.9" y="277" width="0.4" height="15.0" fill="rgb(238,16,40)" rx="2" ry="2" />
<text  x="972.92" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17 samples, 0.01%)</title><rect x="986.6" y="197" width="0.1" height="15.0" fill="rgb(240,77,53)" rx="2" ry="2" />
<text  x="989.56" y="207.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (21 samples, 0.02%)</title><rect x="823.5" y="565" width="0.2" height="15.0" fill="rgb(249,228,40)" rx="2" ry="2" />
<text  x="826.55" y="575.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (37 samples, 0.03%)</title><rect x="405.3" y="197" width="0.4" height="15.0" fill="rgb(218,1,13)" rx="2" ry="2" />
<text  x="408.32" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (97 samples, 0.07%)</title><rect x="1050.3" y="277" width="0.9" height="15.0" fill="rgb(218,163,10)" rx="2" ry="2" />
<text  x="1053.31" y="287.5" ></text>
</g>
<g >
<title>ycsbc::Client::TransactionRead (5,851 samples, 4.47%)</title><rect x="942.2" y="325" width="52.7" height="15.0" fill="rgb(245,143,48)" rx="2" ry="2" />
<text  x="945.17" y="335.5" >ycsbc..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (19 samples, 0.01%)</title><rect x="1052.1" y="165" width="0.1" height="15.0" fill="rgb(223,84,33)" rx="2" ry="2" />
<text  x="1055.07" y="175.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (59 samples, 0.05%)</title><rect x="453.7" y="293" width="0.5" height="15.0" fill="rgb(240,205,21)" rx="2" ry="2" />
<text  x="456.68" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (20 samples, 0.02%)</title><rect x="1000.7" y="181" width="0.2" height="15.0" fill="rgb(252,74,32)" rx="2" ry="2" />
<text  x="1003.68" y="191.5" ></text>
</g>
<g >
<title>ulog_entry_apply (25 samples, 0.02%)</title><rect x="1115.5" y="581" width="0.2" height="15.0" fill="rgb(214,14,47)" rx="2" ry="2" />
<text  x="1118.47" y="591.5" ></text>
</g>
<g >
<title>_int_free (217 samples, 0.17%)</title><rect x="803.0" y="565" width="2.0" height="15.0" fill="rgb(250,151,46)" rx="2" ry="2" />
<text  x="806.02" y="575.5" ></text>
</g>
<g >
<title>_int_free (50 samples, 0.04%)</title><rect x="844.0" y="165" width="0.5" height="15.0" fill="rgb(246,127,24)" rx="2" ry="2" />
<text  x="847.01" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (52 samples, 0.04%)</title><rect x="959.0" y="245" width="0.5" height="15.0" fill="rgb(219,18,4)" rx="2" ry="2" />
<text  x="962.04" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (7,350 samples, 5.61%)</title><rect x="177.7" y="213" width="66.2" height="15.0" fill="rgb(245,93,49)" rx="2" ry="2" />
<text  x="180.69" y="223.5" >pmem::o..</text>
</g>
<g >
<title>std::function&lt;void  (15 samples, 0.01%)</title><rect x="869.6" y="149" width="0.2" height="15.0" fill="rgb(231,86,23)" rx="2" ry="2" />
<text  x="872.62" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (43 samples, 0.03%)</title><rect x="431.2" y="245" width="0.4" height="15.0" fill="rgb(252,48,17)" rx="2" ry="2" />
<text  x="434.20" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (159 samples, 0.12%)</title><rect x="979.4" y="277" width="1.5" height="15.0" fill="rgb(209,152,20)" rx="2" ry="2" />
<text  x="982.42" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (18 samples, 0.01%)</title><rect x="919.4" y="309" width="0.2" height="15.0" fill="rgb(251,77,32)" rx="2" ry="2" />
<text  x="922.44" y="319.5" ></text>
</g>
<g >
<title>palloc_exec_actions (41 samples, 0.03%)</title><rect x="1166.1" y="597" width="0.4" height="15.0" fill="rgb(224,66,25)" rx="2" ry="2" />
<text  x="1169.10" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (109 samples, 0.08%)</title><rect x="987.4" y="277" width="1.0" height="15.0" fill="rgb(241,139,15)" rx="2" ry="2" />
<text  x="990.44" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (12 samples, 0.01%)</title><rect x="986.6" y="181" width="0.1" height="15.0" fill="rgb(230,103,13)" rx="2" ry="2" />
<text  x="989.56" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="895.9" y="261" width="0.1" height="15.0" fill="rgb(235,215,15)" rx="2" ry="2" />
<text  x="898.93" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (15 samples, 0.01%)</title><rect x="151.6" y="277" width="0.2" height="15.0" fill="rgb(205,120,52)" rx="2" ry="2" />
<text  x="154.62" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (16 samples, 0.01%)</title><rect x="1007.1" y="229" width="0.2" height="15.0" fill="rgb(223,7,40)" rx="2" ry="2" />
<text  x="1010.12" y="239.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::BlockIndexHeader*&gt;::load (24 samples, 0.02%)</title><rect x="498.9" y="261" width="0.2" height="15.0" fill="rgb(235,78,3)" rx="2" ry="2" />
<text  x="501.92" y="271.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (48 samples, 0.04%)</title><rect x="1109.3" y="581" width="0.4" height="15.0" fill="rgb(211,217,31)" rx="2" ry="2" />
<text  x="1112.29" y="591.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (297 samples, 0.23%)</title><rect x="955.2" y="261" width="2.6" height="15.0" fill="rgb(226,93,13)" rx="2" ry="2" />
<text  x="958.15" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (38 samples, 0.03%)</title><rect x="1026.1" y="293" width="0.3" height="15.0" fill="rgb(252,59,19)" rx="2" ry="2" />
<text  x="1029.06" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (201 samples, 0.15%)</title><rect x="972.1" y="213" width="1.8" height="15.0" fill="rgb(221,134,31)" rx="2" ry="2" />
<text  x="975.13" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (42 samples, 0.03%)</title><rect x="807.8" y="565" width="0.4" height="15.0" fill="rgb(212,60,8)" rx="2" ry="2" />
<text  x="810.85" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (11,070 samples, 8.45%)</title><rect x="176.9" y="245" width="99.7" height="15.0" fill="rgb(219,72,33)" rx="2" ry="2" />
<text  x="179.86" y="255.5" >scythedb::NV..</text>
</g>
<g >
<title>scythedb::Status::~Status (15 samples, 0.01%)</title><rect x="968.0" y="309" width="0.2" height="15.0" fill="rgb(224,35,15)" rx="2" ry="2" />
<text  x="971.03" y="319.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (12 samples, 0.01%)</title><rect x="74.4" y="277" width="0.1" height="15.0" fill="rgb(220,228,54)" rx="2" ry="2" />
<text  x="77.43" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (19 samples, 0.01%)</title><rect x="977.5" y="197" width="0.2" height="15.0" fill="rgb(207,185,44)" rx="2" ry="2" />
<text  x="980.54" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (24 samples, 0.02%)</title><rect x="1014.8" y="261" width="0.2" height="15.0" fill="rgb(239,184,20)" rx="2" ry="2" />
<text  x="1017.81" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (136 samples, 0.10%)</title><rect x="1167.4" y="597" width="1.2" height="15.0" fill="rgb(249,147,46)" rx="2" ry="2" />
<text  x="1170.39" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (189 samples, 0.14%)</title><rect x="872.2" y="213" width="1.7" height="15.0" fill="rgb(234,73,52)" rx="2" ry="2" />
<text  x="875.23" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (7,290 samples, 5.56%)</title><rect x="44.4" y="293" width="65.7" height="15.0" fill="rgb(208,61,10)" rx="2" ry="2" />
<text  x="47.39" y="303.5" >scythed..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (133 samples, 0.10%)</title><rect x="979.6" y="213" width="1.2" height="15.0" fill="rgb(232,51,33)" rx="2" ry="2" />
<text  x="982.61" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (35 samples, 0.03%)</title><rect x="813.7" y="549" width="0.4" height="15.0" fill="rgb(226,114,41)" rx="2" ry="2" />
<text  x="816.74" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (35 samples, 0.03%)</title><rect x="1051.9" y="181" width="0.3" height="15.0" fill="rgb(243,131,16)" rx="2" ry="2" />
<text  x="1054.92" y="191.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::CalcQueueLane (131 samples, 0.10%)</title><rect x="953.0" y="261" width="1.2" height="15.0" fill="rgb(208,18,0)" rx="2" ry="2" />
<text  x="956.02" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (217 samples, 0.17%)</title><rect x="876.6" y="149" width="2.0" height="15.0" fill="rgb(230,114,11)" rx="2" ry="2" />
<text  x="879.61" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (24 samples, 0.02%)</title><rect x="981.8" y="229" width="0.2" height="15.0" fill="rgb(206,63,53)" rx="2" ry="2" />
<text  x="984.82" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (435 samples, 0.33%)</title><rect x="895.6" y="293" width="3.9" height="15.0" fill="rgb(205,2,0)" rx="2" ry="2" />
<text  x="898.59" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (734 samples, 0.56%)</title><rect x="438.9" y="261" width="6.6" height="15.0" fill="rgb(251,4,10)" rx="2" ry="2" />
<text  x="441.85" y="271.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (168 samples, 0.13%)</title><rect x="999.8" y="245" width="1.5" height="15.0" fill="rgb(249,173,54)" rx="2" ry="2" />
<text  x="1002.78" y="255.5" ></text>
</g>
<g >
<title>std::type_info::name (21 samples, 0.02%)</title><rect x="142.1" y="133" width="0.1" height="15.0" fill="rgb(222,45,1)" rx="2" ry="2" />
<text  x="145.05" y="143.5" ></text>
</g>
<g >
<title>XXH64_endian_align (181 samples, 0.14%)</title><rect x="855.1" y="229" width="1.6" height="15.0" fill="rgb(227,124,49)" rx="2" ry="2" />
<text  x="858.07" y="239.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (15 samples, 0.01%)</title><rect x="928.8" y="229" width="0.2" height="15.0" fill="rgb(237,222,19)" rx="2" ry="2" />
<text  x="931.83" y="239.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (40 samples, 0.03%)</title><rect x="32.1" y="405" width="0.3" height="15.0" fill="rgb(217,9,51)" rx="2" ry="2" />
<text  x="35.09" y="415.5" ></text>
</g>
<g >
<title>alloc_class_by_alloc_size (41 samples, 0.03%)</title><rect x="1141.4" y="597" width="0.4" height="15.0" fill="rgb(225,13,47)" rx="2" ry="2" />
<text  x="1144.40" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (15 samples, 0.01%)</title><rect x="75.1" y="261" width="0.1" height="15.0" fill="rgb(253,120,10)" rx="2" ry="2" />
<text  x="78.09" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (21 samples, 0.02%)</title><rect x="1002.3" y="181" width="0.1" height="15.0" fill="rgb(227,222,47)" rx="2" ry="2" />
<text  x="1005.26" y="191.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (61 samples, 0.05%)</title><rect x="106.8" y="181" width="0.6" height="15.0" fill="rgb(224,188,41)" rx="2" ry="2" />
<text  x="109.85" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (350 samples, 0.27%)</title><rect x="971.0" y="245" width="3.1" height="15.0" fill="rgb(235,186,30)" rx="2" ry="2" />
<text  x="973.96" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (485 samples, 0.37%)</title><rect x="1017.9" y="229" width="4.4" height="15.0" fill="rgb(242,101,31)" rx="2" ry="2" />
<text  x="1020.90" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (30 samples, 0.02%)</title><rect x="28.4" y="453" width="0.3" height="15.0" fill="rgb(222,113,54)" rx="2" ry="2" />
<text  x="31.45" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (60 samples, 0.05%)</title><rect x="959.0" y="261" width="0.5" height="15.0" fill="rgb(220,49,30)" rx="2" ry="2" />
<text  x="961.96" y="271.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoTransaction (22 samples, 0.02%)</title><rect x="825.5" y="357" width="0.2" height="15.0" fill="rgb(211,88,45)" rx="2" ry="2" />
<text  x="828.46" y="367.5" ></text>
</g>
<g >
<title>scythedb::Arena::AllocateAligned (14 samples, 0.01%)</title><rect x="413.5" y="261" width="0.1" height="15.0" fill="rgb(207,127,46)" rx="2" ry="2" />
<text  x="416.52" y="271.5" ></text>
</g>
<g >
<title>pmemobj_root (30 samples, 0.02%)</title><rect x="422.9" y="245" width="0.3" height="15.0" fill="rgb(216,114,19)" rx="2" ry="2" />
<text  x="425.90" y="255.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (12 samples, 0.01%)</title><rect x="922.3" y="197" width="0.1" height="15.0" fill="rgb(242,91,30)" rx="2" ry="2" />
<text  x="925.27" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (12 samples, 0.01%)</title><rect x="985.5" y="197" width="0.1" height="15.0" fill="rgb(208,93,53)" rx="2" ry="2" />
<text  x="988.48" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (17 samples, 0.01%)</title><rect x="150.6" y="229" width="0.2" height="15.0" fill="rgb(238,59,26)" rx="2" ry="2" />
<text  x="153.63" y="239.5" ></text>
</g>
<g >
<title>[unknown] (3,271 samples, 2.50%)</title><rect x="793.3" y="581" width="29.5" height="15.0" fill="rgb(225,95,13)" rx="2" ry="2" />
<text  x="796.29" y="591.5" >[u..</text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;*&gt; (15 samples, 0.01%)</title><rect x="146.2" y="37" width="0.1" height="15.0" fill="rgb(249,50,54)" rx="2" ry="2" />
<text  x="149.19" y="47.5" ></text>
</g>
<g >
<title>malloc (13 samples, 0.01%)</title><rect x="424.3" y="213" width="0.1" height="15.0" fill="rgb(244,39,17)" rx="2" ry="2" />
<text  x="427.28" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (106 samples, 0.08%)</title><rect x="864.7" y="277" width="1.0" height="15.0" fill="rgb(215,121,23)" rx="2" ry="2" />
<text  x="867.71" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (12 samples, 0.01%)</title><rect x="414.5" y="213" width="0.1" height="15.0" fill="rgb(220,133,6)" rx="2" ry="2" />
<text  x="417.47" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13 samples, 0.01%)</title><rect x="1039.3" y="229" width="0.1" height="15.0" fill="rgb(213,185,46)" rx="2" ry="2" />
<text  x="1042.27" y="239.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (49 samples, 0.04%)</title><rect x="20.2" y="437" width="0.5" height="15.0" fill="rgb(253,200,6)" rx="2" ry="2" />
<text  x="23.21" y="447.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::RecordPersist (33,056 samples, 25.23%)</title><rect x="133.0" y="309" width="297.7" height="15.0" fill="rgb(224,152,38)" rx="2" ry="2" />
<text  x="135.95" y="319.5" >scythedb::NVMBlock::RecordPersist</text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (17 samples, 0.01%)</title><rect x="40.3" y="357" width="0.1" height="15.0" fill="rgb(220,215,26)" rx="2" ry="2" />
<text  x="43.27" y="367.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_entry_for_index (164 samples, 0.13%)</title><rect x="497.7" y="293" width="1.5" height="15.0" fill="rgb(238,81,2)" rx="2" ry="2" />
<text  x="500.71" y="303.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul&gt; (14 samples, 0.01%)</title><rect x="994.5" y="149" width="0.1" height="15.0" fill="rgb(241,201,45)" rx="2" ry="2" />
<text  x="997.49" y="159.5" ></text>
</g>
<g >
<title>pmem::obj::operator+=&lt;unsigned long, unsigned long&gt; (26 samples, 0.02%)</title><rect x="140.8" y="181" width="0.3" height="15.0" fill="rgb(241,9,39)" rx="2" ry="2" />
<text  x="143.84" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (151 samples, 0.12%)</title><rect x="968.9" y="293" width="1.4" height="15.0" fill="rgb(247,58,20)" rx="2" ry="2" />
<text  x="971.93" y="303.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::MutexLock (714 samples, 0.55%)</title><rect x="14.4" y="453" width="6.4" height="15.0" fill="rgb(246,207,43)" rx="2" ry="2" />
<text  x="17.39" y="463.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (30 samples, 0.02%)</title><rect x="896.8" y="245" width="0.3" height="15.0" fill="rgb(213,208,44)" rx="2" ry="2" />
<text  x="899.83" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (14 samples, 0.01%)</title><rect x="950.2" y="245" width="0.2" height="15.0" fill="rgb(252,70,39)" rx="2" ry="2" />
<text  x="953.23" y="255.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (39 samples, 0.03%)</title><rect x="851.9" y="245" width="0.4" height="15.0" fill="rgb(242,20,8)" rx="2" ry="2" />
<text  x="854.91" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (52 samples, 0.04%)</title><rect x="431.7" y="245" width="0.4" height="15.0" fill="rgb(250,108,37)" rx="2" ry="2" />
<text  x="434.67" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (27 samples, 0.02%)</title><rect x="916.1" y="213" width="0.2" height="15.0" fill="rgb(213,174,20)" rx="2" ry="2" />
<text  x="919.09" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (80 samples, 0.06%)</title><rect x="938.9" y="277" width="0.7" height="15.0" fill="rgb(209,185,40)" rx="2" ry="2" />
<text  x="941.89" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (208 samples, 0.16%)</title><rect x="850.4" y="261" width="1.9" height="15.0" fill="rgb(243,107,8)" rx="2" ry="2" />
<text  x="853.39" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (80 samples, 0.06%)</title><rect x="1049.2" y="261" width="0.7" height="15.0" fill="rgb(232,27,38)" rx="2" ry="2" />
<text  x="1052.21" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (12 samples, 0.01%)</title><rect x="1024.5" y="277" width="0.1" height="15.0" fill="rgb(222,177,22)" rx="2" ry="2" />
<text  x="1027.49" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (47 samples, 0.04%)</title><rect x="1025.3" y="149" width="0.4" height="15.0" fill="rgb(205,141,43)" rx="2" ry="2" />
<text  x="1028.25" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (138 samples, 0.11%)</title><rect x="977.0" y="213" width="1.3" height="15.0" fill="rgb(243,171,23)" rx="2" ry="2" />
<text  x="980.01" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (112 samples, 0.09%)</title><rect x="129.3" y="261" width="1.1" height="15.0" fill="rgb(239,119,2)" rx="2" ry="2" />
<text  x="132.34" y="271.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (38 samples, 0.03%)</title><rect x="961.7" y="197" width="0.3" height="15.0" fill="rgb(251,173,31)" rx="2" ry="2" />
<text  x="964.66" y="207.5" ></text>
</g>
<g >
<title>__random (134 samples, 0.10%)</title><rect x="1027.0" y="293" width="1.2" height="15.0" fill="rgb(230,134,32)" rx="2" ry="2" />
<text  x="1029.98" y="303.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (212 samples, 0.16%)</title><rect x="773.4" y="405" width="2.0" height="15.0" fill="rgb(241,53,18)" rx="2" ry="2" />
<text  x="776.45" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (31 samples, 0.02%)</title><rect x="899.1" y="277" width="0.3" height="15.0" fill="rgb(232,72,37)" rx="2" ry="2" />
<text  x="902.07" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (30 samples, 0.02%)</title><rect x="1031.0" y="293" width="0.3" height="15.0" fill="rgb(239,190,44)" rx="2" ry="2" />
<text  x="1033.99" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (17 samples, 0.01%)</title><rect x="847.9" y="181" width="0.1" height="15.0" fill="rgb(221,61,7)" rx="2" ry="2" />
<text  x="850.87" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::realloc (80 samples, 0.06%)</title><rect x="145.6" y="85" width="0.7" height="15.0" fill="rgb(251,181,21)" rx="2" ry="2" />
<text  x="148.61" y="95.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (85 samples, 0.06%)</title><rect x="1002.8" y="165" width="0.8" height="15.0" fill="rgb(244,20,28)" rx="2" ry="2" />
<text  x="1005.84" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;void  (241 samples, 0.18%)</title><rect x="864.2" y="293" width="2.2" height="15.0" fill="rgb(215,160,48)" rx="2" ry="2" />
<text  x="867.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (352 samples, 0.27%)</title><rect x="933.0" y="229" width="3.2" height="15.0" fill="rgb(250,53,45)" rx="2" ry="2" />
<text  x="936.02" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (35 samples, 0.03%)</title><rect x="1034.9" y="213" width="0.3" height="15.0" fill="rgb(241,50,40)" rx="2" ry="2" />
<text  x="1037.85" y="223.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (18 samples, 0.01%)</title><rect x="1116.6" y="501" width="0.2" height="15.0" fill="rgb(226,46,45)" rx="2" ry="2" />
<text  x="1119.59" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (349 samples, 0.27%)</title><rect x="111.9" y="325" width="3.1" height="15.0" fill="rgb(208,119,19)" rx="2" ry="2" />
<text  x="114.88" y="335.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (305 samples, 0.23%)</title><rect x="959.6" y="277" width="2.7" height="15.0" fill="rgb(224,141,32)" rx="2" ry="2" />
<text  x="962.60" y="287.5" ></text>
</g>
<g >
<title>std::mutex::unlock (213 samples, 0.16%)</title><rect x="1062.8" y="293" width="2.0" height="15.0" fill="rgb(229,110,15)" rx="2" ry="2" />
<text  x="1065.84" y="303.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Scramble (35 samples, 0.03%)</title><rect x="1053.3" y="277" width="0.4" height="15.0" fill="rgb(209,219,16)" rx="2" ry="2" />
<text  x="1056.35" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (57 samples, 0.04%)</title><rect x="900.0" y="293" width="0.5" height="15.0" fill="rgb(209,106,46)" rx="2" ry="2" />
<text  x="902.96" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="813.4" y="549" width="0.3" height="15.0" fill="rgb(234,21,13)" rx="2" ry="2" />
<text  x="816.42" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (33 samples, 0.03%)</title><rect x="1046.4" y="229" width="0.3" height="15.0" fill="rgb(212,193,0)" rx="2" ry="2" />
<text  x="1049.45" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (81 samples, 0.06%)</title><rect x="910.1" y="261" width="0.7" height="15.0" fill="rgb(235,109,15)" rx="2" ry="2" />
<text  x="913.05" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24 samples, 0.02%)</title><rect x="1004.8" y="213" width="0.2" height="15.0" fill="rgb(208,78,24)" rx="2" ry="2" />
<text  x="1007.76" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (195 samples, 0.15%)</title><rect x="901.0" y="309" width="1.7" height="15.0" fill="rgb(225,151,4)" rx="2" ry="2" />
<text  x="903.96" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~_Vector_base (13 samples, 0.01%)</title><rect x="121.4" y="325" width="0.1" height="15.0" fill="rgb(221,21,9)" rx="2" ry="2" />
<text  x="124.36" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (28 samples, 0.02%)</title><rect x="900.7" y="293" width="0.2" height="15.0" fill="rgb(248,96,28)" rx="2" ry="2" />
<text  x="903.67" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (79 samples, 0.06%)</title><rect x="1048.2" y="229" width="0.7" height="15.0" fill="rgb(234,217,2)" rx="2" ry="2" />
<text  x="1051.23" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (991 samples, 0.76%)</title><rect x="871.5" y="277" width="8.9" height="15.0" fill="rgb(234,123,23)" rx="2" ry="2" />
<text  x="874.46" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (20 samples, 0.02%)</title><rect x="147.9" y="149" width="0.2" height="15.0" fill="rgb(233,106,26)" rx="2" ry="2" />
<text  x="150.89" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (26 samples, 0.02%)</title><rect x="913.4" y="149" width="0.3" height="15.0" fill="rgb(228,150,35)" rx="2" ry="2" />
<text  x="916.42" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1,159 samples, 0.88%)</title><rect x="907.7" y="293" width="10.4" height="15.0" fill="rgb(219,198,16)" rx="2" ry="2" />
<text  x="910.66" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (34 samples, 0.03%)</title><rect x="413.1" y="277" width="0.3" height="15.0" fill="rgb(251,214,48)" rx="2" ry="2" />
<text  x="416.05" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (38 samples, 0.03%)</title><rect x="1004.0" y="181" width="0.3" height="15.0" fill="rgb(245,200,35)" rx="2" ry="2" />
<text  x="1006.97" y="191.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (62 samples, 0.05%)</title><rect x="1066.6" y="213" width="0.6" height="15.0" fill="rgb(244,161,39)" rx="2" ry="2" />
<text  x="1069.61" y="223.5" ></text>
</g>
<g >
<title>malloc (14 samples, 0.01%)</title><rect x="127.4" y="245" width="0.2" height="15.0" fill="rgb(248,158,17)" rx="2" ry="2" />
<text  x="130.45" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (13 samples, 0.01%)</title><rect x="920.0" y="293" width="0.1" height="15.0" fill="rgb(209,2,8)" rx="2" ry="2" />
<text  x="922.98" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (17 samples, 0.01%)</title><rect x="894.8" y="229" width="0.2" height="15.0" fill="rgb(207,169,5)" rx="2" ry="2" />
<text  x="897.82" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (49 samples, 0.04%)</title><rect x="1003.9" y="197" width="0.5" height="15.0" fill="rgb(221,39,41)" rx="2" ry="2" />
<text  x="1006.94" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_common.constprop.20 (16 samples, 0.01%)</title><rect x="1167.0" y="597" width="0.1" height="15.0" fill="rgb(248,155,1)" rx="2" ry="2" />
<text  x="1169.98" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (23 samples, 0.02%)</title><rect x="839.3" y="181" width="0.2" height="15.0" fill="rgb(232,174,51)" rx="2" ry="2" />
<text  x="842.30" y="191.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (13 samples, 0.01%)</title><rect x="1057.1" y="165" width="0.1" height="15.0" fill="rgb(238,173,33)" rx="2" ry="2" />
<text  x="1060.11" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (220 samples, 0.17%)</title><rect x="893.2" y="293" width="2.0" height="15.0" fill="rgb(215,69,9)" rx="2" ry="2" />
<text  x="896.21" y="303.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (294 samples, 0.22%)</title><rect x="959.6" y="261" width="2.7" height="15.0" fill="rgb(225,16,19)" rx="2" ry="2" />
<text  x="962.60" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (31 samples, 0.02%)</title><rect x="412.3" y="261" width="0.3" height="15.0" fill="rgb(219,70,51)" rx="2" ry="2" />
<text  x="415.29" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (2,955 samples, 2.26%)</title><rect x="249.5" y="213" width="26.6" height="15.0" fill="rgb(243,13,49)" rx="2" ry="2" />
<text  x="252.48" y="223.5" >p..</text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::next_prod (1,608 samples, 1.23%)</title><rect x="503.4" y="325" width="14.4" height="15.0" fill="rgb(243,98,14)" rx="2" ry="2" />
<text  x="506.35" y="335.5" ></text>
</g>
<g >
<title>__gthread_active_p (15 samples, 0.01%)</title><rect x="1019.2" y="197" width="0.1" height="15.0" fill="rgb(205,167,24)" rx="2" ry="2" />
<text  x="1022.18" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (21 samples, 0.02%)</title><rect x="914.1" y="149" width="0.2" height="15.0" fill="rgb(232,161,7)" rx="2" ry="2" />
<text  x="917.13" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (963 samples, 0.74%)</title><rect x="871.7" y="261" width="8.7" height="15.0" fill="rgb(227,183,53)" rx="2" ry="2" />
<text  x="874.71" y="271.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::move_iterator (14 samples, 0.01%)</title><rect x="909.9" y="245" width="0.2" height="15.0" fill="rgb(243,38,36)" rx="2" ry="2" />
<text  x="912.93" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="1003.3" y="149" width="0.2" height="15.0" fill="rgb(231,222,43)" rx="2" ry="2" />
<text  x="1006.34" y="159.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (64 samples, 0.05%)</title><rect x="152.6" y="261" width="0.6" height="15.0" fill="rgb(238,11,48)" rx="2" ry="2" />
<text  x="155.60" y="271.5" ></text>
</g>
<g >
<title>ulog_clobber_entry (14 samples, 0.01%)</title><rect x="1115.3" y="581" width="0.2" height="15.0" fill="rgb(225,223,7)" rx="2" ry="2" />
<text  x="1118.35" y="591.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::key (22 samples, 0.02%)</title><rect x="111.7" y="325" width="0.1" height="15.0" fill="rgb(250,32,31)" rx="2" ry="2" />
<text  x="114.65" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (718 samples, 0.55%)</title><rect x="169.8" y="245" width="6.5" height="15.0" fill="rgb(213,27,51)" rx="2" ry="2" />
<text  x="172.82" y="255.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildUpdate (1,921 samples, 1.47%)</title><rect x="1026.5" y="309" width="17.3" height="15.0" fill="rgb(217,215,17)" rx="2" ry="2" />
<text  x="1029.51" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (59 samples, 0.05%)</title><rect x="896.6" y="261" width="0.5" height="15.0" fill="rgb(251,4,27)" rx="2" ry="2" />
<text  x="899.57" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::push_back (32 samples, 0.02%)</title><rect x="422.5" y="149" width="0.2" height="15.0" fill="rgb(226,66,53)" rx="2" ry="2" />
<text  x="425.46" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (94 samples, 0.07%)</title><rect x="933.9" y="181" width="0.8" height="15.0" fill="rgb(218,164,12)" rx="2" ry="2" />
<text  x="936.88" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (13 samples, 0.01%)</title><rect x="847.3" y="213" width="0.2" height="15.0" fill="rgb(230,90,45)" rx="2" ry="2" />
<text  x="850.34" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait (81 samples, 0.06%)</title><rect x="991.7" y="213" width="0.7" height="15.0" fill="rgb(209,190,19)" rx="2" ry="2" />
<text  x="994.66" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (475 samples, 0.36%)</title><rect x="970.4" y="293" width="4.3" height="15.0" fill="rgb(241,170,17)" rx="2" ry="2" />
<text  x="973.39" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (13 samples, 0.01%)</title><rect x="869.3" y="133" width="0.1" height="15.0" fill="rgb(228,214,18)" rx="2" ry="2" />
<text  x="872.31" y="143.5" ></text>
</g>
<g >
<title>scythedb::Status::OK (15 samples, 0.01%)</title><rect x="880.7" y="309" width="0.1" height="15.0" fill="rgb(233,25,16)" rx="2" ry="2" />
<text  x="883.69" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (25 samples, 0.02%)</title><rect x="432.8" y="261" width="0.3" height="15.0" fill="rgb(241,73,21)" rx="2" ry="2" />
<text  x="435.84" y="271.5" ></text>
</g>
<g >
<title>_int_free (15 samples, 0.01%)</title><rect x="1111.8" y="565" width="0.1" height="15.0" fill="rgb(231,76,28)" rx="2" ry="2" />
<text  x="1114.80" y="575.5" ></text>
</g>
<g >
<title>memblock_rebuild_state (16 samples, 0.01%)</title><rect x="1073.8" y="581" width="0.2" height="15.0" fill="rgb(218,42,10)" rx="2" ry="2" />
<text  x="1076.81" y="591.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (14 samples, 0.01%)</title><rect x="979.2" y="277" width="0.1" height="15.0" fill="rgb(250,191,36)" rx="2" ry="2" />
<text  x="982.16" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (84 samples, 0.06%)</title><rect x="956.4" y="165" width="0.7" height="15.0" fill="rgb(222,40,20)" rx="2" ry="2" />
<text  x="959.38" y="175.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextFieldName[abi:cxx11] (611 samples, 0.47%)</title><rect x="1038.3" y="293" width="5.5" height="15.0" fill="rgb(228,73,35)" rx="2" ry="2" />
<text  x="1041.30" y="303.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (18 samples, 0.01%)</title><rect x="14.1" y="453" width="0.2" height="15.0" fill="rgb(241,100,51)" rx="2" ry="2" />
<text  x="17.12" y="463.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (31 samples, 0.02%)</title><rect x="453.3" y="293" width="0.3" height="15.0" fill="rgb(212,25,32)" rx="2" ry="2" />
<text  x="456.27" y="303.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (59 samples, 0.05%)</title><rect x="430.0" y="261" width="0.5" height="15.0" fill="rgb(218,94,2)" rx="2" ry="2" />
<text  x="433.00" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (66 samples, 0.05%)</title><rect x="874.8" y="213" width="0.6" height="15.0" fill="rgb(218,6,29)" rx="2" ry="2" />
<text  x="877.79" y="223.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (48 samples, 0.04%)</title><rect x="880.9" y="309" width="0.4" height="15.0" fill="rgb(210,154,50)" rx="2" ry="2" />
<text  x="883.86" y="319.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (73 samples, 0.06%)</title><rect x="994.1" y="213" width="0.7" height="15.0" fill="rgb(213,193,3)" rx="2" ry="2" />
<text  x="997.09" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (67 samples, 0.05%)</title><rect x="981.5" y="277" width="0.6" height="15.0" fill="rgb(234,63,52)" rx="2" ry="2" />
<text  x="984.51" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (30 samples, 0.02%)</title><rect x="431.7" y="229" width="0.3" height="15.0" fill="rgb(251,67,49)" rx="2" ry="2" />
<text  x="434.71" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (85,316 samples, 65.13%)</title><rect x="10.1" y="597" width="768.5" height="15.0" fill="rgb(235,36,19)" rx="2" ry="2" />
<text  x="13.14" y="607.5" >[libstdc++.so.6.0.25]</text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase*&gt;::load (16 samples, 0.01%)</title><rect x="718.5" y="341" width="0.1" height="15.0" fill="rgb(243,116,14)" rx="2" ry="2" />
<text  x="721.50" y="351.5" ></text>
</g>
<g >
<title>std::this_thread::yield (23 samples, 0.02%)</title><rect x="772.2" y="373" width="0.2" height="15.0" fill="rgb(213,221,54)" rx="2" ry="2" />
<text  x="775.17" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (26 samples, 0.02%)</title><rect x="895.9" y="277" width="0.2" height="15.0" fill="rgb(237,42,5)" rx="2" ry="2" />
<text  x="898.86" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (16 samples, 0.01%)</title><rect x="422.5" y="101" width="0.1" height="15.0" fill="rgb(236,39,23)" rx="2" ry="2" />
<text  x="425.48" y="111.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (15 samples, 0.01%)</title><rect x="823.4" y="565" width="0.1" height="15.0" fill="rgb(247,143,27)" rx="2" ry="2" />
<text  x="826.41" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (124 samples, 0.09%)</title><rect x="878.9" y="149" width="1.1" height="15.0" fill="rgb(211,217,50)" rx="2" ry="2" />
<text  x="881.87" y="159.5" ></text>
</g>
<g >
<title>run_block_size (1,046 samples, 0.80%)</title><rect x="1076.1" y="565" width="9.4" height="15.0" fill="rgb(205,206,17)" rx="2" ry="2" />
<text  x="1079.06" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="981.7" y="229" width="0.1" height="15.0" fill="rgb(233,52,0)" rx="2" ry="2" />
<text  x="984.70" y="239.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.01%)</title><rect x="959.3" y="229" width="0.1" height="15.0" fill="rgb(211,227,13)" rx="2" ry="2" />
<text  x="962.27" y="239.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (13 samples, 0.01%)</title><rect x="454.3" y="309" width="0.2" height="15.0" fill="rgb(236,215,11)" rx="2" ry="2" />
<text  x="457.33" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (67 samples, 0.05%)</title><rect x="901.7" y="229" width="0.6" height="15.0" fill="rgb(211,100,35)" rx="2" ry="2" />
<text  x="904.71" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::operator==&lt;char&gt; (33 samples, 0.03%)</title><rect x="142.3" y="165" width="0.3" height="15.0" fill="rgb(250,98,23)" rx="2" ry="2" />
<text  x="145.26" y="175.5" ></text>
</g>
<g >
<title>_IO_no_init (25 samples, 0.02%)</title><rect x="794.0" y="565" width="0.2" height="15.0" fill="rgb(209,135,50)" rx="2" ry="2" />
<text  x="796.97" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (48 samples, 0.04%)</title><rect x="935.4" y="181" width="0.4" height="15.0" fill="rgb(234,219,5)" rx="2" ry="2" />
<text  x="938.36" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (145 samples, 0.11%)</title><rect x="1024.7" y="293" width="1.3" height="15.0" fill="rgb(221,91,14)" rx="2" ry="2" />
<text  x="1027.71" y="303.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (31 samples, 0.02%)</title><rect x="910.4" y="197" width="0.3" height="15.0" fill="rgb(252,95,51)" rx="2" ry="2" />
<text  x="913.44" y="207.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (27 samples, 0.02%)</title><rect x="998.7" y="277" width="0.3" height="15.0" fill="rgb(236,67,34)" rx="2" ry="2" />
<text  x="1001.72" y="287.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (117 samples, 0.09%)</title><rect x="1127.2" y="597" width="1.1" height="15.0" fill="rgb(229,191,51)" rx="2" ry="2" />
<text  x="1130.24" y="607.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::GetMsgHandle (8,992 samples, 6.86%)</title><rect x="40.5" y="357" width="81.0" height="15.0" fill="rgb(207,40,50)" rx="2" ry="2" />
<text  x="43.48" y="367.5" >scythedb:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (166 samples, 0.13%)</title><rect x="948.7" y="245" width="1.5" height="15.0" fill="rgb(234,1,35)" rx="2" ry="2" />
<text  x="951.73" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (508 samples, 0.39%)</title><rect x="866.6" y="245" width="4.6" height="15.0" fill="rgb(212,155,12)" rx="2" ry="2" />
<text  x="869.59" y="255.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.01%)</title><rect x="967.0" y="101" width="0.1" height="15.0" fill="rgb(233,166,49)" rx="2" ry="2" />
<text  x="969.95" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (256 samples, 0.20%)</title><rect x="1035.3" y="229" width="2.3" height="15.0" fill="rgb(225,18,15)" rx="2" ry="2" />
<text  x="1038.34" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (28 samples, 0.02%)</title><rect x="446.2" y="277" width="0.3" height="15.0" fill="rgb(217,23,23)" rx="2" ry="2" />
<text  x="449.22" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (293 samples, 0.22%)</title><rect x="955.2" y="245" width="2.6" height="15.0" fill="rgb(215,35,39)" rx="2" ry="2" />
<text  x="958.19" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::operator unsigned long (356 samples, 0.27%)</title><rect x="136.2" y="213" width="3.2" height="15.0" fill="rgb(220,169,49)" rx="2" ry="2" />
<text  x="139.19" y="223.5" ></text>
</g>
<g >
<title>XXH64 (96 samples, 0.07%)</title><rect x="953.3" y="229" width="0.8" height="15.0" fill="rgb(250,154,49)" rx="2" ry="2" />
<text  x="956.27" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="886.5" y="277" width="0.3" height="15.0" fill="rgb(254,85,45)" rx="2" ry="2" />
<text  x="889.54" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1049.5" y="213" width="0.1" height="15.0" fill="rgb(234,125,34)" rx="2" ry="2" />
<text  x="1052.46" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (54 samples, 0.04%)</title><rect x="447.0" y="309" width="0.5" height="15.0" fill="rgb(212,102,18)" rx="2" ry="2" />
<text  x="450.05" y="319.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (26,974 samples, 20.59%)</title><rect x="825.3" y="485" width="243.0" height="15.0" fill="rgb(208,26,20)" rx="2" ry="2" />
<text  x="828.33" y="495.5" >std::__future_base::_State_baseV..</text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (30,703 samples, 23.44%)</title><rect x="153.3" y="293" width="276.5" height="15.0" fill="rgb(235,104,47)" rx="2" ry="2" />
<text  x="156.27" y="303.5" >scythedb::NVMSkipList::Insert</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (13 samples, 0.01%)</title><rect x="875.0" y="197" width="0.1" height="15.0" fill="rgb(251,183,34)" rx="2" ry="2" />
<text  x="877.99" y="207.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (54 samples, 0.04%)</title><rect x="400.2" y="149" width="0.5" height="15.0" fill="rgb(230,44,37)" rx="2" ry="2" />
<text  x="403.24" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (56 samples, 0.04%)</title><rect x="965.1" y="101" width="0.5" height="15.0" fill="rgb(220,164,19)" rx="2" ry="2" />
<text  x="968.14" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (53 samples, 0.04%)</title><rect x="974.7" y="309" width="0.5" height="15.0" fill="rgb(243,166,34)" rx="2" ry="2" />
<text  x="977.68" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (513 samples, 0.39%)</title><rect x="1033.6" y="277" width="4.6" height="15.0" fill="rgb(209,179,16)" rx="2" ry="2" />
<text  x="1036.63" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14 samples, 0.01%)</title><rect x="846.7" y="181" width="0.2" height="15.0" fill="rgb(225,149,15)" rx="2" ry="2" />
<text  x="849.73" y="191.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (17 samples, 0.01%)</title><rect x="931.0" y="229" width="0.2" height="15.0" fill="rgb(228,142,24)" rx="2" ry="2" />
<text  x="934.02" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (49 samples, 0.04%)</title><rect x="1041.9" y="213" width="0.4" height="15.0" fill="rgb(225,170,36)" rx="2" ry="2" />
<text  x="1044.87" y="223.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::wait (1,450 samples, 1.11%)</title><rect x="12.9" y="469" width="13.1" height="15.0" fill="rgb(207,62,1)" rx="2" ry="2" />
<text  x="15.93" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (63 samples, 0.05%)</title><rect x="981.5" y="261" width="0.6" height="15.0" fill="rgb(246,148,27)" rx="2" ry="2" />
<text  x="984.55" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (23 samples, 0.02%)</title><rect x="722.6" y="341" width="0.2" height="15.0" fill="rgb(239,229,26)" rx="2" ry="2" />
<text  x="725.63" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (16 samples, 0.01%)</title><rect x="865.7" y="277" width="0.1" height="15.0" fill="rgb(218,10,50)" rx="2" ry="2" />
<text  x="868.66" y="287.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (45 samples, 0.03%)</title><rect x="771.1" y="373" width="0.4" height="15.0" fill="rgb(226,212,43)" rx="2" ry="2" />
<text  x="774.09" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (64 samples, 0.05%)</title><rect x="438.0" y="245" width="0.6" height="15.0" fill="rgb(246,25,35)" rx="2" ry="2" />
<text  x="441.01" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (102 samples, 0.08%)</title><rect x="983.4" y="245" width="1.0" height="15.0" fill="rgb(240,126,10)" rx="2" ry="2" />
<text  x="986.44" y="255.5" ></text>
</g>
<g >
<title>operation_add_typed_entry (191 samples, 0.15%)</title><rect x="1164.1" y="597" width="1.7" height="15.0" fill="rgb(251,186,43)" rx="2" ry="2" />
<text  x="1167.11" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (85 samples, 0.06%)</title><rect x="1012.2" y="181" width="0.7" height="15.0" fill="rgb(233,96,23)" rx="2" ry="2" />
<text  x="1015.16" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (205 samples, 0.16%)</title><rect x="1046.1" y="277" width="1.9" height="15.0" fill="rgb(213,146,41)" rx="2" ry="2" />
<text  x="1049.12" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (836 samples, 0.64%)</title><rect x="892.9" y="309" width="7.6" height="15.0" fill="rgb(245,229,24)" rx="2" ry="2" />
<text  x="895.94" y="319.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (219 samples, 0.17%)</title><rect x="103.0" y="181" width="2.0" height="15.0" fill="rgb(232,119,14)" rx="2" ry="2" />
<text  x="105.99" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (88 samples, 0.07%)</title><rect x="921.2" y="245" width="0.8" height="15.0" fill="rgb(222,13,4)" rx="2" ry="2" />
<text  x="924.18" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (102 samples, 0.08%)</title><rect x="885.1" y="213" width="1.0" height="15.0" fill="rgb(237,74,44)" rx="2" ry="2" />
<text  x="888.14" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (98 samples, 0.07%)</title><rect x="1031.3" y="293" width="0.9" height="15.0" fill="rgb(215,113,44)" rx="2" ry="2" />
<text  x="1034.34" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (15 samples, 0.01%)</title><rect x="772.8" y="389" width="0.1" height="15.0" fill="rgb(252,44,14)" rx="2" ry="2" />
<text  x="775.75" y="399.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (15 samples, 0.01%)</title><rect x="1003.8" y="149" width="0.1" height="15.0" fill="rgb(245,205,4)" rx="2" ry="2" />
<text  x="1006.75" y="159.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (23 samples, 0.02%)</title><rect x="878.2" y="101" width="0.3" height="15.0" fill="rgb(213,52,24)" rx="2" ry="2" />
<text  x="881.25" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (17 samples, 0.01%)</title><rect x="922.2" y="213" width="0.2" height="15.0" fill="rgb(228,226,28)" rx="2" ry="2" />
<text  x="925.22" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (59 samples, 0.05%)</title><rect x="1032.4" y="261" width="0.5" height="15.0" fill="rgb(206,23,16)" rx="2" ry="2" />
<text  x="1035.38" y="271.5" ></text>
</g>
<g >
<title>utils::Hash (24 samples, 0.02%)</title><rect x="990.5" y="277" width="0.2" height="15.0" fill="rgb(218,178,39)" rx="2" ry="2" />
<text  x="993.47" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (21 samples, 0.02%)</title><rect x="939.3" y="245" width="0.2" height="15.0" fill="rgb(242,17,12)" rx="2" ry="2" />
<text  x="942.29" y="255.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_snapshot.constprop.25 (18 samples, 0.01%)</title><rect x="1167.1" y="597" width="0.2" height="15.0" fill="rgb(246,186,10)" rx="2" ry="2" />
<text  x="1170.12" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (20 samples, 0.02%)</title><rect x="28.3" y="453" width="0.1" height="15.0" fill="rgb(223,114,53)" rx="2" ry="2" />
<text  x="31.27" y="463.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.01%)</title><rect x="437.6" y="229" width="0.1" height="15.0" fill="rgb(220,179,13)" rx="2" ry="2" />
<text  x="440.59" y="239.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (36 samples, 0.03%)</title><rect x="851.6" y="245" width="0.3" height="15.0" fill="rgb(211,218,3)" rx="2" ry="2" />
<text  x="854.59" y="255.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (12 samples, 0.01%)</title><rect x="14.3" y="453" width="0.1" height="15.0" fill="rgb(251,176,25)" rx="2" ry="2" />
<text  x="17.28" y="463.5" ></text>
</g>
<g >
<title>std::operator&amp; (14 samples, 0.01%)</title><rect x="713.5" y="309" width="0.2" height="15.0" fill="rgb(232,157,16)" rx="2" ry="2" />
<text  x="716.54" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (12 samples, 0.01%)</title><rect x="866.1" y="245" width="0.1" height="15.0" fill="rgb(213,39,16)" rx="2" ry="2" />
<text  x="869.11" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (18 samples, 0.01%)</title><rect x="826.8" y="341" width="0.2" height="15.0" fill="rgb(243,96,10)" rx="2" ry="2" />
<text  x="829.84" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (35 samples, 0.03%)</title><rect x="1040.3" y="229" width="0.4" height="15.0" fill="rgb(212,80,51)" rx="2" ry="2" />
<text  x="1043.35" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (84 samples, 0.06%)</title><rect x="1048.2" y="245" width="0.8" height="15.0" fill="rgb(206,229,46)" rx="2" ry="2" />
<text  x="1051.21" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18 samples, 0.01%)</title><rect x="939.1" y="245" width="0.2" height="15.0" fill="rgb(210,147,35)" rx="2" ry="2" />
<text  x="942.11" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (28 samples, 0.02%)</title><rect x="949.0" y="197" width="0.2" height="15.0" fill="rgb(246,39,44)" rx="2" ry="2" />
<text  x="951.99" y="207.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (12 samples, 0.01%)</title><rect x="1003.8" y="133" width="0.1" height="15.0" fill="rgb(235,162,45)" rx="2" ry="2" />
<text  x="1006.78" y="143.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (25 samples, 0.02%)</title><rect x="979.1" y="309" width="0.2" height="15.0" fill="rgb(237,196,14)" rx="2" ry="2" />
<text  x="982.10" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (181 samples, 0.14%)</title><rect x="925.2" y="245" width="1.7" height="15.0" fill="rgb(210,50,46)" rx="2" ry="2" />
<text  x="928.22" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::MessageID::AssignID (141 samples, 0.11%)</title><rect x="1007.4" y="277" width="1.3" height="15.0" fill="rgb(222,18,29)" rx="2" ry="2" />
<text  x="1010.42" y="287.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul&gt; (33 samples, 0.03%)</title><rect x="1066.9" y="197" width="0.3" height="15.0" fill="rgb(211,90,36)" rx="2" ry="2" />
<text  x="1069.88" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (126 samples, 0.10%)</title><rect x="989.0" y="213" width="1.1" height="15.0" fill="rgb(247,119,47)" rx="2" ry="2" />
<text  x="991.96" y="223.5" ></text>
</g>
<g >
<title>ulog_clobber (124 samples, 0.09%)</title><rect x="1114.2" y="581" width="1.1" height="15.0" fill="rgb(236,160,39)" rx="2" ry="2" />
<text  x="1117.23" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (35 samples, 0.03%)</title><rect x="1032.4" y="245" width="0.3" height="15.0" fill="rgb(217,70,42)" rx="2" ry="2" />
<text  x="1035.39" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (125 samples, 0.10%)</title><rect x="1015.8" y="197" width="1.1" height="15.0" fill="rgb(206,158,47)" rx="2" ry="2" />
<text  x="1018.80" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (465 samples, 0.35%)</title><rect x="920.4" y="293" width="4.2" height="15.0" fill="rgb(229,188,54)" rx="2" ry="2" />
<text  x="923.39" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (420 samples, 0.32%)</title><rect x="876.2" y="181" width="3.8" height="15.0" fill="rgb(218,86,21)" rx="2" ry="2" />
<text  x="879.20" y="191.5" ></text>
</g>
<g >
<title>std::mutex::unlock (76 samples, 0.06%)</title><rect x="993.1" y="229" width="0.7" height="15.0" fill="rgb(240,121,14)" rx="2" ry="2" />
<text  x="996.14" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (75 samples, 0.06%)</title><rect x="985.2" y="229" width="0.7" height="15.0" fill="rgb(217,125,48)" rx="2" ry="2" />
<text  x="988.24" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12 samples, 0.01%)</title><rect x="1030.6" y="245" width="0.1" height="15.0" fill="rgb(213,220,7)" rx="2" ry="2" />
<text  x="1033.64" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (65 samples, 0.05%)</title><rect x="149.3" y="133" width="0.6" height="15.0" fill="rgb(230,176,15)" rx="2" ry="2" />
<text  x="152.28" y="143.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (31 samples, 0.02%)</title><rect x="150.9" y="277" width="0.3" height="15.0" fill="rgb(231,32,52)" rx="2" ry="2" />
<text  x="153.91" y="287.5" ></text>
</g>
<g >
<title>scythedb::DecodeFixed64 (13 samples, 0.01%)</title><rect x="106.0" y="197" width="0.1" height="15.0" fill="rgb(247,204,11)" rx="2" ry="2" />
<text  x="108.97" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (41 samples, 0.03%)</title><rect x="434.0" y="261" width="0.4" height="15.0" fill="rgb(247,138,4)" rx="2" ry="2" />
<text  x="437.01" y="271.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (25 samples, 0.02%)</title><rect x="858.3" y="293" width="0.2" height="15.0" fill="rgb(246,173,2)" rx="2" ry="2" />
<text  x="861.31" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (215 samples, 0.16%)</title><rect x="1020.2" y="181" width="1.9" height="15.0" fill="rgb(211,43,3)" rx="2" ry="2" />
<text  x="1023.17" y="191.5" ></text>
</g>
<g >
<title>tx_range_def_cmp (23 samples, 0.02%)</title><rect x="1114.0" y="581" width="0.2" height="15.0" fill="rgb(234,204,38)" rx="2" ry="2" />
<text  x="1117.02" y="591.5" ></text>
</g>
<g >
<title>__tls_get_addr (15 samples, 0.01%)</title><rect x="142.7" y="149" width="0.2" height="15.0" fill="rgb(206,162,1)" rx="2" ry="2" />
<text  x="145.73" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (20 samples, 0.02%)</title><rect x="1004.4" y="181" width="0.2" height="15.0" fill="rgb(254,37,42)" rx="2" ry="2" />
<text  x="1007.43" y="191.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (1,712 samples, 1.31%)</title><rect x="837.0" y="293" width="15.4" height="15.0" fill="rgb(209,101,53)" rx="2" ry="2" />
<text  x="839.99" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (28 samples, 0.02%)</title><rect x="868.9" y="133" width="0.3" height="15.0" fill="rgb(227,119,12)" rx="2" ry="2" />
<text  x="871.93" y="143.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (14 samples, 0.01%)</title><rect x="25.9" y="437" width="0.1" height="15.0" fill="rgb(214,23,11)" rx="2" ry="2" />
<text  x="28.86" y="447.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (26,974 samples, 20.59%)</title><rect x="825.3" y="533" width="243.0" height="15.0" fill="rgb(248,32,18)" rx="2" ry="2" />
<text  x="828.33" y="543.5" >std::call_once&lt;void </text>
</g>
<g >
<title>__random_r (37 samples, 0.03%)</title><rect x="1028.2" y="293" width="0.3" height="15.0" fill="rgb(234,177,3)" rx="2" ry="2" />
<text  x="1031.19" y="303.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::param_type::b (26 samples, 0.02%)</title><rect x="1043.5" y="229" width="0.3" height="15.0" fill="rgb(242,202,15)" rx="2" ry="2" />
<text  x="1046.54" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (406 samples, 0.31%)</title><rect x="142.9" y="149" width="3.7" height="15.0" fill="rgb(225,162,11)" rx="2" ry="2" />
<text  x="145.94" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16 samples, 0.01%)</title><rect x="924.8" y="261" width="0.1" height="15.0" fill="rgb(250,88,38)" rx="2" ry="2" />
<text  x="927.77" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (926 samples, 0.71%)</title><rect x="840.6" y="261" width="8.4" height="15.0" fill="rgb(220,126,53)" rx="2" ry="2" />
<text  x="843.61" y="271.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (188 samples, 0.14%)</title><rect x="972.2" y="181" width="1.7" height="15.0" fill="rgb(215,22,25)" rx="2" ry="2" />
<text  x="975.21" y="191.5" ></text>
</g>
<g >
<title>[unknown] (37,666 samples, 28.75%)</title><rect x="778.6" y="597" width="339.3" height="15.0" fill="rgb(208,20,24)" rx="2" ry="2" />
<text  x="781.62" y="607.5" >[unknown]</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (51 samples, 0.04%)</title><rect x="1002.0" y="197" width="0.5" height="15.0" fill="rgb(223,152,23)" rx="2" ry="2" />
<text  x="1004.99" y="207.5" ></text>
</g>
<g >
<title>container_seglists_insert_block (19 samples, 0.01%)</title><rect x="793.7" y="549" width="0.1" height="15.0" fill="rgb(227,117,11)" rx="2" ry="2" />
<text  x="796.68" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (12 samples, 0.01%)</title><rect x="983.9" y="229" width="0.1" height="15.0" fill="rgb(216,84,3)" rx="2" ry="2" />
<text  x="986.92" y="239.5" ></text>
</g>
<g >
<title>operator new (46 samples, 0.04%)</title><rect x="127.6" y="245" width="0.4" height="15.0" fill="rgb(233,121,15)" rx="2" ry="2" />
<text  x="130.58" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (476 samples, 0.36%)</title><rect x="1001.4" y="245" width="4.3" height="15.0" fill="rgb(206,156,39)" rx="2" ry="2" />
<text  x="1004.42" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="984.5" y="229" width="0.2" height="15.0" fill="rgb(223,188,50)" rx="2" ry="2" />
<text  x="987.54" y="239.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (77 samples, 0.06%)</title><rect x="994.1" y="229" width="0.7" height="15.0" fill="rgb(238,51,2)" rx="2" ry="2" />
<text  x="997.06" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (92 samples, 0.07%)</title><rect x="1000.1" y="213" width="0.8" height="15.0" fill="rgb(240,143,7)" rx="2" ry="2" />
<text  x="1003.08" y="223.5" ></text>
</g>
<g >
<title>scythedb::EncodeVarint32 (12 samples, 0.01%)</title><rect x="999.9" y="229" width="0.1" height="15.0" fill="rgb(230,60,5)" rx="2" ry="2" />
<text  x="1002.88" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (19 samples, 0.01%)</title><rect x="826.5" y="341" width="0.2" height="15.0" fill="rgb(241,223,47)" rx="2" ry="2" />
<text  x="829.49" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13 samples, 0.01%)</title><rect x="432.4" y="229" width="0.1" height="15.0" fill="rgb(209,99,13)" rx="2" ry="2" />
<text  x="435.43" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::SetPersistNext (267 samples, 0.20%)</title><rect x="157.3" y="213" width="2.5" height="15.0" fill="rgb(246,68,40)" rx="2" ry="2" />
<text  x="160.35" y="223.5" ></text>
</g>
<g >
<title>operator new (20 samples, 0.02%)</title><rect x="424.4" y="213" width="0.2" height="15.0" fill="rgb(240,192,26)" rx="2" ry="2" />
<text  x="427.40" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (244 samples, 0.19%)</title><rect x="427.5" y="261" width="2.2" height="15.0" fill="rgb(227,164,13)" rx="2" ry="2" />
<text  x="430.49" y="271.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (27 samples, 0.02%)</title><rect x="147.6" y="133" width="0.3" height="15.0" fill="rgb(244,111,44)" rx="2" ry="2" />
<text  x="150.64" y="143.5" ></text>
</g>
<g >
<title>ycsbc::Client::TransactionUpdate (6,964 samples, 5.32%)</title><rect x="994.9" y="325" width="62.7" height="15.0" fill="rgb(250,183,23)" rx="2" ry="2" />
<text  x="997.87" y="335.5" >ycsbc:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (37 samples, 0.03%)</title><rect x="41.7" y="325" width="0.4" height="15.0" fill="rgb(223,98,49)" rx="2" ry="2" />
<text  x="44.72" y="335.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (536 samples, 0.41%)</title><rect x="962.5" y="229" width="4.8" height="15.0" fill="rgb(207,80,9)" rx="2" ry="2" />
<text  x="965.51" y="239.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (15 samples, 0.01%)</title><rect x="1067.3" y="229" width="0.1" height="15.0" fill="rgb(233,182,7)" rx="2" ry="2" />
<text  x="1070.25" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (32 samples, 0.02%)</title><rect x="142.3" y="149" width="0.2" height="15.0" fill="rgb(249,215,27)" rx="2" ry="2" />
<text  x="145.26" y="159.5" ></text>
</g>
<g >
<title>XXH64 (125 samples, 0.10%)</title><rect x="1009.0" y="229" width="1.1" height="15.0" fill="rgb(246,139,24)" rx="2" ry="2" />
<text  x="1011.97" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (13 samples, 0.01%)</title><rect x="993.7" y="213" width="0.1" height="15.0" fill="rgb(239,19,18)" rx="2" ry="2" />
<text  x="996.71" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (29 samples, 0.02%)</title><rect x="842.2" y="197" width="0.2" height="15.0" fill="rgb(206,165,36)" rx="2" ry="2" />
<text  x="845.18" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (96 samples, 0.07%)</title><rect x="156.2" y="181" width="0.9" height="15.0" fill="rgb(227,21,34)" rx="2" ry="2" />
<text  x="159.23" y="191.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.01%)</title><rect x="947.5" y="277" width="0.2" height="15.0" fill="rgb(234,165,37)" rx="2" ry="2" />
<text  x="950.52" y="287.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (25 samples, 0.02%)</title><rect x="999.1" y="277" width="0.2" height="15.0" fill="rgb(239,111,35)" rx="2" ry="2" />
<text  x="1002.09" y="287.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (13 samples, 0.01%)</title><rect x="905.6" y="229" width="0.1" height="15.0" fill="rgb(232,9,7)" rx="2" ry="2" />
<text  x="908.59" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (12 samples, 0.01%)</title><rect x="883.8" y="325" width="0.1" height="15.0" fill="rgb(244,126,43)" rx="2" ry="2" />
<text  x="886.78" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (22 samples, 0.02%)</title><rect x="894.8" y="245" width="0.2" height="15.0" fill="rgb(233,227,52)" rx="2" ry="2" />
<text  x="897.78" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::construct_at_end&lt;std::move_iterator&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;*&gt;,  (63 samples, 0.05%)</title><rect x="145.8" y="69" width="0.5" height="15.0" fill="rgb(238,101,27)" rx="2" ry="2" />
<text  x="148.76" y="79.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (48 samples, 0.04%)</title><rect x="151.2" y="277" width="0.4" height="15.0" fill="rgb(233,155,20)" rx="2" ry="2" />
<text  x="154.18" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (60 samples, 0.05%)</title><rect x="910.2" y="229" width="0.5" height="15.0" fill="rgb(213,216,51)" rx="2" ry="2" />
<text  x="913.18" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (423 samples, 0.32%)</title><rect x="1001.5" y="229" width="3.8" height="15.0" fill="rgb(225,132,49)" rx="2" ry="2" />
<text  x="1004.45" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="999.0" y="277" width="0.1" height="15.0" fill="rgb(207,120,26)" rx="2" ry="2" />
<text  x="1001.97" y="287.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (20 samples, 0.02%)</title><rect x="994.4" y="165" width="0.2" height="15.0" fill="rgb(254,64,41)" rx="2" ry="2" />
<text  x="997.44" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (63 samples, 0.05%)</title><rect x="1021.4" y="133" width="0.6" height="15.0" fill="rgb(240,85,9)" rx="2" ry="2" />
<text  x="1024.41" y="143.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (553 samples, 0.42%)</title><rect x="449.7" y="325" width="5.0" height="15.0" fill="rgb(206,97,1)" rx="2" ry="2" />
<text  x="452.72" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (7,397 samples, 5.65%)</title><rect x="177.3" y="229" width="66.6" height="15.0" fill="rgb(213,57,14)" rx="2" ry="2" />
<text  x="180.27" y="239.5" >pmem::o..</text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (24 samples, 0.02%)</title><rect x="120.1" y="245" width="0.2" height="15.0" fill="rgb(253,209,37)" rx="2" ry="2" />
<text  x="123.09" y="255.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::base (20 samples, 0.02%)</title><rect x="910.5" y="181" width="0.2" height="15.0" fill="rgb(251,96,46)" rx="2" ry="2" />
<text  x="913.54" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;ycsbc::Operation, double&gt;, std::allocator&lt;std::pair&lt;ycsbc::Operation, double&gt; &gt; &gt;::cbegin (63 samples, 0.05%)</title><rect x="1064.8" y="293" width="0.6" height="15.0" fill="rgb(239,149,22)" rx="2" ry="2" />
<text  x="1067.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1047.4" y="245" width="0.1" height="15.0" fill="rgb(250,217,29)" rx="2" ry="2" />
<text  x="1050.43" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (16 samples, 0.01%)</title><rect x="109.9" y="261" width="0.2" height="15.0" fill="rgb(228,72,18)" rx="2" ry="2" />
<text  x="112.91" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (92 samples, 0.07%)</title><rect x="158.8" y="181" width="0.8" height="15.0" fill="rgb(234,202,20)" rx="2" ry="2" />
<text  x="161.77" y="191.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateNewChunk (1,134 samples, 0.87%)</title><rect x="140.4" y="197" width="10.2" height="15.0" fill="rgb(254,108,40)" rx="2" ry="2" />
<text  x="143.40" y="207.5" ></text>
</g>
<g >
<title>moodycamel::details::_hash_32_or_64&lt;true&gt;::hash (18 samples, 0.01%)</title><rect x="863.0" y="213" width="0.1" height="15.0" fill="rgb(207,0,8)" rx="2" ry="2" />
<text  x="865.96" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (188 samples, 0.14%)</title><rect x="896.3" y="277" width="1.7" height="15.0" fill="rgb(239,174,1)" rx="2" ry="2" />
<text  x="899.27" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (52 samples, 0.04%)</title><rect x="1041.8" y="229" width="0.5" height="15.0" fill="rgb(237,73,37)" rx="2" ry="2" />
<text  x="1044.84" y="239.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (850 samples, 0.65%)</title><rect x="100.7" y="213" width="7.7" height="15.0" fill="rgb(246,117,26)" rx="2" ry="2" />
<text  x="103.74" y="223.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (13 samples, 0.01%)</title><rect x="802.9" y="565" width="0.1" height="15.0" fill="rgb(226,161,10)" rx="2" ry="2" />
<text  x="805.90" y="575.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (31 samples, 0.02%)</title><rect x="835.7" y="293" width="0.2" height="15.0" fill="rgb(214,35,35)" rx="2" ry="2" />
<text  x="838.65" y="303.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.01%)</title><rect x="921.8" y="213" width="0.1" height="15.0" fill="rgb(224,101,31)" rx="2" ry="2" />
<text  x="924.75" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (48 samples, 0.04%)</title><rect x="974.7" y="293" width="0.5" height="15.0" fill="rgb(220,227,35)" rx="2" ry="2" />
<text  x="977.73" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (19 samples, 0.01%)</title><rect x="958.7" y="245" width="0.2" height="15.0" fill="rgb(253,83,27)" rx="2" ry="2" />
<text  x="961.69" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (215 samples, 0.16%)</title><rect x="843.5" y="213" width="1.9" height="15.0" fill="rgb(235,40,32)" rx="2" ry="2" />
<text  x="846.45" y="223.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (13 samples, 0.01%)</title><rect x="1035.0" y="181" width="0.1" height="15.0" fill="rgb(234,218,51)" rx="2" ry="2" />
<text  x="1038.01" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (43 samples, 0.03%)</title><rect x="847.6" y="213" width="0.4" height="15.0" fill="rgb(221,44,7)" rx="2" ry="2" />
<text  x="850.65" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (30 samples, 0.02%)</title><rect x="176.3" y="245" width="0.3" height="15.0" fill="rgb(234,125,10)" rx="2" ry="2" />
<text  x="179.29" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (27 samples, 0.02%)</title><rect x="941.8" y="325" width="0.2" height="15.0" fill="rgb(251,66,38)" rx="2" ry="2" />
<text  x="944.81" y="335.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (21 samples, 0.02%)</title><rect x="870.7" y="213" width="0.1" height="15.0" fill="rgb(234,167,54)" rx="2" ry="2" />
<text  x="873.65" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair (19 samples, 0.01%)</title><rect x="144.8" y="53" width="0.2" height="15.0" fill="rgb(225,21,14)" rx="2" ry="2" />
<text  x="147.80" y="63.5" ></text>
</g>
<g >
<title>[libpmem.so.1.0.0] (1,628 samples, 1.24%)</title><rect x="778.6" y="581" width="14.7" height="15.0" fill="rgb(208,3,38)" rx="2" ry="2" />
<text  x="781.62" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (139 samples, 0.11%)</title><rect x="1035.9" y="165" width="1.3" height="15.0" fill="rgb(239,123,30)" rx="2" ry="2" />
<text  x="1038.93" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (391 samples, 0.30%)</title><rect x="143.1" y="117" width="3.5" height="15.0" fill="rgb(242,105,13)" rx="2" ry="2" />
<text  x="146.08" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20 samples, 0.02%)</title><rect x="968.6" y="293" width="0.2" height="15.0" fill="rgb(215,21,11)" rx="2" ry="2" />
<text  x="971.58" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (80 samples, 0.06%)</title><rect x="965.0" y="133" width="0.7" height="15.0" fill="rgb(216,10,13)" rx="2" ry="2" />
<text  x="968.03" y="143.5" ></text>
</g>
<g >
<title>memblock_run_bitmap (20 samples, 0.02%)</title><rect x="1151.2" y="597" width="0.1" height="15.0" fill="rgb(248,5,40)" rx="2" ry="2" />
<text  x="1154.15" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (41 samples, 0.03%)</title><rect x="1036.7" y="133" width="0.4" height="15.0" fill="rgb(210,225,24)" rx="2" ry="2" />
<text  x="1039.72" y="143.5" ></text>
</g>
<g >
<title>operation_add_buffer (891 samples, 0.68%)</title><rect x="1155.9" y="597" width="8.1" height="15.0" fill="rgb(252,60,13)" rx="2" ry="2" />
<text  x="1158.94" y="607.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (30 samples, 0.02%)</title><rect x="435.7" y="309" width="0.3" height="15.0" fill="rgb(223,159,14)" rx="2" ry="2" />
<text  x="438.72" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (119 samples, 0.09%)</title><rect x="823.2" y="581" width="1.0" height="15.0" fill="rgb(217,111,35)" rx="2" ry="2" />
<text  x="826.18" y="591.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (44 samples, 0.03%)</title><rect x="824.9" y="581" width="0.3" height="15.0" fill="rgb(236,92,24)" rx="2" ry="2" />
<text  x="827.85" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (37 samples, 0.03%)</title><rect x="922.5" y="245" width="0.3" height="15.0" fill="rgb(231,37,15)" rx="2" ry="2" />
<text  x="925.46" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (53 samples, 0.04%)</title><rect x="894.6" y="277" width="0.4" height="15.0" fill="rgb(235,136,11)" rx="2" ry="2" />
<text  x="897.57" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (20 samples, 0.02%)</title><rect x="1056.4" y="213" width="0.2" height="15.0" fill="rgb(234,12,14)" rx="2" ry="2" />
<text  x="1059.44" y="223.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (18 samples, 0.01%)</title><rect x="42.5" y="261" width="0.2" height="15.0" fill="rgb(235,227,35)" rx="2" ry="2" />
<text  x="45.53" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (25 samples, 0.02%)</title><rect x="1029.7" y="245" width="0.2" height="15.0" fill="rgb(217,226,13)" rx="2" ry="2" />
<text  x="1032.69" y="255.5" ></text>
</g>
<g >
<title>__exp1_fma (103 samples, 0.08%)</title><rect x="1123.3" y="597" width="0.9" height="15.0" fill="rgb(235,165,37)" rx="2" ry="2" />
<text  x="1126.30" y="607.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (174 samples, 0.13%)</title><rect x="884.7" y="277" width="1.5" height="15.0" fill="rgb(238,106,5)" rx="2" ry="2" />
<text  x="887.65" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (2,874 samples, 2.19%)</title><rect x="996.4" y="293" width="25.9" height="15.0" fill="rgb(233,151,15)" rx="2" ry="2" />
<text  x="999.39" y="303.5" >s..</text>
</g>
<g >
<title>scythedb::MutexLock::~MutexLock (13 samples, 0.01%)</title><rect x="12.8" y="469" width="0.1" height="15.0" fill="rgb(237,37,16)" rx="2" ry="2" />
<text  x="15.81" y="479.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (18 samples, 0.01%)</title><rect x="998.6" y="277" width="0.1" height="15.0" fill="rgb(206,111,40)" rx="2" ry="2" />
<text  x="1001.56" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (26 samples, 0.02%)</title><rect x="432.2" y="245" width="0.2" height="15.0" fill="rgb(212,90,29)" rx="2" ry="2" />
<text  x="435.17" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (20 samples, 0.02%)</title><rect x="1036.2" y="149" width="0.1" height="15.0" fill="rgb(208,100,13)" rx="2" ry="2" />
<text  x="1039.16" y="159.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.02%)</title><rect x="424.9" y="197" width="0.2" height="15.0" fill="rgb(254,9,4)" rx="2" ry="2" />
<text  x="427.88" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (141 samples, 0.11%)</title><rect x="884.8" y="245" width="1.3" height="15.0" fill="rgb(226,143,48)" rx="2" ry="2" />
<text  x="887.81" y="255.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (59 samples, 0.05%)</title><rect x="109.4" y="245" width="0.5" height="15.0" fill="rgb(245,185,49)" rx="2" ry="2" />
<text  x="112.38" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (21 samples, 0.02%)</title><rect x="1031.8" y="261" width="0.2" height="15.0" fill="rgb(253,174,5)" rx="2" ry="2" />
<text  x="1034.84" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (15 samples, 0.01%)</title><rect x="867.2" y="213" width="0.1" height="15.0" fill="rgb(222,157,51)" rx="2" ry="2" />
<text  x="870.17" y="223.5" ></text>
</g>
<g >
<title>realloc (16 samples, 0.01%)</title><rect x="1188.8" y="597" width="0.1" height="15.0" fill="rgb(247,107,2)" rx="2" ry="2" />
<text  x="1191.78" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (37 samples, 0.03%)</title><rect x="120.0" y="261" width="0.3" height="15.0" fill="rgb(245,0,12)" rx="2" ry="2" />
<text  x="122.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (27 samples, 0.02%)</title><rect x="922.2" y="229" width="0.2" height="15.0" fill="rgb(234,216,19)" rx="2" ry="2" />
<text  x="925.16" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (694 samples, 0.53%)</title><rect x="999.7" y="261" width="6.2" height="15.0" fill="rgb(215,46,2)" rx="2" ry="2" />
<text  x="1002.66" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (18 samples, 0.01%)</title><rect x="425.4" y="277" width="0.1" height="15.0" fill="rgb(230,148,8)" rx="2" ry="2" />
<text  x="428.37" y="287.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducerHash*&gt;::load (60 samples, 0.05%)</title><rect x="863.2" y="229" width="0.5" height="15.0" fill="rgb(234,209,20)" rx="2" ry="2" />
<text  x="866.21" y="239.5" ></text>
</g>
<g >
<title>pmemobj_mutex_lock (26 samples, 0.02%)</title><rect x="1091.9" y="581" width="0.2" height="15.0" fill="rgb(205,198,31)" rx="2" ry="2" />
<text  x="1094.89" y="591.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (16 samples, 0.01%)</title><rect x="422.5" y="85" width="0.1" height="15.0" fill="rgb(228,49,51)" rx="2" ry="2" />
<text  x="425.48" y="95.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (24 samples, 0.02%)</title><rect x="722.3" y="309" width="0.3" height="15.0" fill="rgb(234,89,18)" rx="2" ry="2" />
<text  x="725.34" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (12 samples, 0.01%)</title><rect x="936.3" y="245" width="0.1" height="15.0" fill="rgb(221,107,22)" rx="2" ry="2" />
<text  x="939.33" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (21 samples, 0.02%)</title><rect x="278.2" y="229" width="0.2" height="15.0" fill="rgb(223,193,32)" rx="2" ry="2" />
<text  x="281.21" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (489 samples, 0.37%)</title><rect x="155.5" y="277" width="4.4" height="15.0" fill="rgb(229,153,49)" rx="2" ry="2" />
<text  x="158.53" y="287.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (118 samples, 0.09%)</title><rect x="1066.1" y="229" width="1.1" height="15.0" fill="rgb(253,186,43)" rx="2" ry="2" />
<text  x="1069.11" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (20 samples, 0.02%)</title><rect x="133.9" y="277" width="0.1" height="15.0" fill="rgb(225,112,7)" rx="2" ry="2" />
<text  x="136.85" y="287.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*, false&gt;::_M_head (40 samples, 0.03%)</title><rect x="775.0" y="357" width="0.4" height="15.0" fill="rgb(240,151,5)" rx="2" ry="2" />
<text  x="777.99" y="367.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (43 samples, 0.03%)</title><rect x="419.5" y="229" width="0.4" height="15.0" fill="rgb(225,69,30)" rx="2" ry="2" />
<text  x="422.47" y="239.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (23 samples, 0.02%)</title><rect x="405.5" y="181" width="0.2" height="15.0" fill="rgb(209,51,45)" rx="2" ry="2" />
<text  x="408.45" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="840.0" y="213" width="0.1" height="15.0" fill="rgb(219,112,37)" rx="2" ry="2" />
<text  x="843.03" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (15 samples, 0.01%)</title><rect x="1030.6" y="261" width="0.1" height="15.0" fill="rgb(241,128,40)" rx="2" ry="2" />
<text  x="1033.61" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (145 samples, 0.11%)</title><rect x="960.4" y="197" width="1.3" height="15.0" fill="rgb(238,180,7)" rx="2" ry="2" />
<text  x="963.35" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (594 samples, 0.45%)</title><rect x="115.9" y="325" width="5.4" height="15.0" fill="rgb(232,153,4)" rx="2" ry="2" />
<text  x="118.93" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (16 samples, 0.01%)</title><rect x="1006.5" y="213" width="0.2" height="15.0" fill="rgb(205,164,47)" rx="2" ry="2" />
<text  x="1009.52" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (16 samples, 0.01%)</title><rect x="46.8" y="277" width="0.2" height="15.0" fill="rgb(219,115,12)" rx="2" ry="2" />
<text  x="49.83" y="287.5" ></text>
</g>
<g >
<title>__tls_get_addr (36 samples, 0.03%)</title><rect x="802.6" y="565" width="0.3" height="15.0" fill="rgb(218,195,51)" rx="2" ry="2" />
<text  x="805.58" y="575.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (158 samples, 0.12%)</title><rect x="1117.9" y="597" width="1.4" height="15.0" fill="rgb(230,123,37)" rx="2" ry="2" />
<text  x="1120.90" y="607.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (25 samples, 0.02%)</title><rect x="159.0" y="165" width="0.2" height="15.0" fill="rgb(252,51,21)" rx="2" ry="2" />
<text  x="161.98" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="446.8" y="277" width="0.1" height="15.0" fill="rgb(222,172,15)" rx="2" ry="2" />
<text  x="449.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (40 samples, 0.03%)</title><rect x="1041.1" y="261" width="0.4" height="15.0" fill="rgb(251,187,36)" rx="2" ry="2" />
<text  x="1044.14" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (555 samples, 0.42%)</title><rect x="962.4" y="277" width="5.0" height="15.0" fill="rgb(232,66,39)" rx="2" ry="2" />
<text  x="965.35" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (24 samples, 0.02%)</title><rect x="884.1" y="309" width="0.3" height="15.0" fill="rgb(251,172,10)" rx="2" ry="2" />
<text  x="887.15" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (33 samples, 0.03%)</title><rect x="1032.4" y="229" width="0.3" height="15.0" fill="rgb(236,12,52)" rx="2" ry="2" />
<text  x="1035.41" y="239.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (36 samples, 0.03%)</title><rect x="1016.9" y="197" width="0.4" height="15.0" fill="rgb(250,61,48)" rx="2" ry="2" />
<text  x="1019.93" y="207.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (32 samples, 0.02%)</title><rect x="421.8" y="149" width="0.3" height="15.0" fill="rgb(215,106,22)" rx="2" ry="2" />
<text  x="424.81" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (20 samples, 0.02%)</title><rect x="906.9" y="293" width="0.2" height="15.0" fill="rgb(253,17,8)" rx="2" ry="2" />
<text  x="909.94" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (630 samples, 0.48%)</title><rect x="874.4" y="229" width="5.7" height="15.0" fill="rgb(219,79,36)" rx="2" ry="2" />
<text  x="877.44" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (32 samples, 0.02%)</title><rect x="964.2" y="197" width="0.3" height="15.0" fill="rgb(210,138,16)" rx="2" ry="2" />
<text  x="967.18" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (47 samples, 0.04%)</title><rect x="913.2" y="165" width="0.5" height="15.0" fill="rgb(228,213,43)" rx="2" ry="2" />
<text  x="916.24" y="175.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;scythedb::Slice*&gt;::move_iterator (15 samples, 0.01%)</title><rect x="130.4" y="261" width="0.1" height="15.0" fill="rgb(243,35,14)" rx="2" ry="2" />
<text  x="133.35" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (126 samples, 0.10%)</title><rect x="152.1" y="277" width="1.1" height="15.0" fill="rgb(229,168,48)" rx="2" ry="2" />
<text  x="155.06" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (33 samples, 0.03%)</title><rect x="897.2" y="261" width="0.3" height="15.0" fill="rgb(207,192,39)" rx="2" ry="2" />
<text  x="900.21" y="271.5" ></text>
</g>
<g >
<title>utils::Hash (76 samples, 0.06%)</title><rect x="937.0" y="293" width="0.7" height="15.0" fill="rgb(219,127,43)" rx="2" ry="2" />
<text  x="940.02" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (35 samples, 0.03%)</title><rect x="1000.9" y="213" width="0.3" height="15.0" fill="rgb(231,212,46)" rx="2" ry="2" />
<text  x="1003.90" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (118 samples, 0.09%)</title><rect x="117.7" y="293" width="1.1" height="15.0" fill="rgb(232,225,10)" rx="2" ry="2" />
<text  x="120.69" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (18 samples, 0.01%)</title><rect x="917.8" y="261" width="0.2" height="15.0" fill="rgb(235,163,46)" rx="2" ry="2" />
<text  x="920.85" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (35 samples, 0.03%)</title><rect x="793.3" y="501" width="0.3" height="15.0" fill="rgb(248,134,11)" rx="2" ry="2" />
<text  x="796.33" y="511.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (28 samples, 0.02%)</title><rect x="989.4" y="165" width="0.2" height="15.0" fill="rgb(242,114,32)" rx="2" ry="2" />
<text  x="992.38" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1,040 samples, 0.79%)</title><rect x="436.5" y="277" width="9.4" height="15.0" fill="rgb(247,35,23)" rx="2" ry="2" />
<text  x="439.52" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (15 samples, 0.01%)</title><rect x="1025.7" y="165" width="0.1" height="15.0" fill="rgb(244,202,7)" rx="2" ry="2" />
<text  x="1028.71" y="175.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (39 samples, 0.03%)</title><rect x="26.1" y="469" width="0.3" height="15.0" fill="rgb(239,51,12)" rx="2" ry="2" />
<text  x="29.08" y="479.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (86 samples, 0.07%)</title><rect x="40.9" y="325" width="0.8" height="15.0" fill="rgb(242,157,10)" rx="2" ry="2" />
<text  x="43.94" y="335.5" ></text>
</g>
<g >
<title>std::_Mu&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*, false, false&gt;::operator (45 samples, 0.03%)</title><rect x="775.4" y="421" width="0.4" height="15.0" fill="rgb(209,208,38)" rx="2" ry="2" />
<text  x="778.35" y="431.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (12 samples, 0.01%)</title><rect x="42.6" y="229" width="0.1" height="15.0" fill="rgb(245,97,18)" rx="2" ry="2" />
<text  x="45.58" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::back (106 samples, 0.08%)</title><rect x="146.6" y="149" width="1.0" height="15.0" fill="rgb(239,40,26)" rx="2" ry="2" />
<text  x="149.60" y="159.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (35 samples, 0.03%)</title><rect x="881.7" y="325" width="0.3" height="15.0" fill="rgb(250,175,39)" rx="2" ry="2" />
<text  x="884.72" y="335.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (23 samples, 0.02%)</title><rect x="866.0" y="261" width="0.2" height="15.0" fill="rgb(223,154,12)" rx="2" ry="2" />
<text  x="869.02" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (171 samples, 0.13%)</title><rect x="903.0" y="293" width="1.5" height="15.0" fill="rgb(205,192,46)" rx="2" ry="2" />
<text  x="905.96" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::GetMaxHeight (47 samples, 0.04%)</title><rect x="412.6" y="277" width="0.5" height="15.0" fill="rgb(215,67,40)" rx="2" ry="2" />
<text  x="415.63" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (104 samples, 0.08%)</title><rect x="843.9" y="181" width="0.9" height="15.0" fill="rgb(208,122,17)" rx="2" ry="2" />
<text  x="846.91" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (19 samples, 0.01%)</title><rect x="432.4" y="245" width="0.2" height="15.0" fill="rgb(220,1,40)" rx="2" ry="2" />
<text  x="435.40" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (135 samples, 0.10%)</title><rect x="1013.8" y="277" width="1.3" height="15.0" fill="rgb(237,117,1)" rx="2" ry="2" />
<text  x="1016.85" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (96 samples, 0.07%)</title><rect x="161.0" y="213" width="0.9" height="15.0" fill="rgb(223,5,43)" rx="2" ry="2" />
<text  x="163.99" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (64 samples, 0.05%)</title><rect x="421.6" y="165" width="0.6" height="15.0" fill="rgb(222,14,54)" rx="2" ry="2" />
<text  x="424.63" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::operator+=&lt;unsigned long, unsigned long&gt; (30 samples, 0.02%)</title><rect x="145.0" y="69" width="0.2" height="15.0" fill="rgb(225,224,21)" rx="2" ry="2" />
<text  x="147.97" y="79.5" ></text>
</g>
<g >
<title>operator delete (14 samples, 0.01%)</title><rect x="1003.5" y="149" width="0.1" height="15.0" fill="rgb(247,35,27)" rx="2" ry="2" />
<text  x="1006.48" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (17 samples, 0.01%)</title><rect x="155.6" y="261" width="0.2" height="15.0" fill="rgb(233,226,43)" rx="2" ry="2" />
<text  x="158.63" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12 samples, 0.01%)</title><rect x="1046.8" y="213" width="0.2" height="15.0" fill="rgb(227,55,29)" rx="2" ry="2" />
<text  x="1049.84" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (37 samples, 0.03%)</title><rect x="1030.3" y="261" width="0.3" height="15.0" fill="rgb(226,227,49)" rx="2" ry="2" />
<text  x="1033.28" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (33 samples, 0.03%)</title><rect x="857.6" y="277" width="0.3" height="15.0" fill="rgb(216,1,9)" rx="2" ry="2" />
<text  x="860.64" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (121 samples, 0.09%)</title><rect x="981.3" y="293" width="1.1" height="15.0" fill="rgb(239,103,26)" rx="2" ry="2" />
<text  x="984.28" y="303.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (21 samples, 0.02%)</title><rect x="435.5" y="309" width="0.2" height="15.0" fill="rgb(226,158,40)" rx="2" ry="2" />
<text  x="438.53" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (124 samples, 0.09%)</title><rect x="1018.1" y="197" width="1.1" height="15.0" fill="rgb(231,137,53)" rx="2" ry="2" />
<text  x="1021.06" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (50 samples, 0.04%)</title><rect x="1040.3" y="261" width="0.4" height="15.0" fill="rgb(229,27,11)" rx="2" ry="2" />
<text  x="1043.27" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (161 samples, 0.12%)</title><rect x="983.3" y="261" width="1.4" height="15.0" fill="rgb(207,182,3)" rx="2" ry="2" />
<text  x="986.29" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (288 samples, 0.22%)</title><rect x="884.4" y="325" width="2.6" height="15.0" fill="rgb(229,187,3)" rx="2" ry="2" />
<text  x="887.38" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (50 samples, 0.04%)</title><rect x="1044.2" y="245" width="0.5" height="15.0" fill="rgb(252,66,41)" rx="2" ry="2" />
<text  x="1047.25" y="255.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (43 samples, 0.03%)</title><rect x="27.9" y="453" width="0.4" height="15.0" fill="rgb(248,140,0)" rx="2" ry="2" />
<text  x="30.88" y="463.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Dequeue (31 samples, 0.02%)</title><rect x="770.8" y="373" width="0.3" height="15.0" fill="rgb(223,173,9)" rx="2" ry="2" />
<text  x="773.78" y="383.5" ></text>
</g>
<g >
<title>ycsbc::CounterGenerator::Next (72 samples, 0.05%)</title><rect x="937.7" y="309" width="0.7" height="15.0" fill="rgb(220,147,12)" rx="2" ry="2" />
<text  x="940.71" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::MessageID::AssignID (146 samples, 0.11%)</title><rect x="951.7" y="277" width="1.3" height="15.0" fill="rgb(223,218,25)" rx="2" ry="2" />
<text  x="954.65" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (22 samples, 0.02%)</title><rect x="917.8" y="277" width="0.2" height="15.0" fill="rgb(214,59,42)" rx="2" ry="2" />
<text  x="920.81" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (64 samples, 0.05%)</title><rect x="149.3" y="117" width="0.6" height="15.0" fill="rgb(249,20,17)" rx="2" ry="2" />
<text  x="152.29" y="127.5" ></text>
</g>
<g >
<title>std::uniform_int_distribution&lt;unsigned long&gt;::operator (127 samples, 0.10%)</title><rect x="1042.6" y="245" width="1.2" height="15.0" fill="rgb(252,165,29)" rx="2" ry="2" />
<text  x="1045.63" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (13 samples, 0.01%)</title><rect x="1000.5" y="197" width="0.1" height="15.0" fill="rgb(228,162,21)" rx="2" ry="2" />
<text  x="1003.50" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1048.7" y="213" width="0.1" height="15.0" fill="rgb(211,49,47)" rx="2" ry="2" />
<text  x="1051.69" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (78 samples, 0.06%)</title><rect x="960.9" y="165" width="0.7" height="15.0" fill="rgb(221,32,34)" rx="2" ry="2" />
<text  x="963.91" y="175.5" ></text>
</g>
<g >
<title>util_checksum_seq (131 samples, 0.10%)</title><rect x="1162.8" y="581" width="1.2" height="15.0" fill="rgb(241,104,42)" rx="2" ry="2" />
<text  x="1165.79" y="591.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::add_block_to_free_list (12 samples, 0.01%)</title><rect x="499.2" y="293" width="0.1" height="15.0" fill="rgb(221,51,7)" rx="2" ry="2" />
<text  x="502.20" y="303.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (26 samples, 0.02%)</title><rect x="1060.4" y="277" width="0.3" height="15.0" fill="rgb(236,198,31)" rx="2" ry="2" />
<text  x="1063.43" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::GetMaxHeight (74 samples, 0.06%)</title><rect x="165.3" y="261" width="0.7" height="15.0" fill="rgb(222,178,42)" rx="2" ry="2" />
<text  x="168.33" y="271.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (85 samples, 0.06%)</title><rect x="1055.7" y="213" width="0.7" height="15.0" fill="rgb(227,24,13)" rx="2" ry="2" />
<text  x="1058.67" y="223.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (58 samples, 0.04%)</title><rect x="993.2" y="213" width="0.5" height="15.0" fill="rgb(205,224,15)" rx="2" ry="2" />
<text  x="996.18" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12 samples, 0.01%)</title><rect x="939.7" y="293" width="0.1" height="15.0" fill="rgb(253,32,35)" rx="2" ry="2" />
<text  x="942.67" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (203 samples, 0.15%)</title><rect x="1051.2" y="277" width="1.8" height="15.0" fill="rgb(246,64,38)" rx="2" ry="2" />
<text  x="1054.18" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (134 samples, 0.10%)</title><rect x="861.0" y="149" width="1.2" height="15.0" fill="rgb(252,103,22)" rx="2" ry="2" />
<text  x="864.01" y="159.5" ></text>
</g>
<g >
<title>moodycamel::details::circular_less_than&lt;unsigned long&gt; (555 samples, 0.42%)</title><rect x="706.9" y="325" width="5.0" height="15.0" fill="rgb(212,103,32)" rx="2" ry="2" />
<text  x="709.91" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (17 samples, 0.01%)</title><rect x="435.0" y="261" width="0.2" height="15.0" fill="rgb(216,82,18)" rx="2" ry="2" />
<text  x="438.03" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (44 samples, 0.03%)</title><rect x="978.3" y="261" width="0.4" height="15.0" fill="rgb(253,28,16)" rx="2" ry="2" />
<text  x="981.35" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (13 samples, 0.01%)</title><rect x="964.9" y="133" width="0.1" height="15.0" fill="rgb(231,148,0)" rx="2" ry="2" />
<text  x="967.91" y="143.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (479 samples, 0.37%)</title><rect x="970.4" y="309" width="4.3" height="15.0" fill="rgb(206,35,25)" rx="2" ry="2" />
<text  x="973.35" y="319.5" ></text>
</g>
<g >
<title>pmemobj_memcpy_persist (17 samples, 0.01%)</title><rect x="133.5" y="293" width="0.1" height="15.0" fill="rgb(240,97,45)" rx="2" ry="2" />
<text  x="136.48" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (71 samples, 0.05%)</title><rect x="1031.5" y="277" width="0.6" height="15.0" fill="rgb(229,212,11)" rx="2" ry="2" />
<text  x="1034.46" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15 samples, 0.01%)</title><rect x="1021.1" y="117" width="0.1" height="15.0" fill="rgb(210,84,41)" rx="2" ry="2" />
<text  x="1024.07" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (252 samples, 0.19%)</title><rect x="876.5" y="165" width="2.3" height="15.0" fill="rgb(238,100,6)" rx="2" ry="2" />
<text  x="879.53" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (176 samples, 0.13%)</title><rect x="976.7" y="261" width="1.6" height="15.0" fill="rgb(213,189,21)" rx="2" ry="2" />
<text  x="979.75" y="271.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (45 samples, 0.03%)</title><rect x="414.7" y="229" width="0.4" height="15.0" fill="rgb(240,205,43)" rx="2" ry="2" />
<text  x="417.66" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (203 samples, 0.15%)</title><rect x="925.2" y="261" width="1.8" height="15.0" fill="rgb(217,204,53)" rx="2" ry="2" />
<text  x="928.17" y="271.5" ></text>
</g>
<g >
<title>XXH64_finalize (156 samples, 0.12%)</title><rect x="855.2" y="213" width="1.4" height="15.0" fill="rgb(252,159,3)" rx="2" ry="2" />
<text  x="858.22" y="223.5" ></text>
</g>
<g >
<title>vfprintf (17 samples, 0.01%)</title><rect x="793.5" y="485" width="0.1" height="15.0" fill="rgb(222,210,27)" rx="2" ry="2" />
<text  x="796.50" y="495.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (34 samples, 0.03%)</title><rect x="139.8" y="181" width="0.3" height="15.0" fill="rgb(220,89,32)" rx="2" ry="2" />
<text  x="142.75" y="191.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (25 samples, 0.02%)</title><rect x="840.4" y="261" width="0.2" height="15.0" fill="rgb(241,217,23)" rx="2" ry="2" />
<text  x="843.36" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (44 samples, 0.03%)</title><rect x="1039.6" y="261" width="0.4" height="15.0" fill="rgb(236,48,24)" rx="2" ry="2" />
<text  x="1042.65" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (80 samples, 0.06%)</title><rect x="986.2" y="245" width="0.8" height="15.0" fill="rgb(205,204,51)" rx="2" ry="2" />
<text  x="989.25" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (42 samples, 0.03%)</title><rect x="115.3" y="341" width="0.4" height="15.0" fill="rgb(240,19,13)" rx="2" ry="2" />
<text  x="118.32" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void  (606 samples, 0.46%)</title><rect x="115.8" y="341" width="5.5" height="15.0" fill="rgb(238,101,19)" rx="2" ry="2" />
<text  x="118.82" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (26,974 samples, 20.59%)</title><rect x="825.3" y="405" width="243.0" height="15.0" fill="rgb(242,146,23)" rx="2" ry="2" />
<text  x="828.33" y="415.5" >std::thread::_Invoker&lt;std::tuple..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="970.0" y="261" width="0.1" height="15.0" fill="rgb(252,168,11)" rx="2" ry="2" />
<text  x="973.01" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (29 samples, 0.02%)</title><rect x="971.5" y="197" width="0.3" height="15.0" fill="rgb(241,14,0)" rx="2" ry="2" />
<text  x="974.49" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (18 samples, 0.01%)</title><rect x="1020.0" y="181" width="0.1" height="15.0" fill="rgb(219,206,10)" rx="2" ry="2" />
<text  x="1022.97" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (33 samples, 0.03%)</title><rect x="1050.5" y="245" width="0.3" height="15.0" fill="rgb(215,47,3)" rx="2" ry="2" />
<text  x="1053.54" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (16 samples, 0.01%)</title><rect x="974.2" y="261" width="0.1" height="15.0" fill="rgb(220,111,47)" rx="2" ry="2" />
<text  x="977.19" y="271.5" ></text>
</g>
<g >
<title>ravl_data (22 samples, 0.02%)</title><rect x="1109.8" y="581" width="0.2" height="15.0" fill="rgb(236,14,17)" rx="2" ry="2" />
<text  x="1112.77" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (22 samples, 0.02%)</title><rect x="1003.7" y="165" width="0.2" height="15.0" fill="rgb(245,181,18)" rx="2" ry="2" />
<text  x="1006.69" y="175.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (12 samples, 0.01%)</title><rect x="1017.7" y="245" width="0.1" height="15.0" fill="rgb(211,96,6)" rx="2" ry="2" />
<text  x="1020.69" y="255.5" ></text>
</g>
<g >
<title>XXH64_round (13 samples, 0.01%)</title><rect x="1009.6" y="181" width="0.1" height="15.0" fill="rgb(235,130,34)" rx="2" ry="2" />
<text  x="1012.59" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (275 samples, 0.21%)</title><rect x="22.7" y="437" width="2.5" height="15.0" fill="rgb(224,190,49)" rx="2" ry="2" />
<text  x="25.69" y="447.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (178 samples, 0.14%)</title><rect x="21.1" y="437" width="1.6" height="15.0" fill="rgb(250,135,18)" rx="2" ry="2" />
<text  x="24.09" y="447.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::_Adaptor (12 samples, 0.01%)</title><rect x="1065.8" y="261" width="0.1" height="15.0" fill="rgb(229,209,40)" rx="2" ry="2" />
<text  x="1068.80" y="271.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTransactionKey[abi:cxx11] (1,376 samples, 1.05%)</title><rect x="982.4" y="309" width="12.4" height="15.0" fill="rgb(243,99,9)" rx="2" ry="2" />
<text  x="985.42" y="319.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (14 samples, 0.01%)</title><rect x="880.1" y="229" width="0.1" height="15.0" fill="rgb(230,88,48)" rx="2" ry="2" />
<text  x="883.11" y="239.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (59 samples, 0.05%)</title><rect x="407.2" y="229" width="0.5" height="15.0" fill="rgb(206,43,3)" rx="2" ry="2" />
<text  x="410.18" y="239.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (152 samples, 0.12%)</title><rect x="862.4" y="245" width="1.4" height="15.0" fill="rgb(219,46,12)" rx="2" ry="2" />
<text  x="865.42" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (21 samples, 0.02%)</title><rect x="979.1" y="293" width="0.2" height="15.0" fill="rgb(237,168,15)" rx="2" ry="2" />
<text  x="982.12" y="303.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase*&gt;::load (194 samples, 0.15%)</title><rect x="711.9" y="325" width="1.8" height="15.0" fill="rgb(211,13,36)" rx="2" ry="2" />
<text  x="714.91" y="335.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (48 samples, 0.04%)</title><rect x="994.2" y="181" width="0.4" height="15.0" fill="rgb(211,184,33)" rx="2" ry="2" />
<text  x="997.18" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (13 samples, 0.01%)</title><rect x="869.4" y="149" width="0.1" height="15.0" fill="rgb(230,121,35)" rx="2" ry="2" />
<text  x="872.43" y="159.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (45 samples, 0.03%)</title><rect x="1034.8" y="229" width="0.4" height="15.0" fill="rgb(226,1,30)" rx="2" ry="2" />
<text  x="1037.81" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (267 samples, 0.20%)</title><rect x="964.8" y="165" width="2.4" height="15.0" fill="rgb(236,162,24)" rx="2" ry="2" />
<text  x="967.77" y="175.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (26 samples, 0.02%)</title><rect x="130.5" y="277" width="0.3" height="15.0" fill="rgb(239,142,15)" rx="2" ry="2" />
<text  x="133.54" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (42 samples, 0.03%)</title><rect x="839.1" y="197" width="0.4" height="15.0" fill="rgb(211,140,42)" rx="2" ry="2" />
<text  x="842.15" y="207.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (14 samples, 0.01%)</title><rect x="161.7" y="181" width="0.1" height="15.0" fill="rgb(252,165,14)" rx="2" ry="2" />
<text  x="164.69" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (22 samples, 0.02%)</title><rect x="938.6" y="293" width="0.2" height="15.0" fill="rgb(252,39,10)" rx="2" ry="2" />
<text  x="941.61" y="303.5" ></text>
</g>
<g >
<title>std::type_info::hash_code (47 samples, 0.04%)</title><rect x="141.8" y="149" width="0.4" height="15.0" fill="rgb(226,0,47)" rx="2" ry="2" />
<text  x="144.82" y="159.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (69 samples, 0.05%)</title><rect x="1111.9" y="565" width="0.7" height="15.0" fill="rgb(251,115,4)" rx="2" ry="2" />
<text  x="1114.93" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="1005.1" y="197" width="0.1" height="15.0" fill="rgb(245,140,12)" rx="2" ry="2" />
<text  x="1008.07" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::RandomHeight (26 samples, 0.02%)</title><rect x="426.9" y="277" width="0.3" height="15.0" fill="rgb(210,228,38)" rx="2" ry="2" />
<text  x="429.92" y="287.5" ></text>
</g>
<g >
<title>operator delete (27 samples, 0.02%)</title><rect x="152.8" y="229" width="0.3" height="15.0" fill="rgb(221,168,39)" rx="2" ry="2" />
<text  x="155.83" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (32 samples, 0.02%)</title><rect x="1020.7" y="85" width="0.3" height="15.0" fill="rgb(214,57,38)" rx="2" ry="2" />
<text  x="1023.69" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (41 samples, 0.03%)</title><rect x="1041.9" y="197" width="0.3" height="15.0" fill="rgb(243,194,15)" rx="2" ry="2" />
<text  x="1044.88" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Add (35,147 samples, 26.83%)</title><rect x="132.4" y="341" width="316.6" height="15.0" fill="rgb(218,156,11)" rx="2" ry="2" />
<text  x="135.41" y="351.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (208 samples, 0.16%)</title><rect x="119.1" y="293" width="1.9" height="15.0" fill="rgb(248,185,27)" rx="2" ry="2" />
<text  x="122.14" y="303.5" ></text>
</g>
<g >
<title>std::this_thread::yield (4,995 samples, 3.81%)</title><rect x="725.7" y="357" width="45.0" height="15.0" fill="rgb(230,123,49)" rx="2" ry="2" />
<text  x="728.70" y="367.5" >std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (154 samples, 0.12%)</title><rect x="1035.9" y="181" width="1.3" height="15.0" fill="rgb(225,124,20)" rx="2" ry="2" />
<text  x="1038.86" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::get_pool (36 samples, 0.03%)</title><rect x="147.6" y="149" width="0.3" height="15.0" fill="rgb(237,167,45)" rx="2" ry="2" />
<text  x="150.55" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (84 samples, 0.06%)</title><rect x="1050.4" y="261" width="0.7" height="15.0" fill="rgb(213,111,10)" rx="2" ry="2" />
<text  x="1053.39" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (14 samples, 0.01%)</title><rect x="1029.8" y="229" width="0.1" height="15.0" fill="rgb(253,18,36)" rx="2" ry="2" />
<text  x="1032.79" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (200 samples, 0.15%)</title><rect x="884.5" y="309" width="1.8" height="15.0" fill="rgb(228,74,9)" rx="2" ry="2" />
<text  x="887.49" y="319.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (74 samples, 0.06%)</title><rect x="937.0" y="277" width="0.7" height="15.0" fill="rgb(220,147,11)" rx="2" ry="2" />
<text  x="940.04" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (396 samples, 0.30%)</title><rect x="143.0" y="133" width="3.6" height="15.0" fill="rgb(236,118,54)" rx="2" ry="2" />
<text  x="146.03" y="143.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (409 samples, 0.31%)</title><rect x="1053.7" y="277" width="3.6" height="15.0" fill="rgb(234,229,6)" rx="2" ry="2" />
<text  x="1056.66" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (176 samples, 0.13%)</title><rect x="1029.2" y="277" width="1.6" height="15.0" fill="rgb(222,171,33)" rx="2" ry="2" />
<text  x="1032.23" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (20 samples, 0.02%)</title><rect x="885.6" y="181" width="0.2" height="15.0" fill="rgb(249,69,18)" rx="2" ry="2" />
<text  x="888.64" y="191.5" ></text>
</g>
<g >
<title>std::function&lt;void  (100 samples, 0.08%)</title><rect x="777.7" y="485" width="0.9" height="15.0" fill="rgb(213,26,52)" rx="2" ry="2" />
<text  x="780.72" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (23 samples, 0.02%)</title><rect x="975.8" y="261" width="0.2" height="15.0" fill="rgb(209,79,49)" rx="2" ry="2" />
<text  x="978.81" y="271.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (50 samples, 0.04%)</title><rect x="146.8" y="101" width="0.5" height="15.0" fill="rgb(224,117,10)" rx="2" ry="2" />
<text  x="149.84" y="111.5" ></text>
</g>
<g >
<title>pmem_flush (45 samples, 0.03%)</title><rect x="1090.7" y="581" width="0.4" height="15.0" fill="rgb(251,181,32)" rx="2" ry="2" />
<text  x="1093.73" y="591.5" ></text>
</g>
<g >
<title>operator new (28 samples, 0.02%)</title><rect x="934.4" y="165" width="0.3" height="15.0" fill="rgb(229,25,47)" rx="2" ry="2" />
<text  x="937.45" y="175.5" ></text>
</g>
<g >
<title>vfprintf (24 samples, 0.02%)</title><rect x="822.5" y="565" width="0.3" height="15.0" fill="rgb(219,58,3)" rx="2" ry="2" />
<text  x="825.54" y="575.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (29 samples, 0.02%)</title><rect x="849.1" y="245" width="0.3" height="15.0" fill="rgb(223,159,23)" rx="2" ry="2" />
<text  x="852.14" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (17 samples, 0.01%)</title><rect x="720.8" y="357" width="0.2" height="15.0" fill="rgb(253,98,27)" rx="2" ry="2" />
<text  x="723.84" y="367.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (815 samples, 0.62%)</title><rect x="66.8" y="245" width="7.4" height="15.0" fill="rgb(215,50,53)" rx="2" ry="2" />
<text  x="69.85" y="255.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.03%)</title><rect x="793.3" y="533" width="0.3" height="15.0" fill="rgb(219,70,44)" rx="2" ry="2" />
<text  x="796.32" y="543.5" ></text>
</g>
<g >
<title>run_ensure_header_type (16 samples, 0.01%)</title><rect x="1112.9" y="581" width="0.2" height="15.0" fill="rgb(225,126,51)" rx="2" ry="2" />
<text  x="1115.95" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (19 samples, 0.01%)</title><rect x="986.5" y="213" width="0.2" height="15.0" fill="rgb(225,196,16)" rx="2" ry="2" />
<text  x="989.54" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (30 samples, 0.02%)</title><rect x="946.9" y="277" width="0.3" height="15.0" fill="rgb(233,101,15)" rx="2" ry="2" />
<text  x="949.89" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (837 samples, 0.64%)</title><rect x="840.7" y="245" width="7.5" height="15.0" fill="rgb(213,185,37)" rx="2" ry="2" />
<text  x="843.68" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (40 samples, 0.03%)</title><rect x="437.4" y="245" width="0.3" height="15.0" fill="rgb(234,53,48)" rx="2" ry="2" />
<text  x="440.38" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (18 samples, 0.01%)</title><rect x="1050.1" y="261" width="0.2" height="15.0" fill="rgb(240,112,14)" rx="2" ry="2" />
<text  x="1053.11" y="271.5" ></text>
</g>
<g >
<title>XXH64 (12 samples, 0.01%)</title><rect x="854.9" y="261" width="0.1" height="15.0" fill="rgb(218,189,14)" rx="2" ry="2" />
<text  x="857.86" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (27 samples, 0.02%)</title><rect x="885.4" y="181" width="0.2" height="15.0" fill="rgb(205,126,51)" rx="2" ry="2" />
<text  x="888.36" y="191.5" ></text>
</g>
<g >
<title>XXH64 (192 samples, 0.15%)</title><rect x="855.0" y="245" width="1.8" height="15.0" fill="rgb(249,161,10)" rx="2" ry="2" />
<text  x="858.04" y="255.5" ></text>
</g>
<g >
<title>__gthread_active_p (37 samples, 0.03%)</title><rect x="725.3" y="277" width="0.4" height="15.0" fill="rgb(214,141,33)" rx="2" ry="2" />
<text  x="728.34" y="287.5" ></text>
</g>
<g >
<title>_int_free (12 samples, 0.01%)</title><rect x="930.9" y="229" width="0.1" height="15.0" fill="rgb(218,10,5)" rx="2" ry="2" />
<text  x="933.92" y="239.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (866 samples, 0.66%)</title><rect x="982.9" y="293" width="7.8" height="15.0" fill="rgb(236,125,18)" rx="2" ry="2" />
<text  x="985.89" y="303.5" ></text>
</g>
<g >
<title>[unknown] (163 samples, 0.12%)</title><rect x="1116.4" y="565" width="1.5" height="15.0" fill="rgb(233,74,11)" rx="2" ry="2" />
<text  x="1119.44" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (73 samples, 0.06%)</title><rect x="979.9" y="165" width="0.7" height="15.0" fill="rgb(229,191,3)" rx="2" ry="2" />
<text  x="982.92" y="175.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (37 samples, 0.03%)</title><rect x="771.7" y="373" width="0.3" height="15.0" fill="rgb(217,125,30)" rx="2" ry="2" />
<text  x="774.70" y="383.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::size_approx (20,990 samples, 16.02%)</title><rect x="517.8" y="325" width="189.1" height="15.0" fill="rgb(245,49,47)" rx="2" ry="2" />
<text  x="520.84" y="335.5" >moodycamel::ConcurrentQu..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (123 samples, 0.09%)</title><rect x="885.0" y="229" width="1.1" height="15.0" fill="rgb(240,202,33)" rx="2" ry="2" />
<text  x="887.98" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (15 samples, 0.01%)</title><rect x="869.2" y="133" width="0.1" height="15.0" fill="rgb(207,179,9)" rx="2" ry="2" />
<text  x="872.18" y="143.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (14 samples, 0.01%)</title><rect x="135.6" y="261" width="0.1" height="15.0" fill="rgb(252,130,11)" rx="2" ry="2" />
<text  x="138.62" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12 samples, 0.01%)</title><rect x="931.6" y="245" width="0.2" height="15.0" fill="rgb(230,187,35)" rx="2" ry="2" />
<text  x="934.65" y="255.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (30 samples, 0.02%)</title><rect x="142.3" y="133" width="0.2" height="15.0" fill="rgb(224,176,22)" rx="2" ry="2" />
<text  x="145.28" y="143.5" ></text>
</g>
<g >
<title>pmem::detail::type_num&lt;char&gt; (79 samples, 0.06%)</title><rect x="141.5" y="165" width="0.8" height="15.0" fill="rgb(217,103,5)" rx="2" ry="2" />
<text  x="144.55" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (565 samples, 0.43%)</title><rect x="243.9" y="229" width="5.1" height="15.0" fill="rgb(231,82,36)" rx="2" ry="2" />
<text  x="246.90" y="239.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (10,252 samples, 7.83%)</title><rect x="286.7" y="165" width="92.4" height="15.0" fill="rgb(226,205,11)" rx="2" ry="2" />
<text  x="289.72" y="175.5" >scythedb::G..</text>
</g>
<g >
<title>realloc (143 samples, 0.11%)</title><rect x="1111.6" y="581" width="1.3" height="15.0" fill="rgb(241,130,40)" rx="2" ry="2" />
<text  x="1114.63" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (16 samples, 0.01%)</title><rect x="1048.5" y="213" width="0.1" height="15.0" fill="rgb(213,58,20)" rx="2" ry="2" />
<text  x="1051.47" y="223.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (215 samples, 0.16%)</title><rect x="955.2" y="229" width="1.9" height="15.0" fill="rgb(226,143,1)" rx="2" ry="2" />
<text  x="958.20" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (79 samples, 0.06%)</title><rect x="1039.5" y="277" width="0.7" height="15.0" fill="rgb(216,59,10)" rx="2" ry="2" />
<text  x="1042.49" y="287.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (25 samples, 0.02%)</title><rect x="145.4" y="53" width="0.2" height="15.0" fill="rgb(232,200,4)" rx="2" ry="2" />
<text  x="148.37" y="63.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (428 samples, 0.33%)</title><rect x="155.9" y="229" width="3.9" height="15.0" fill="rgb(234,18,31)" rx="2" ry="2" />
<text  x="158.90" y="239.5" ></text>
</g>
<g >
<title>__gthread_yield (25 samples, 0.02%)</title><rect x="40.0" y="357" width="0.3" height="15.0" fill="rgb(210,180,46)" rx="2" ry="2" />
<text  x="43.05" y="367.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Next (450 samples, 0.34%)</title><rect x="1053.3" y="293" width="4.1" height="15.0" fill="rgb(241,119,46)" rx="2" ry="2" />
<text  x="1056.30" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (84 samples, 0.06%)</title><rect x="129.6" y="229" width="0.7" height="15.0" fill="rgb(231,67,12)" rx="2" ry="2" />
<text  x="132.57" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (16 samples, 0.01%)</title><rect x="925.0" y="277" width="0.1" height="15.0" fill="rgb(211,85,15)" rx="2" ry="2" />
<text  x="927.95" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (68 samples, 0.05%)</title><rect x="938.9" y="261" width="0.6" height="15.0" fill="rgb(205,166,2)" rx="2" ry="2" />
<text  x="941.93" y="271.5" ></text>
</g>
<g >
<title>__condvar_dec_grefs (391 samples, 0.30%)</title><rect x="1119.8" y="597" width="3.5" height="15.0" fill="rgb(241,195,27)" rx="2" ry="2" />
<text  x="1122.78" y="607.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (17 samples, 0.01%)</title><rect x="159.6" y="197" width="0.2" height="15.0" fill="rgb(224,217,52)" rx="2" ry="2" />
<text  x="162.60" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14 samples, 0.01%)</title><rect x="902.4" y="261" width="0.1" height="15.0" fill="rgb(226,144,52)" rx="2" ry="2" />
<text  x="905.36" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (197 samples, 0.15%)</title><rect x="972.2" y="197" width="1.7" height="15.0" fill="rgb(249,8,6)" rx="2" ry="2" />
<text  x="975.16" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (44 samples, 0.03%)</title><rect x="152.2" y="261" width="0.4" height="15.0" fill="rgb(235,179,51)" rx="2" ry="2" />
<text  x="155.19" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (24 samples, 0.02%)</title><rect x="402.1" y="165" width="0.2" height="15.0" fill="rgb(231,41,42)" rx="2" ry="2" />
<text  x="405.10" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (105 samples, 0.08%)</title><rect x="447.5" y="309" width="1.0" height="15.0" fill="rgb(251,140,16)" rx="2" ry="2" />
<text  x="450.54" y="319.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Next (451 samples, 0.34%)</title><rect x="990.7" y="293" width="4.1" height="15.0" fill="rgb(226,198,52)" rx="2" ry="2" />
<text  x="993.69" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="927.0" y="277" width="0.2" height="15.0" fill="rgb(232,148,27)" rx="2" ry="2" />
<text  x="930.03" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (27 samples, 0.02%)</title><rect x="850.7" y="229" width="0.2" height="15.0" fill="rgb(234,202,0)" rx="2" ry="2" />
<text  x="853.67" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (837 samples, 0.64%)</title><rect x="66.8" y="261" width="7.5" height="15.0" fill="rgb(212,187,18)" rx="2" ry="2" />
<text  x="69.76" y="271.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (94 samples, 0.07%)</title><rect x="947.8" y="245" width="0.9" height="15.0" fill="rgb(212,7,30)" rx="2" ry="2" />
<text  x="950.82" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::length (13 samples, 0.01%)</title><rect x="923.1" y="245" width="0.1" height="15.0" fill="rgb(240,54,15)" rx="2" ry="2" />
<text  x="926.13" y="255.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (82,023 samples, 62.61%)</title><rect x="33.5" y="389" width="738.9" height="15.0" fill="rgb(233,152,9)" rx="2" ry="2" />
<text  x="36.55" y="399.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (12 samples, 0.01%)</title><rect x="1041.0" y="261" width="0.1" height="15.0" fill="rgb(229,148,52)" rx="2" ry="2" />
<text  x="1044.03" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (17 samples, 0.01%)</title><rect x="1024.5" y="293" width="0.1" height="15.0" fill="rgb(231,92,46)" rx="2" ry="2" />
<text  x="1027.46" y="303.5" ></text>
</g>
<g >
<title>pmemobj_oid (12 samples, 0.01%)</title><rect x="150.0" y="181" width="0.1" height="15.0" fill="rgb(238,41,34)" rx="2" ry="2" />
<text  x="152.95" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (168 samples, 0.13%)</title><rect x="968.8" y="309" width="1.5" height="15.0" fill="rgb(215,207,14)" rx="2" ry="2" />
<text  x="971.82" y="319.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (33 samples, 0.03%)</title><rect x="419.6" y="213" width="0.3" height="15.0" fill="rgb(228,62,7)" rx="2" ry="2" />
<text  x="422.56" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::deallocate (45 samples, 0.03%)</title><rect x="455.3" y="293" width="0.4" height="15.0" fill="rgb(248,28,41)" rx="2" ry="2" />
<text  x="458.26" y="303.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (27,001 samples, 20.61%)</title><rect x="475.3" y="341" width="243.2" height="15.0" fill="rgb(221,105,25)" rx="2" ry="2" />
<text  x="478.29" y="351.5" >moodycamel::ConcurrentQueue&lt;std:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1,158 samples, 0.88%)</title><rect x="436.2" y="293" width="10.4" height="15.0" fill="rgb(227,156,23)" rx="2" ry="2" />
<text  x="439.21" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (59 samples, 0.05%)</title><rect x="877.1" y="101" width="0.6" height="15.0" fill="rgb(251,24,22)" rx="2" ry="2" />
<text  x="880.15" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (12 samples, 0.01%)</title><rect x="1038.1" y="261" width="0.1" height="15.0" fill="rgb(228,6,15)" rx="2" ry="2" />
<text  x="1041.06" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (516 samples, 0.39%)</title><rect x="866.5" y="261" width="4.7" height="15.0" fill="rgb(228,115,39)" rx="2" ry="2" />
<text  x="869.52" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::operator+&lt;char&gt; (20 samples, 0.02%)</title><rect x="420.6" y="181" width="0.2" height="15.0" fill="rgb(227,111,1)" rx="2" ry="2" />
<text  x="423.58" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (18 samples, 0.01%)</title><rect x="984.5" y="245" width="0.2" height="15.0" fill="rgb(240,176,1)" rx="2" ry="2" />
<text  x="987.53" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (28 samples, 0.02%)</title><rect x="894.3" y="277" width="0.3" height="15.0" fill="rgb(250,12,31)" rx="2" ry="2" />
<text  x="897.32" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (28 samples, 0.02%)</title><rect x="119.7" y="245" width="0.2" height="15.0" fill="rgb(237,219,22)" rx="2" ry="2" />
<text  x="122.67" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14 samples, 0.01%)</title><rect x="1052.3" y="181" width="0.2" height="15.0" fill="rgb(214,173,33)" rx="2" ry="2" />
<text  x="1055.33" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (16 samples, 0.01%)</title><rect x="885.8" y="181" width="0.2" height="15.0" fill="rgb(237,35,4)" rx="2" ry="2" />
<text  x="888.82" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (91 samples, 0.07%)</title><rect x="969.1" y="261" width="0.8" height="15.0" fill="rgb(219,174,28)" rx="2" ry="2" />
<text  x="972.10" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12 samples, 0.01%)</title><rect x="899.2" y="245" width="0.1" height="15.0" fill="rgb(215,43,13)" rx="2" ry="2" />
<text  x="902.24" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (13 samples, 0.01%)</title><rect x="978.5" y="245" width="0.1" height="15.0" fill="rgb(208,218,21)" rx="2" ry="2" />
<text  x="981.53" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (514 samples, 0.39%)</title><rect x="15.6" y="437" width="4.6" height="15.0" fill="rgb(229,217,42)" rx="2" ry="2" />
<text  x="18.58" y="447.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (17 samples, 0.01%)</title><rect x="422.5" y="117" width="0.1" height="15.0" fill="rgb(221,138,12)" rx="2" ry="2" />
<text  x="425.47" y="127.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (3,027 samples, 2.31%)</title><rect x="47.1" y="277" width="27.3" height="15.0" fill="rgb(254,204,38)" rx="2" ry="2" />
<text  x="50.09" y="287.5" >s..</text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (13 samples, 0.01%)</title><rect x="76.4" y="229" width="0.1" height="15.0" fill="rgb(214,72,53)" rx="2" ry="2" />
<text  x="79.39" y="239.5" ></text>
</g>
<g >
<title>moodycamel::details::circular_less_than&lt;unsigned long&gt; (2,806 samples, 2.14%)</title><rect x="662.1" y="309" width="25.3" height="15.0" fill="rgb(249,179,16)" rx="2" ry="2" />
<text  x="665.11" y="319.5" >m..</text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (40 samples, 0.03%)</title><rect x="1056.9" y="197" width="0.3" height="15.0" fill="rgb(213,70,7)" rx="2" ry="2" />
<text  x="1059.89" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (18 samples, 0.01%)</title><rect x="437.2" y="245" width="0.2" height="15.0" fill="rgb(218,152,48)" rx="2" ry="2" />
<text  x="440.22" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (57 samples, 0.04%)</title><rect x="143.7" y="69" width="0.5" height="15.0" fill="rgb(238,225,49)" rx="2" ry="2" />
<text  x="146.65" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (36 samples, 0.03%)</title><rect x="446.6" y="293" width="0.4" height="15.0" fill="rgb(217,218,51)" rx="2" ry="2" />
<text  x="449.64" y="303.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (74 samples, 0.06%)</title><rect x="976.1" y="261" width="0.6" height="15.0" fill="rgb(237,86,26)" rx="2" ry="2" />
<text  x="979.07" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (18 samples, 0.01%)</title><rect x="1029.4" y="261" width="0.1" height="15.0" fill="rgb(229,211,40)" rx="2" ry="2" />
<text  x="1032.36" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (21 samples, 0.02%)</title><rect x="950.8" y="229" width="0.2" height="15.0" fill="rgb(252,111,18)" rx="2" ry="2" />
<text  x="953.79" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (15 samples, 0.01%)</title><rect x="949.7" y="213" width="0.1" height="15.0" fill="rgb(224,42,53)" rx="2" ry="2" />
<text  x="952.69" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (31 samples, 0.02%)</title><rect x="923.3" y="261" width="0.3" height="15.0" fill="rgb(229,129,8)" rx="2" ry="2" />
<text  x="926.32" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (68 samples, 0.05%)</title><rect x="402.7" y="165" width="0.6" height="15.0" fill="rgb(238,96,5)" rx="2" ry="2" />
<text  x="405.72" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (157 samples, 0.12%)</title><rect x="962.6" y="213" width="1.4" height="15.0" fill="rgb(218,86,10)" rx="2" ry="2" />
<text  x="965.60" y="223.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (82,706 samples, 63.13%)</title><rect x="30.4" y="421" width="745.0" height="15.0" fill="rgb(246,76,19)" rx="2" ry="2" />
<text  x="33.38" y="431.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>__tls_get_addr (12 samples, 0.01%)</title><rect x="154.1" y="277" width="0.1" height="15.0" fill="rgb(249,61,13)" rx="2" ry="2" />
<text  x="157.09" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (29 samples, 0.02%)</title><rect x="31.8" y="389" width="0.3" height="15.0" fill="rgb(243,135,42)" rx="2" ry="2" />
<text  x="34.83" y="399.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTransactionKey[abi:cxx11] (1,370 samples, 1.05%)</title><rect x="1045.1" y="309" width="12.3" height="15.0" fill="rgb(245,23,4)" rx="2" ry="2" />
<text  x="1048.10" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (80 samples, 0.06%)</title><rect x="947.9" y="229" width="0.8" height="15.0" fill="rgb(239,146,49)" rx="2" ry="2" />
<text  x="950.95" y="239.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::next_prod (1,066 samples, 0.81%)</title><rect x="456.2" y="341" width="9.6" height="15.0" fill="rgb(220,99,42)" rx="2" ry="2" />
<text  x="459.23" y="351.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (71 samples, 0.05%)</title><rect x="887.5" y="309" width="0.7" height="15.0" fill="rgb(239,169,50)" rx="2" ry="2" />
<text  x="890.53" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (18 samples, 0.01%)</title><rect x="448.7" y="309" width="0.1" height="15.0" fill="rgb(251,176,53)" rx="2" ry="2" />
<text  x="451.65" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (15 samples, 0.01%)</title><rect x="772.0" y="373" width="0.2" height="15.0" fill="rgb(234,37,29)" rx="2" ry="2" />
<text  x="775.03" y="383.5" ></text>
</g>
<g >
<title>_int_free (38 samples, 0.03%)</title><rect x="438.1" y="213" width="0.3" height="15.0" fill="rgb(218,71,47)" rx="2" ry="2" />
<text  x="441.08" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (649 samples, 0.50%)</title><rect x="170.2" y="229" width="5.9" height="15.0" fill="rgb(231,22,20)" rx="2" ry="2" />
<text  x="173.22" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (5,555 samples, 4.24%)</title><rect x="830.3" y="309" width="50.1" height="15.0" fill="rgb(239,67,29)" rx="2" ry="2" />
<text  x="833.35" y="319.5" >scyth..</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (101 samples, 0.08%)</title><rect x="956.2" y="213" width="0.9" height="15.0" fill="rgb(227,19,28)" rx="2" ry="2" />
<text  x="959.23" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~vector (90 samples, 0.07%)</title><rect x="455.0" y="341" width="0.8" height="15.0" fill="rgb(236,188,2)" rx="2" ry="2" />
<text  x="457.96" y="351.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator= (80 samples, 0.06%)</title><rect x="139.4" y="213" width="0.7" height="15.0" fill="rgb(231,129,38)" rx="2" ry="2" />
<text  x="142.42" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (26 samples, 0.02%)</title><rect x="886.5" y="293" width="0.3" height="15.0" fill="rgb(213,213,51)" rx="2" ry="2" />
<text  x="889.54" y="303.5" ></text>
</g>
<g >
<title>vfprintf (398 samples, 0.30%)</title><rect x="798.9" y="549" width="3.6" height="15.0" fill="rgb(225,155,20)" rx="2" ry="2" />
<text  x="801.91" y="559.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (12 samples, 0.01%)</title><rect x="161.1" y="181" width="0.1" height="15.0" fill="rgb(248,213,43)" rx="2" ry="2" />
<text  x="164.13" y="191.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::SetNext (112 samples, 0.09%)</title><rect x="425.9" y="277" width="1.0" height="15.0" fill="rgb(210,60,19)" rx="2" ry="2" />
<text  x="428.92" y="287.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (25 samples, 0.02%)</title><rect x="1034.5" y="245" width="0.2" height="15.0" fill="rgb(234,49,45)" rx="2" ry="2" />
<text  x="1037.51" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (17 samples, 0.01%)</title><rect x="950.0" y="229" width="0.2" height="15.0" fill="rgb(206,98,7)" rx="2" ry="2" />
<text  x="953.00" y="239.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (848 samples, 0.65%)</title><rect x="1045.7" y="293" width="7.6" height="15.0" fill="rgb(232,80,48)" rx="2" ry="2" />
<text  x="1048.66" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (2,560 samples, 1.95%)</title><rect x="944.3" y="293" width="23.1" height="15.0" fill="rgb(215,68,1)" rx="2" ry="2" />
<text  x="947.29" y="303.5" >s..</text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (867 samples, 0.66%)</title><rect x="999.6" y="277" width="7.8" height="15.0" fill="rgb(226,58,0)" rx="2" ry="2" />
<text  x="1002.61" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (32 samples, 0.02%)</title><rect x="423.4" y="245" width="0.3" height="15.0" fill="rgb(222,170,11)" rx="2" ry="2" />
<text  x="426.43" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (18 samples, 0.01%)</title><rect x="870.2" y="181" width="0.2" height="15.0" fill="rgb(206,204,7)" rx="2" ry="2" />
<text  x="873.20" y="191.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (143 samples, 0.11%)</title><rect x="1116.6" y="517" width="1.3" height="15.0" fill="rgb(219,160,45)" rx="2" ry="2" />
<text  x="1119.59" y="527.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (436 samples, 0.33%)</title><rect x="876.2" y="197" width="3.9" height="15.0" fill="rgb(243,181,43)" rx="2" ry="2" />
<text  x="879.17" y="207.5" ></text>
</g>
<g >
<title>operation_init (349 samples, 0.27%)</title><rect x="808.5" y="565" width="3.2" height="15.0" fill="rgb(222,121,6)" rx="2" ry="2" />
<text  x="811.51" y="575.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (542 samples, 0.41%)</title><rect x="962.5" y="245" width="4.9" height="15.0" fill="rgb(218,36,6)" rx="2" ry="2" />
<text  x="965.47" y="255.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (39 samples, 0.03%)</title><rect x="1022.5" y="293" width="0.3" height="15.0" fill="rgb(225,36,17)" rx="2" ry="2" />
<text  x="1025.49" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (147 samples, 0.11%)</title><rect x="1018.0" y="213" width="1.3" height="15.0" fill="rgb(227,141,31)" rx="2" ry="2" />
<text  x="1020.99" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (123 samples, 0.09%)</title><rect x="979.7" y="197" width="1.1" height="15.0" fill="rgb(206,84,6)" rx="2" ry="2" />
<text  x="982.69" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;void  (298 samples, 0.23%)</title><rect x="420.2" y="229" width="2.7" height="15.0" fill="rgb(244,201,10)" rx="2" ry="2" />
<text  x="423.21" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (14 samples, 0.01%)</title><rect x="985.0" y="261" width="0.1" height="15.0" fill="rgb(210,91,43)" rx="2" ry="2" />
<text  x="987.98" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (14 samples, 0.01%)</title><rect x="1046.8" y="229" width="0.2" height="15.0" fill="rgb(219,55,37)" rx="2" ry="2" />
<text  x="1049.82" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (80 samples, 0.06%)</title><rect x="956.4" y="149" width="0.7" height="15.0" fill="rgb(240,34,10)" rx="2" ry="2" />
<text  x="959.41" y="159.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (37 samples, 0.03%)</title><rect x="1112.6" y="565" width="0.3" height="15.0" fill="rgb(205,210,6)" rx="2" ry="2" />
<text  x="1115.59" y="575.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (21 samples, 0.02%)</title><rect x="148.2" y="149" width="0.2" height="15.0" fill="rgb(228,193,37)" rx="2" ry="2" />
<text  x="151.21" y="159.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (13 samples, 0.01%)</title><rect x="423.7" y="245" width="0.1" height="15.0" fill="rgb(209,123,45)" rx="2" ry="2" />
<text  x="426.72" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (58 samples, 0.04%)</title><rect x="980.0" y="149" width="0.5" height="15.0" fill="rgb(233,164,8)" rx="2" ry="2" />
<text  x="983.01" y="159.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (13,623 samples, 10.40%)</title><rect x="280.9" y="213" width="122.7" height="15.0" fill="rgb(245,212,7)" rx="2" ry="2" />
<text  x="283.93" y="223.5" >scythedb::NVMBl..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17 samples, 0.01%)</title><rect x="437.8" y="261" width="0.1" height="15.0" fill="rgb(243,200,0)" rx="2" ry="2" />
<text  x="440.79" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (14 samples, 0.01%)</title><rect x="453.6" y="293" width="0.1" height="15.0" fill="rgb(237,15,46)" rx="2" ry="2" />
<text  x="456.55" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (70 samples, 0.05%)</title><rect x="956.4" y="133" width="0.7" height="15.0" fill="rgb(215,155,36)" rx="2" ry="2" />
<text  x="959.42" y="143.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (33 samples, 0.03%)</title><rect x="176.6" y="245" width="0.3" height="15.0" fill="rgb(236,68,40)" rx="2" ry="2" />
<text  x="179.56" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (136 samples, 0.10%)</title><rect x="876.8" y="133" width="1.2" height="15.0" fill="rgb(241,3,21)" rx="2" ry="2" />
<text  x="879.77" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (114 samples, 0.09%)</title><rect x="1024.9" y="213" width="1.1" height="15.0" fill="rgb(208,179,43)" rx="2" ry="2" />
<text  x="1027.94" y="223.5" ></text>
</g>
<g >
<title>lane_hold (94 samples, 0.07%)</title><rect x="1070.6" y="581" width="0.8" height="15.0" fill="rgb(214,128,46)" rx="2" ry="2" />
<text  x="1073.56" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (60 samples, 0.05%)</title><rect x="1020.5" y="101" width="0.6" height="15.0" fill="rgb(248,209,51)" rx="2" ry="2" />
<text  x="1023.53" y="111.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (22 samples, 0.02%)</title><rect x="1024.4" y="309" width="0.2" height="15.0" fill="rgb(216,19,45)" rx="2" ry="2" />
<text  x="1027.43" y="319.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (21 samples, 0.02%)</title><rect x="107.4" y="181" width="0.2" height="15.0" fill="rgb(240,212,25)" rx="2" ry="2" />
<text  x="110.40" y="191.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (13 samples, 0.01%)</title><rect x="503.2" y="293" width="0.1" height="15.0" fill="rgb(247,213,33)" rx="2" ry="2" />
<text  x="506.17" y="303.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (2,479 samples, 1.89%)</title><rect x="78.0" y="197" width="22.3" height="15.0" fill="rgb(222,45,20)" rx="2" ry="2" />
<text  x="80.99" y="207.5" >s..</text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (15 samples, 0.01%)</title><rect x="414.0" y="229" width="0.2" height="15.0" fill="rgb(233,56,30)" rx="2" ry="2" />
<text  x="417.04" y="239.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (17 samples, 0.01%)</title><rect x="976.2" y="245" width="0.1" height="15.0" fill="rgb(214,222,44)" rx="2" ry="2" />
<text  x="979.16" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (62 samples, 0.05%)</title><rect x="839.0" y="213" width="0.6" height="15.0" fill="rgb(245,192,48)" rx="2" ry="2" />
<text  x="842.01" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (82 samples, 0.06%)</title><rect x="992.4" y="213" width="0.7" height="15.0" fill="rgb(232,158,41)" rx="2" ry="2" />
<text  x="995.39" y="223.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (35 samples, 0.03%)</title><rect x="909.7" y="261" width="0.4" height="15.0" fill="rgb(223,124,52)" rx="2" ry="2" />
<text  x="912.74" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (70 samples, 0.05%)</title><rect x="835.0" y="293" width="0.7" height="15.0" fill="rgb(205,61,11)" rx="2" ry="2" />
<text  x="838.02" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (98 samples, 0.07%)</title><rect x="1041.6" y="261" width="0.9" height="15.0" fill="rgb(217,121,42)" rx="2" ry="2" />
<text  x="1044.60" y="271.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (124 samples, 0.09%)</title><rect x="1024.8" y="245" width="1.2" height="15.0" fill="rgb(240,11,42)" rx="2" ry="2" />
<text  x="1027.85" y="255.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (1,007 samples, 0.77%)</title><rect x="871.3" y="293" width="9.1" height="15.0" fill="rgb(234,150,47)" rx="2" ry="2" />
<text  x="874.31" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (66 samples, 0.05%)</title><rect x="865.1" y="261" width="0.5" height="15.0" fill="rgb(210,162,40)" rx="2" ry="2" />
<text  x="868.05" y="271.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (19 samples, 0.01%)</title><rect x="25.7" y="421" width="0.2" height="15.0" fill="rgb(240,174,26)" rx="2" ry="2" />
<text  x="28.69" y="431.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (1,780 samples, 1.36%)</title><rect x="134.7" y="277" width="16.1" height="15.0" fill="rgb(251,145,23)" rx="2" ry="2" />
<text  x="137.75" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (306 samples, 0.23%)</title><rect x="1019.4" y="213" width="2.7" height="15.0" fill="rgb(229,147,6)" rx="2" ry="2" />
<text  x="1022.39" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (123 samples, 0.09%)</title><rect x="1044.0" y="293" width="1.1" height="15.0" fill="rgb(221,21,14)" rx="2" ry="2" />
<text  x="1046.96" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (465 samples, 0.35%)</title><rect x="932.3" y="277" width="4.2" height="15.0" fill="rgb(227,42,36)" rx="2" ry="2" />
<text  x="935.27" y="287.5" ></text>
</g>
<g >
<title>pmem_memcpy (46 samples, 0.04%)</title><rect x="1091.1" y="581" width="0.4" height="15.0" fill="rgb(254,222,27)" rx="2" ry="2" />
<text  x="1094.13" y="591.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (474 samples, 0.36%)</title><rect x="866.8" y="229" width="4.3" height="15.0" fill="rgb(211,133,40)" rx="2" ry="2" />
<text  x="869.82" y="239.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (26 samples, 0.02%)</title><rect x="947.2" y="277" width="0.2" height="15.0" fill="rgb(230,198,26)" rx="2" ry="2" />
<text  x="950.17" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (14 samples, 0.01%)</title><rect x="934.0" y="165" width="0.1" height="15.0" fill="rgb(220,28,19)" rx="2" ry="2" />
<text  x="936.97" y="175.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (26 samples, 0.02%)</title><rect x="1010.2" y="277" width="0.2" height="15.0" fill="rgb(238,226,15)" rx="2" ry="2" />
<text  x="1013.20" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (200 samples, 0.15%)</title><rect x="1020.2" y="165" width="1.8" height="15.0" fill="rgb(221,138,12)" rx="2" ry="2" />
<text  x="1023.18" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (39 samples, 0.03%)</title><rect x="894.6" y="261" width="0.4" height="15.0" fill="rgb(224,87,42)" rx="2" ry="2" />
<text  x="897.62" y="271.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (61 samples, 0.05%)</title><rect x="161.3" y="197" width="0.5" height="15.0" fill="rgb(207,202,49)" rx="2" ry="2" />
<text  x="164.30" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (44 samples, 0.03%)</title><rect x="1016.4" y="133" width="0.4" height="15.0" fill="rgb(225,174,54)" rx="2" ry="2" />
<text  x="1019.36" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (52 samples, 0.04%)</title><rect x="844.9" y="197" width="0.4" height="15.0" fill="rgb(207,65,31)" rx="2" ry="2" />
<text  x="847.86" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (95 samples, 0.07%)</title><rect x="898.2" y="277" width="0.9" height="15.0" fill="rgb(223,29,14)" rx="2" ry="2" />
<text  x="901.22" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (21 samples, 0.02%)</title><rect x="941.4" y="325" width="0.2" height="15.0" fill="rgb(238,187,38)" rx="2" ry="2" />
<text  x="944.40" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (60 samples, 0.05%)</title><rect x="986.3" y="229" width="0.5" height="15.0" fill="rgb(237,166,21)" rx="2" ry="2" />
<text  x="989.30" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (14 samples, 0.01%)</title><rect x="107.8" y="197" width="0.2" height="15.0" fill="rgb(215,226,24)" rx="2" ry="2" />
<text  x="110.84" y="207.5" ></text>
</g>
<g >
<title>XXH_readLE64 (18 samples, 0.01%)</title><rect x="856.5" y="181" width="0.1" height="15.0" fill="rgb(230,182,30)" rx="2" ry="2" />
<text  x="859.46" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (120 samples, 0.09%)</title><rect x="901.5" y="277" width="1.1" height="15.0" fill="rgb(208,29,46)" rx="2" ry="2" />
<text  x="904.52" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (62 samples, 0.05%)</title><rect x="971.2" y="213" width="0.6" height="15.0" fill="rgb(205,63,48)" rx="2" ry="2" />
<text  x="974.23" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (17 samples, 0.01%)</title><rect x="929.2" y="277" width="0.1" height="15.0" fill="rgb(234,103,39)" rx="2" ry="2" />
<text  x="932.17" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (26,974 samples, 20.59%)</title><rect x="825.3" y="469" width="243.0" height="15.0" fill="rgb(220,228,4)" rx="2" ry="2" />
<text  x="828.33" y="479.5" >std::function&lt;std::unique_ptr&lt;st..</text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (12 samples, 0.01%)</title><rect x="970.1" y="245" width="0.1" height="15.0" fill="rgb(215,209,12)" rx="2" ry="2" />
<text  x="973.13" y="255.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (14 samples, 0.01%)</title><rect x="955.0" y="277" width="0.1" height="15.0" fill="rgb(214,106,22)" rx="2" ry="2" />
<text  x="958.02" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (24 samples, 0.02%)</title><rect x="923.9" y="229" width="0.2" height="15.0" fill="rgb(216,208,9)" rx="2" ry="2" />
<text  x="926.85" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (248 samples, 0.19%)</title><rect x="850.2" y="277" width="2.2" height="15.0" fill="rgb(236,67,24)" rx="2" ry="2" />
<text  x="853.18" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (26 samples, 0.02%)</title><rect x="1005.0" y="213" width="0.2" height="15.0" fill="rgb(212,169,11)" rx="2" ry="2" />
<text  x="1007.98" y="223.5" ></text>
</g>
<g >
<title>utils::Hash (29 samples, 0.02%)</title><rect x="1053.0" y="277" width="0.3" height="15.0" fill="rgb(218,30,32)" rx="2" ry="2" />
<text  x="1056.04" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (56 samples, 0.04%)</title><rect x="134.1" y="261" width="0.5" height="15.0" fill="rgb(220,25,49)" rx="2" ry="2" />
<text  x="137.09" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (115 samples, 0.09%)</title><rect x="914.5" y="165" width="1.0" height="15.0" fill="rgb(222,85,4)" rx="2" ry="2" />
<text  x="917.46" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (19 samples, 0.01%)</title><rect x="970.6" y="261" width="0.2" height="15.0" fill="rgb(215,186,15)" rx="2" ry="2" />
<text  x="973.61" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (23 samples, 0.02%)</title><rect x="845.1" y="181" width="0.2" height="15.0" fill="rgb(214,101,5)" rx="2" ry="2" />
<text  x="848.08" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (382 samples, 0.29%)</title><rect x="449.8" y="293" width="3.5" height="15.0" fill="rgb(240,163,2)" rx="2" ry="2" />
<text  x="452.83" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (14 samples, 0.01%)</title><rect x="903.6" y="261" width="0.1" height="15.0" fill="rgb(227,207,54)" rx="2" ry="2" />
<text  x="906.61" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (215 samples, 0.16%)</title><rect x="433.6" y="293" width="1.9" height="15.0" fill="rgb(230,6,8)" rx="2" ry="2" />
<text  x="436.59" y="303.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (594 samples, 0.45%)</title><rect x="858.5" y="277" width="5.4" height="15.0" fill="rgb(229,93,39)" rx="2" ry="2" />
<text  x="861.55" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;scythedb::Slice*, scythedb::Slice*, std::allocator&lt;scythedb::Slice&gt; &gt; (29 samples, 0.02%)</title><rect x="42.5" y="277" width="0.2" height="15.0" fill="rgb(236,55,10)" rx="2" ry="2" />
<text  x="45.45" y="287.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoTransaction (14,189 samples, 10.83%)</title><rect x="940.2" y="341" width="127.8" height="15.0" fill="rgb(242,152,33)" rx="2" ry="2" />
<text  x="943.19" y="351.5" >ycsbc::Client::D..</text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::begin (20 samples, 0.02%)</title><rect x="131.7" y="277" width="0.2" height="15.0" fill="rgb(225,119,27)" rx="2" ry="2" />
<text  x="134.75" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (34 samples, 0.03%)</title><rect x="875.8" y="197" width="0.3" height="15.0" fill="rgb(252,138,47)" rx="2" ry="2" />
<text  x="878.75" y="207.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (173 samples, 0.13%)</title><rect x="991.6" y="245" width="1.5" height="15.0" fill="rgb(236,191,27)" rx="2" ry="2" />
<text  x="994.57" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (31 samples, 0.02%)</title><rect x="976.4" y="213" width="0.3" height="15.0" fill="rgb(250,138,9)" rx="2" ry="2" />
<text  x="979.39" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (28 samples, 0.02%)</title><rect x="1000.6" y="197" width="0.3" height="15.0" fill="rgb(213,20,7)" rx="2" ry="2" />
<text  x="1003.62" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (18 samples, 0.01%)</title><rect x="850.0" y="261" width="0.2" height="15.0" fill="rgb(215,186,43)" rx="2" ry="2" />
<text  x="853.02" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (89 samples, 0.07%)</title><rect x="948.9" y="213" width="0.8" height="15.0" fill="rgb(254,221,3)" rx="2" ry="2" />
<text  x="951.89" y="223.5" ></text>
</g>
<g >
<title>pmemobj_root_construct (12 samples, 0.01%)</title><rect x="1092.2" y="581" width="0.1" height="15.0" fill="rgb(219,28,5)" rx="2" ry="2" />
<text  x="1095.18" y="591.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (23 samples, 0.02%)</title><rect x="946.7" y="277" width="0.2" height="15.0" fill="rgb(206,150,34)" rx="2" ry="2" />
<text  x="949.68" y="287.5" ></text>
</g>
<g >
<title>operation_add_entry (16 samples, 0.01%)</title><rect x="1164.0" y="597" width="0.1" height="15.0" fill="rgb(234,141,32)" rx="2" ry="2" />
<text  x="1166.97" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (252 samples, 0.19%)</title><rect x="959.9" y="213" width="2.3" height="15.0" fill="rgb(247,75,19)" rx="2" ry="2" />
<text  x="962.92" y="223.5" ></text>
</g>
<g >
<title>scythedb::InternalNode::InternalNode (32 samples, 0.02%)</title><rect x="414.3" y="229" width="0.3" height="15.0" fill="rgb(245,174,47)" rx="2" ry="2" />
<text  x="417.29" y="239.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (45 samples, 0.03%)</title><rect x="929.5" y="277" width="0.4" height="15.0" fill="rgb(244,189,40)" rx="2" ry="2" />
<text  x="932.49" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (186 samples, 0.14%)</title><rect x="814.2" y="565" width="1.7" height="15.0" fill="rgb(249,98,48)" rx="2" ry="2" />
<text  x="817.23" y="575.5" ></text>
</g>
<g >
<title>__gthread_active_p (19 samples, 0.01%)</title><rect x="862.2" y="149" width="0.2" height="15.0" fill="rgb(239,228,24)" rx="2" ry="2" />
<text  x="865.21" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (55 samples, 0.04%)</title><rect x="1039.0" y="261" width="0.5" height="15.0" fill="rgb(227,94,36)" rx="2" ry="2" />
<text  x="1041.96" y="271.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (76 samples, 0.06%)</title><rect x="25.2" y="437" width="0.7" height="15.0" fill="rgb(209,10,17)" rx="2" ry="2" />
<text  x="28.18" y="447.5" ></text>
</g>
<g >
<title>ravl_foreach_node (22 samples, 0.02%)</title><rect x="816.4" y="565" width="0.2" height="15.0" fill="rgb(217,147,3)" rx="2" ry="2" />
<text  x="819.40" y="575.5" ></text>
</g>
<g >
<title>__lll_lock_wait (98 samples, 0.07%)</title><rect x="1060.7" y="277" width="0.8" height="15.0" fill="rgb(217,67,34)" rx="2" ry="2" />
<text  x="1063.66" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (77 samples, 0.06%)</title><rect x="1032.2" y="293" width="0.7" height="15.0" fill="rgb(207,167,27)" rx="2" ry="2" />
<text  x="1035.22" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (204 samples, 0.16%)</title><rect x="45.0" y="277" width="1.8" height="15.0" fill="rgb(236,76,3)" rx="2" ry="2" />
<text  x="47.99" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateFallback (60 samples, 0.05%)</title><rect x="422.2" y="181" width="0.6" height="15.0" fill="rgb(240,44,38)" rx="2" ry="2" />
<text  x="425.24" y="191.5" ></text>
</g>
<g >
<title>std::_Mu&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*, false, false&gt;::operator (52 samples, 0.04%)</title><rect x="31.6" y="405" width="0.5" height="15.0" fill="rgb(217,130,1)" rx="2" ry="2" />
<text  x="34.62" y="415.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (598 samples, 0.46%)</title><rect x="858.5" y="293" width="5.4" height="15.0" fill="rgb(250,219,46)" rx="2" ry="2" />
<text  x="861.53" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (946 samples, 0.72%)</title><rect x="387.3" y="165" width="8.5" height="15.0" fill="rgb(249,105,5)" rx="2" ry="2" />
<text  x="390.31" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (99 samples, 0.08%)</title><rect x="1020.4" y="133" width="0.9" height="15.0" fill="rgb(225,177,12)" rx="2" ry="2" />
<text  x="1023.37" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (16 samples, 0.01%)</title><rect x="974.9" y="261" width="0.2" height="15.0" fill="rgb(207,34,12)" rx="2" ry="2" />
<text  x="977.93" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (82 samples, 0.06%)</title><rect x="1012.2" y="149" width="0.7" height="15.0" fill="rgb(208,115,52)" rx="2" ry="2" />
<text  x="1015.19" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (88 samples, 0.07%)</title><rect x="1040.2" y="277" width="0.8" height="15.0" fill="rgb(243,0,48)" rx="2" ry="2" />
<text  x="1043.20" y="287.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (13 samples, 0.01%)</title><rect x="1116.5" y="517" width="0.1" height="15.0" fill="rgb(248,53,7)" rx="2" ry="2" />
<text  x="1119.47" y="527.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (26,974 samples, 20.59%)</title><rect x="825.3" y="453" width="243.0" height="15.0" fill="rgb(239,155,12)" rx="2" ry="2" />
<text  x="828.33" y="463.5" >std::_Function_handler&lt;std::uniq..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (86 samples, 0.07%)</title><rect x="985.2" y="261" width="0.7" height="15.0" fill="rgb(212,164,20)" rx="2" ry="2" />
<text  x="988.16" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (99 samples, 0.08%)</title><rect x="956.2" y="197" width="0.9" height="15.0" fill="rgb(214,208,15)" rx="2" ry="2" />
<text  x="959.24" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (55 samples, 0.04%)</title><rect x="879.5" y="133" width="0.5" height="15.0" fill="rgb(241,75,32)" rx="2" ry="2" />
<text  x="882.49" y="143.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (1,606 samples, 1.23%)</title><rect x="1174.2" y="597" width="14.4" height="15.0" fill="rgb(220,112,6)" rx="2" ry="2" />
<text  x="1177.17" y="607.5" ></text>
</g>
<g >
<title>ulog_entry_buf_create (147 samples, 0.11%)</title><rect x="1161.5" y="581" width="1.3" height="15.0" fill="rgb(215,53,20)" rx="2" ry="2" />
<text  x="1164.46" y="591.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (24 samples, 0.02%)</title><rect x="161.1" y="197" width="0.2" height="15.0" fill="rgb(230,193,40)" rx="2" ry="2" />
<text  x="164.06" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (19 samples, 0.01%)</title><rect x="980.9" y="277" width="0.2" height="15.0" fill="rgb(225,71,35)" rx="2" ry="2" />
<text  x="983.93" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (167 samples, 0.13%)</title><rect x="860.9" y="181" width="1.5" height="15.0" fill="rgb(228,217,29)" rx="2" ry="2" />
<text  x="863.92" y="191.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (135 samples, 0.10%)</title><rect x="904.7" y="309" width="1.2" height="15.0" fill="rgb(228,14,37)" rx="2" ry="2" />
<text  x="907.67" y="319.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (82,202 samples, 62.75%)</title><rect x="32.4" y="405" width="740.5" height="15.0" fill="rgb(223,226,42)" rx="2" ry="2" />
<text  x="35.45" y="415.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (46 samples, 0.04%)</title><rect x="419.4" y="245" width="0.5" height="15.0" fill="rgb(226,54,38)" rx="2" ry="2" />
<text  x="422.45" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (55 samples, 0.04%)</title><rect x="839.7" y="229" width="0.5" height="15.0" fill="rgb(215,174,29)" rx="2" ry="2" />
<text  x="842.70" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (461 samples, 0.35%)</title><rect x="155.8" y="261" width="4.1" height="15.0" fill="rgb(235,43,16)" rx="2" ry="2" />
<text  x="158.78" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (1,637 samples, 1.25%)</title><rect x="135.9" y="229" width="14.7" height="15.0" fill="rgb(221,180,30)" rx="2" ry="2" />
<text  x="138.87" y="239.5" ></text>
</g>
<g >
<title>_itoa_word (198 samples, 0.15%)</title><rect x="797.1" y="549" width="1.8" height="15.0" fill="rgb(248,181,26)" rx="2" ry="2" />
<text  x="800.13" y="559.5" ></text>
</g>
<g >
<title>std::function&lt;void  (74 samples, 0.06%)</title><rect x="1021.3" y="149" width="0.7" height="15.0" fill="rgb(239,38,0)" rx="2" ry="2" />
<text  x="1024.32" y="159.5" ></text>
</g>
<g >
<title>obj_norep_memcpy (13 samples, 0.01%)</title><rect x="1161.2" y="581" width="0.1" height="15.0" fill="rgb(208,60,45)" rx="2" ry="2" />
<text  x="1164.18" y="591.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (42 samples, 0.03%)</title><rect x="772.4" y="389" width="0.4" height="15.0" fill="rgb(229,21,53)" rx="2" ry="2" />
<text  x="775.37" y="399.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="926.6" y="197" width="0.1" height="15.0" fill="rgb(215,98,5)" rx="2" ry="2" />
<text  x="929.56" y="207.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (24 samples, 0.02%)</title><rect x="990.5" y="261" width="0.2" height="15.0" fill="rgb(232,194,47)" rx="2" ry="2" />
<text  x="993.47" y="271.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (18 samples, 0.01%)</title><rect x="954.7" y="261" width="0.1" height="15.0" fill="rgb(234,130,9)" rx="2" ry="2" />
<text  x="957.68" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18 samples, 0.01%)</title><rect x="928.1" y="229" width="0.2" height="15.0" fill="rgb(235,96,1)" rx="2" ry="2" />
<text  x="931.10" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="924.2" y="261" width="0.1" height="15.0" fill="rgb(238,189,14)" rx="2" ry="2" />
<text  x="927.16" y="271.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (12 samples, 0.01%)</title><rect x="883.5" y="261" width="0.1" height="15.0" fill="rgb(246,175,15)" rx="2" ry="2" />
<text  x="886.46" y="271.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (13 samples, 0.01%)</title><rect x="951.5" y="229" width="0.1" height="15.0" fill="rgb(214,229,20)" rx="2" ry="2" />
<text  x="954.45" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (23 samples, 0.02%)</title><rect x="984.0" y="229" width="0.2" height="15.0" fill="rgb(241,177,9)" rx="2" ry="2" />
<text  x="987.04" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (54 samples, 0.04%)</title><rect x="1025.2" y="165" width="0.5" height="15.0" fill="rgb(237,71,54)" rx="2" ry="2" />
<text  x="1028.20" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (160 samples, 0.12%)</title><rect x="979.4" y="293" width="1.5" height="15.0" fill="rgb(243,16,25)" rx="2" ry="2" />
<text  x="982.41" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (16 samples, 0.01%)</title><rect x="447.3" y="293" width="0.1" height="15.0" fill="rgb(207,215,15)" rx="2" ry="2" />
<text  x="450.25" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (19 samples, 0.01%)</title><rect x="1021.8" y="117" width="0.2" height="15.0" fill="rgb(250,21,54)" rx="2" ry="2" />
<text  x="1024.81" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (30 samples, 0.02%)</title><rect x="445.5" y="261" width="0.2" height="15.0" fill="rgb(206,209,27)" rx="2" ry="2" />
<text  x="448.46" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (59 samples, 0.05%)</title><rect x="966.4" y="101" width="0.6" height="15.0" fill="rgb(251,49,13)" rx="2" ry="2" />
<text  x="969.42" y="111.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (234 samples, 0.18%)</title><rect x="1065.7" y="277" width="2.1" height="15.0" fill="rgb(207,129,11)" rx="2" ry="2" />
<text  x="1068.73" y="287.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (42 samples, 0.03%)</title><rect x="795.5" y="549" width="0.4" height="15.0" fill="rgb(245,76,40)" rx="2" ry="2" />
<text  x="798.55" y="559.5" ></text>
</g>
<g >
<title>operator new (30 samples, 0.02%)</title><rect x="842.7" y="181" width="0.3" height="15.0" fill="rgb(210,41,2)" rx="2" ry="2" />
<text  x="845.71" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (139 samples, 0.11%)</title><rect x="948.8" y="229" width="1.2" height="15.0" fill="rgb(226,188,53)" rx="2" ry="2" />
<text  x="951.75" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (290 samples, 0.22%)</title><rect x="420.3" y="213" width="2.6" height="15.0" fill="rgb(219,114,4)" rx="2" ry="2" />
<text  x="423.29" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (211 samples, 0.16%)</title><rect x="925.1" y="277" width="1.9" height="15.0" fill="rgb(246,147,27)" rx="2" ry="2" />
<text  x="928.10" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (90 samples, 0.07%)</title><rect x="987.5" y="261" width="0.9" height="15.0" fill="rgb(211,84,19)" rx="2" ry="2" />
<text  x="990.55" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (282 samples, 0.22%)</title><rect x="867.3" y="213" width="2.5" height="15.0" fill="rgb(248,140,35)" rx="2" ry="2" />
<text  x="870.30" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (312 samples, 0.24%)</title><rect x="112.1" y="293" width="2.8" height="15.0" fill="rgb(245,51,9)" rx="2" ry="2" />
<text  x="115.06" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (71 samples, 0.05%)</title><rect x="930.7" y="245" width="0.7" height="15.0" fill="rgb(231,152,42)" rx="2" ry="2" />
<text  x="933.74" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (20 samples, 0.02%)</title><rect x="981.8" y="213" width="0.2" height="15.0" fill="rgb(239,212,2)" rx="2" ry="2" />
<text  x="984.84" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (12 samples, 0.01%)</title><rect x="1030.1" y="245" width="0.1" height="15.0" fill="rgb(248,94,0)" rx="2" ry="2" />
<text  x="1033.05" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::operator[]&lt;std::enable_if&lt;true, void&gt; &gt; (68 samples, 0.05%)</title><rect x="146.7" y="133" width="0.6" height="15.0" fill="rgb(245,139,50)" rx="2" ry="2" />
<text  x="149.71" y="143.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (23 samples, 0.02%)</title><rect x="875.1" y="197" width="0.2" height="15.0" fill="rgb(232,188,50)" rx="2" ry="2" />
<text  x="878.10" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (80 samples, 0.06%)</title><rect x="447.6" y="293" width="0.7" height="15.0" fill="rgb(220,200,33)" rx="2" ry="2" />
<text  x="450.60" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (17 samples, 0.01%)</title><rect x="1047.2" y="229" width="0.2" height="15.0" fill="rgb(238,30,0)" rx="2" ry="2" />
<text  x="1050.21" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (60 samples, 0.05%)</title><rect x="1025.1" y="181" width="0.6" height="15.0" fill="rgb(249,5,21)" rx="2" ry="2" />
<text  x="1028.14" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="848.1" y="229" width="0.1" height="15.0" fill="rgb(240,123,5)" rx="2" ry="2" />
<text  x="851.11" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (21 samples, 0.02%)</title><rect x="115.4" y="293" width="0.2" height="15.0" fill="rgb(221,55,19)" rx="2" ry="2" />
<text  x="118.40" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (83 samples, 0.06%)</title><rect x="986.2" y="261" width="0.8" height="15.0" fill="rgb(218,133,27)" rx="2" ry="2" />
<text  x="989.22" y="271.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducerHash*&gt;::load (24 samples, 0.02%)</title><rect x="957.6" y="213" width="0.2" height="15.0" fill="rgb(233,217,11)" rx="2" ry="2" />
<text  x="960.56" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (508 samples, 0.39%)</title><rect x="407.7" y="261" width="4.6" height="15.0" fill="rgb(231,68,31)" rx="2" ry="2" />
<text  x="410.71" y="271.5" ></text>
</g>
<g >
<title>XXH64_finalize (105 samples, 0.08%)</title><rect x="1009.1" y="197" width="0.9" height="15.0" fill="rgb(242,204,40)" rx="2" ry="2" />
<text  x="1012.06" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_allocate (87 samples, 0.07%)</title><rect x="127.2" y="277" width="0.8" height="15.0" fill="rgb(254,122,45)" rx="2" ry="2" />
<text  x="130.22" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="917.2" y="261" width="0.1" height="15.0" fill="rgb(217,184,9)" rx="2" ry="2" />
<text  x="920.15" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (175 samples, 0.13%)</title><rect x="398.7" y="149" width="1.5" height="15.0" fill="rgb(222,201,47)" rx="2" ry="2" />
<text  x="401.67" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (16 samples, 0.01%)</title><rect x="448.1" y="277" width="0.2" height="15.0" fill="rgb(224,68,12)" rx="2" ry="2" />
<text  x="451.14" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (15 samples, 0.01%)</title><rect x="431.4" y="229" width="0.2" height="15.0" fill="rgb(218,17,29)" rx="2" ry="2" />
<text  x="434.44" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (441 samples, 0.34%)</title><rect x="947.7" y="277" width="4.0" height="15.0" fill="rgb(238,174,6)" rx="2" ry="2" />
<text  x="950.68" y="287.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (45 samples, 0.03%)</title><rect x="910.3" y="213" width="0.4" height="15.0" fill="rgb(218,79,27)" rx="2" ry="2" />
<text  x="913.32" y="223.5" ></text>
</g>
<g >
<title>__gthread_yield (14 samples, 0.01%)</title><rect x="725.8" y="341" width="0.2" height="15.0" fill="rgb(208,137,27)" rx="2" ry="2" />
<text  x="728.84" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (28 samples, 0.02%)</title><rect x="917.4" y="261" width="0.2" height="15.0" fill="rgb(228,4,54)" rx="2" ry="2" />
<text  x="920.35" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_Vector_base (14 samples, 0.01%)</title><rect x="454.8" y="325" width="0.2" height="15.0" fill="rgb(211,192,22)" rx="2" ry="2" />
<text  x="457.83" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (55 samples, 0.04%)</title><rect x="847.6" y="229" width="0.5" height="15.0" fill="rgb(232,69,7)" rx="2" ry="2" />
<text  x="850.59" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (13 samples, 0.01%)</title><rect x="917.5" y="245" width="0.1" height="15.0" fill="rgb(246,189,43)" rx="2" ry="2" />
<text  x="920.49" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (19 samples, 0.01%)</title><rect x="913.7" y="165" width="0.1" height="15.0" fill="rgb(230,169,29)" rx="2" ry="2" />
<text  x="916.67" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (245 samples, 0.19%)</title><rect x="872.1" y="229" width="2.2" height="15.0" fill="rgb(228,25,3)" rx="2" ry="2" />
<text  x="875.11" y="239.5" ></text>
</g>
<g >
<title>pmemobj_oid (17 samples, 0.01%)</title><rect x="415.5" y="245" width="0.1" height="15.0" fill="rgb(242,117,23)" rx="2" ry="2" />
<text  x="418.49" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (95 samples, 0.07%)</title><rect x="776.6" y="437" width="0.8" height="15.0" fill="rgb(215,152,24)" rx="2" ry="2" />
<text  x="779.55" y="447.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (29 samples, 0.02%)</title><rect x="423.2" y="245" width="0.2" height="15.0" fill="rgb(225,68,25)" rx="2" ry="2" />
<text  x="426.17" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (115 samples, 0.09%)</title><rect x="950.6" y="261" width="1.1" height="15.0" fill="rgb(234,128,13)" rx="2" ry="2" />
<text  x="953.61" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (178 samples, 0.14%)</title><rect x="983.3" y="277" width="1.6" height="15.0" fill="rgb(252,205,7)" rx="2" ry="2" />
<text  x="986.29" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (37 samples, 0.03%)</title><rect x="851.3" y="245" width="0.3" height="15.0" fill="rgb(214,122,29)" rx="2" ry="2" />
<text  x="854.25" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="981.9" y="197" width="0.1" height="15.0" fill="rgb(217,85,25)" rx="2" ry="2" />
<text  x="984.85" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (27 samples, 0.02%)</title><rect x="838.8" y="213" width="0.2" height="15.0" fill="rgb(225,218,33)" rx="2" ry="2" />
<text  x="841.77" y="223.5" ></text>
</g>
<g >
<title>XXH_read64 (14 samples, 0.01%)</title><rect x="856.5" y="165" width="0.1" height="15.0" fill="rgb(252,90,0)" rx="2" ry="2" />
<text  x="859.49" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (145 samples, 0.11%)</title><rect x="433.6" y="277" width="1.3" height="15.0" fill="rgb(224,71,38)" rx="2" ry="2" />
<text  x="436.63" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (236 samples, 0.18%)</title><rect x="1035.5" y="213" width="2.1" height="15.0" fill="rgb(212,179,1)" rx="2" ry="2" />
<text  x="1038.48" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (2,144 samples, 1.64%)</title><rect x="47.4" y="245" width="19.3" height="15.0" fill="rgb(226,34,31)" rx="2" ry="2" />
<text  x="50.38" y="255.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (163 samples, 0.12%)</title><rect x="1116.4" y="581" width="1.5" height="15.0" fill="rgb(250,74,36)" rx="2" ry="2" />
<text  x="1119.44" y="591.5" ></text>
</g>
<g >
<title>[unknown] (36 samples, 0.03%)</title><rect x="793.3" y="517" width="0.3" height="15.0" fill="rgb(233,229,49)" rx="2" ry="2" />
<text  x="796.32" y="527.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (48 samples, 0.04%)</title><rect x="928.3" y="213" width="0.5" height="15.0" fill="rgb(217,149,0)" rx="2" ry="2" />
<text  x="931.35" y="223.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (31 samples, 0.02%)</title><rect x="967.4" y="293" width="0.2" height="15.0" fill="rgb(210,220,13)" rx="2" ry="2" />
<text  x="970.37" y="303.5" ></text>
</g>
<g >
<title>operation_reserve (21 samples, 0.02%)</title><rect x="1086.2" y="581" width="0.1" height="15.0" fill="rgb(212,35,0)" rx="2" ry="2" />
<text  x="1089.15" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (160 samples, 0.12%)</title><rect x="988.8" y="245" width="1.5" height="15.0" fill="rgb(235,20,9)" rx="2" ry="2" />
<text  x="991.82" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (74 samples, 0.06%)</title><rect x="901.7" y="245" width="0.7" height="15.0" fill="rgb(206,51,33)" rx="2" ry="2" />
<text  x="904.69" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="868.8" y="133" width="0.1" height="15.0" fill="rgb(235,125,10)" rx="2" ry="2" />
<text  x="871.79" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (29 samples, 0.02%)</title><rect x="926.2" y="229" width="0.3" height="15.0" fill="rgb(229,161,18)" rx="2" ry="2" />
<text  x="929.25" y="239.5" ></text>
</g>
<g >
<title>std::__invoke&lt;int  (26,974 samples, 20.59%)</title><rect x="825.3" y="389" width="243.0" height="15.0" fill="rgb(235,43,31)" rx="2" ry="2" />
<text  x="828.33" y="399.5" >std::__invoke&lt;int </text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (32 samples, 0.02%)</title><rect x="980.9" y="293" width="0.3" height="15.0" fill="rgb(210,19,10)" rx="2" ry="2" />
<text  x="983.89" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (13 samples, 0.01%)</title><rect x="839.4" y="165" width="0.1" height="15.0" fill="rgb(226,131,35)" rx="2" ry="2" />
<text  x="842.39" y="175.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (14 samples, 0.01%)</title><rect x="850.1" y="245" width="0.1" height="15.0" fill="rgb(212,133,52)" rx="2" ry="2" />
<text  x="853.05" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (26 samples, 0.02%)</title><rect x="434.6" y="245" width="0.3" height="15.0" fill="rgb(248,188,21)" rx="2" ry="2" />
<text  x="437.63" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (69 samples, 0.05%)</title><rect x="1020.5" y="117" width="0.6" height="15.0" fill="rgb(226,61,12)" rx="2" ry="2" />
<text  x="1023.45" y="127.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (197 samples, 0.15%)</title><rect x="1066.0" y="261" width="1.7" height="15.0" fill="rgb(220,112,44)" rx="2" ry="2" />
<text  x="1068.96" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (26 samples, 0.02%)</title><rect x="905.9" y="309" width="0.2" height="15.0" fill="rgb(236,215,18)" rx="2" ry="2" />
<text  x="908.88" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (18 samples, 0.01%)</title><rect x="932.1" y="277" width="0.2" height="15.0" fill="rgb(251,88,37)" rx="2" ry="2" />
<text  x="935.10" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (57 samples, 0.04%)</title><rect x="935.3" y="197" width="0.5" height="15.0" fill="rgb(245,215,37)" rx="2" ry="2" />
<text  x="938.31" y="207.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (12 samples, 0.01%)</title><rect x="974.2" y="245" width="0.1" height="15.0" fill="rgb(225,132,46)" rx="2" ry="2" />
<text  x="977.22" y="255.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Get (2,698 samples, 2.06%)</title><rect x="943.7" y="309" width="24.3" height="15.0" fill="rgb(221,160,30)" rx="2" ry="2" />
<text  x="946.67" y="319.5" >s..</text>
</g>
<g >
<title>scythedb::ExtractUserKey (195 samples, 0.15%)</title><rect x="106.1" y="197" width="1.7" height="15.0" fill="rgb(241,135,26)" rx="2" ry="2" />
<text  x="109.08" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (14 samples, 0.01%)</title><rect x="1016.0" y="181" width="0.2" height="15.0" fill="rgb(218,126,53)" rx="2" ry="2" />
<text  x="1019.05" y="191.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (12 samples, 0.01%)</title><rect x="1023.3" y="309" width="0.1" height="15.0" fill="rgb(240,143,1)" rx="2" ry="2" />
<text  x="1026.29" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (15 samples, 0.01%)</title><rect x="970.8" y="261" width="0.1" height="15.0" fill="rgb(244,56,26)" rx="2" ry="2" />
<text  x="973.78" y="271.5" ></text>
</g>
<g >
<title>scythedb::CondVar::~CondVar (12 samples, 0.01%)</title><rect x="857.5" y="293" width="0.1" height="15.0" fill="rgb(251,57,21)" rx="2" ry="2" />
<text  x="860.48" y="303.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;*&gt; (17 samples, 0.01%)</title><rect x="146.2" y="53" width="0.1" height="15.0" fill="rgb(247,184,3)" rx="2" ry="2" />
<text  x="149.17" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (68 samples, 0.05%)</title><rect x="119.4" y="261" width="0.6" height="15.0" fill="rgb(242,180,30)" rx="2" ry="2" />
<text  x="122.36" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Equal (144 samples, 0.11%)</title><rect x="160.7" y="277" width="1.3" height="15.0" fill="rgb(253,73,5)" rx="2" ry="2" />
<text  x="163.73" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::AllocateAligned (43 samples, 0.03%)</title><rect x="424.2" y="229" width="0.4" height="15.0" fill="rgb(238,193,15)" rx="2" ry="2" />
<text  x="427.24" y="239.5" ></text>
</g>
<g >
<title>std::mersenne_twister_engine&lt;unsigned long, 64ul, 312ul, 156ul, 31ul, 13043109905998158313ul, 29ul, 6148914691236517205ul, 17ul, 8202884508482404352ul, 37ul, 18444473444759240704ul, 43ul, 6364136223846793005ul&gt;::operator (75 samples, 0.06%)</title><rect x="1042.8" y="229" width="0.7" height="15.0" fill="rgb(246,45,38)" rx="2" ry="2" />
<text  x="1045.81" y="239.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Put (3,039 samples, 2.32%)</title><rect x="995.7" y="309" width="27.4" height="15.0" fill="rgb(238,82,30)" rx="2" ry="2" />
<text  x="998.72" y="319.5" >s..</text>
</g>
<g >
<title>std::function&lt;int  (14,499 samples, 11.07%)</title><rect x="277.1" y="245" width="130.6" height="15.0" fill="rgb(253,49,40)" rx="2" ry="2" />
<text  x="280.11" y="255.5" >std::function&lt;int </text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (16 samples, 0.01%)</title><rect x="157.1" y="181" width="0.2" height="15.0" fill="rgb(223,180,6)" rx="2" ry="2" />
<text  x="160.14" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (158 samples, 0.12%)</title><rect x="861.0" y="165" width="1.4" height="15.0" fill="rgb(252,53,44)" rx="2" ry="2" />
<text  x="863.96" y="175.5" ></text>
</g>
<g >
<title>ulog_inc_gen_num (12 samples, 0.01%)</title><rect x="1116.2" y="581" width="0.1" height="15.0" fill="rgb(244,199,18)" rx="2" ry="2" />
<text  x="1119.19" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (36 samples, 0.03%)</title><rect x="445.9" y="277" width="0.3" height="15.0" fill="rgb(239,148,32)" rx="2" ry="2" />
<text  x="448.89" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (60 samples, 0.05%)</title><rect x="842.4" y="197" width="0.6" height="15.0" fill="rgb(228,12,24)" rx="2" ry="2" />
<text  x="845.44" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (533 samples, 0.41%)</title><rect x="932.1" y="293" width="4.8" height="15.0" fill="rgb(249,149,44)" rx="2" ry="2" />
<text  x="935.06" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (12 samples, 0.01%)</title><rect x="115.8" y="325" width="0.1" height="15.0" fill="rgb(208,103,3)" rx="2" ry="2" />
<text  x="118.82" y="335.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (59 samples, 0.05%)</title><rect x="908.7" y="277" width="0.6" height="15.0" fill="rgb(240,24,43)" rx="2" ry="2" />
<text  x="911.73" y="287.5" ></text>
</g>
<g >
<title>scythedb::Hash64 (211 samples, 0.16%)</title><rect x="855.0" y="261" width="1.9" height="15.0" fill="rgb(248,5,43)" rx="2" ry="2" />
<text  x="857.96" y="271.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (18 samples, 0.01%)</title><rect x="20.7" y="437" width="0.1" height="15.0" fill="rgb(242,150,54)" rx="2" ry="2" />
<text  x="23.66" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (16 samples, 0.01%)</title><rect x="432.7" y="261" width="0.1" height="15.0" fill="rgb(225,67,2)" rx="2" ry="2" />
<text  x="435.66" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,664 samples, 1.27%)</title><rect x="135.8" y="245" width="15.0" height="15.0" fill="rgb(211,208,24)" rx="2" ry="2" />
<text  x="138.79" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (16 samples, 0.01%)</title><rect x="989.8" y="181" width="0.2" height="15.0" fill="rgb(252,18,12)" rx="2" ry="2" />
<text  x="992.81" y="191.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (393 samples, 0.30%)</title><rect x="830.9" y="293" width="3.5" height="15.0" fill="rgb(243,184,18)" rx="2" ry="2" />
<text  x="833.86" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (288 samples, 0.22%)</title><rect x="427.2" y="277" width="2.6" height="15.0" fill="rgb(240,105,15)" rx="2" ry="2" />
<text  x="430.19" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;ycsbc::Operation, double&gt;, std::allocator&lt;std::pair&lt;ycsbc::Operation, double&gt; &gt; &gt;::cend (13 samples, 0.01%)</title><rect x="1065.4" y="293" width="0.1" height="15.0" fill="rgb(248,77,8)" rx="2" ry="2" />
<text  x="1068.36" y="303.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Scramble (55 samples, 0.04%)</title><rect x="990.7" y="277" width="0.5" height="15.0" fill="rgb(245,82,30)" rx="2" ry="2" />
<text  x="993.69" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::AllocateAligned (56 samples, 0.04%)</title><rect x="424.7" y="213" width="0.5" height="15.0" fill="rgb(241,85,30)" rx="2" ry="2" />
<text  x="427.69" y="223.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (33 samples, 0.03%)</title><rect x="283.6" y="181" width="0.3" height="15.0" fill="rgb(227,147,13)" rx="2" ry="2" />
<text  x="286.64" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (34 samples, 0.03%)</title><rect x="141.1" y="181" width="0.3" height="15.0" fill="rgb(226,11,25)" rx="2" ry="2" />
<text  x="144.10" y="191.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Dequeue (29,176 samples, 22.27%)</title><rect x="455.8" y="357" width="262.8" height="15.0" fill="rgb(251,167,45)" rx="2" ry="2" />
<text  x="458.84" y="367.5" >scythedb::Queue&lt;std::shared_ptr&lt;scy..</text>
</g>
<g >
<title>scythedb::Mutex::Mutex (60 samples, 0.05%)</title><rect x="857.6" y="293" width="0.5" height="15.0" fill="rgb(207,143,40)" rx="2" ry="2" />
<text  x="860.58" y="303.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (26,974 samples, 20.59%)</title><rect x="825.3" y="565" width="243.0" height="15.0" fill="rgb(215,70,21)" rx="2" ry="2" />
<text  x="828.33" y="575.5" >std::call_once&lt;void </text>
</g>
<g >
<title>msort_with_tmp.part.0 (499 samples, 0.38%)</title><rect x="1151.4" y="597" width="4.5" height="15.0" fill="rgb(208,174,6)" rx="2" ry="2" />
<text  x="1154.42" y="607.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (18 samples, 0.01%)</title><rect x="1034.1" y="261" width="0.2" height="15.0" fill="rgb(246,209,49)" rx="2" ry="2" />
<text  x="1037.12" y="271.5" ></text>
</g>
<g >
<title>XXH64_avalanche (22 samples, 0.02%)</title><rect x="1009.4" y="181" width="0.2" height="15.0" fill="rgb(229,68,39)" rx="2" ry="2" />
<text  x="1012.39" y="191.5" ></text>
</g>
<g >
<title>__GI___qsort_r (103 samples, 0.08%)</title><rect x="812.5" y="549" width="0.9" height="15.0" fill="rgb(235,224,25)" rx="2" ry="2" />
<text  x="815.49" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (16 samples, 0.01%)</title><rect x="941.6" y="325" width="0.2" height="15.0" fill="rgb(225,219,17)" rx="2" ry="2" />
<text  x="944.62" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (364 samples, 0.28%)</title><rect x="912.6" y="197" width="3.3" height="15.0" fill="rgb(216,211,37)" rx="2" ry="2" />
<text  x="915.60" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair (17 samples, 0.01%)</title><rect x="145.9" y="37" width="0.2" height="15.0" fill="rgb(228,67,14)" rx="2" ry="2" />
<text  x="148.94" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (20 samples, 0.02%)</title><rect x="445.5" y="245" width="0.2" height="15.0" fill="rgb(240,6,31)" rx="2" ry="2" />
<text  x="448.51" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (319 samples, 0.24%)</title><rect x="805.0" y="565" width="2.8" height="15.0" fill="rgb(253,19,32)" rx="2" ry="2" />
<text  x="807.97" y="575.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (25 samples, 0.02%)</title><rect x="276.9" y="245" width="0.2" height="15.0" fill="rgb(234,102,29)" rx="2" ry="2" />
<text  x="279.89" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (46 samples, 0.04%)</title><rect x="900.5" y="309" width="0.5" height="15.0" fill="rgb(249,107,17)" rx="2" ry="2" />
<text  x="903.54" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;scythedb::Slice*, scythedb::Slice*, std::allocator&lt;scythedb::Slice&gt; &gt; (208 samples, 0.16%)</title><rect x="128.6" y="277" width="1.9" height="15.0" fill="rgb(205,27,1)" rx="2" ry="2" />
<text  x="131.65" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (124 samples, 0.09%)</title><rect x="927.8" y="245" width="1.2" height="15.0" fill="rgb(229,218,42)" rx="2" ry="2" />
<text  x="930.84" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (53 samples, 0.04%)</title><rect x="923.6" y="261" width="0.5" height="15.0" fill="rgb(236,122,30)" rx="2" ry="2" />
<text  x="926.65" y="271.5" ></text>
</g>
<g >
<title>scythedb::DecodeFixed64 (15 samples, 0.01%)</title><rect x="395.8" y="165" width="0.2" height="15.0" fill="rgb(235,6,19)" rx="2" ry="2" />
<text  x="398.83" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (77 samples, 0.06%)</title><rect x="901.7" y="261" width="0.7" height="15.0" fill="rgb(229,99,33)" rx="2" ry="2" />
<text  x="904.66" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (98 samples, 0.07%)</title><rect x="916.9" y="277" width="0.9" height="15.0" fill="rgb(243,203,40)" rx="2" ry="2" />
<text  x="919.93" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (21 samples, 0.02%)</title><rect x="922.5" y="229" width="0.2" height="15.0" fill="rgb(209,13,41)" rx="2" ry="2" />
<text  x="925.54" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (18 samples, 0.01%)</title><rect x="905.5" y="245" width="0.2" height="15.0" fill="rgb(246,59,24)" rx="2" ry="2" />
<text  x="908.54" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_check_len (100 samples, 0.08%)</title><rect x="130.8" y="277" width="0.9" height="15.0" fill="rgb(209,146,40)" rx="2" ry="2" />
<text  x="133.85" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (20 samples, 0.02%)</title><rect x="449.2" y="341" width="0.2" height="15.0" fill="rgb(209,118,13)" rx="2" ry="2" />
<text  x="452.19" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="897.1" y="261" width="0.1" height="15.0" fill="rgb(215,212,12)" rx="2" ry="2" />
<text  x="900.10" y="271.5" ></text>
</g>
<g >
<title>malloc (900 samples, 0.69%)</title><rect x="1143.0" y="597" width="8.1" height="15.0" fill="rgb(216,142,31)" rx="2" ry="2" />
<text  x="1146.01" y="607.5" ></text>
</g>
<g >
<title>palloc_reservation_create (445 samples, 0.34%)</title><rect x="1086.6" y="581" width="4.0" height="15.0" fill="rgb(216,41,17)" rx="2" ry="2" />
<text  x="1089.60" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (19 samples, 0.01%)</title><rect x="929.3" y="277" width="0.2" height="15.0" fill="rgb(208,169,13)" rx="2" ry="2" />
<text  x="932.32" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (24 samples, 0.02%)</title><rect x="449.5" y="325" width="0.2" height="15.0" fill="rgb(231,42,13)" rx="2" ry="2" />
<text  x="452.51" y="335.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (14 samples, 0.01%)</title><rect x="865.4" y="245" width="0.1" height="15.0" fill="rgb(219,132,10)" rx="2" ry="2" />
<text  x="868.42" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (75 samples, 0.06%)</title><rect x="1016.2" y="165" width="0.7" height="15.0" fill="rgb(235,67,40)" rx="2" ry="2" />
<text  x="1019.24" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (40 samples, 0.03%)</title><rect x="1005.3" y="229" width="0.3" height="15.0" fill="rgb(238,133,1)" rx="2" ry="2" />
<text  x="1008.26" y="239.5" ></text>
</g>
<g >
<title>obj_norep_flush (1,306 samples, 1.00%)</title><rect x="1074.0" y="581" width="11.7" height="15.0" fill="rgb(237,23,29)" rx="2" ry="2" />
<text  x="1076.96" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (134 samples, 0.10%)</title><rect x="724.1" y="277" width="1.2" height="15.0" fill="rgb(254,176,34)" rx="2" ry="2" />
<text  x="727.14" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (15 samples, 0.01%)</title><rect x="159.8" y="229" width="0.1" height="15.0" fill="rgb(248,196,30)" rx="2" ry="2" />
<text  x="162.80" y="239.5" ></text>
</g>
<g >
<title>operator delete (20 samples, 0.02%)</title><rect x="931.2" y="229" width="0.2" height="15.0" fill="rgb(208,157,28)" rx="2" ry="2" />
<text  x="934.18" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (12 samples, 0.01%)</title><rect x="925.9" y="197" width="0.1" height="15.0" fill="rgb(252,76,31)" rx="2" ry="2" />
<text  x="928.88" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (63 samples, 0.05%)</title><rect x="886.4" y="309" width="0.6" height="15.0" fill="rgb(238,220,29)" rx="2" ry="2" />
<text  x="889.41" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (31 samples, 0.02%)</title><rect x="145.3" y="69" width="0.3" height="15.0" fill="rgb(217,83,34)" rx="2" ry="2" />
<text  x="148.32" y="79.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::wait (19 samples, 0.01%)</title><rect x="777.6" y="485" width="0.1" height="15.0" fill="rgb(246,114,43)" rx="2" ry="2" />
<text  x="780.55" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (12 samples, 0.01%)</title><rect x="826.7" y="341" width="0.1" height="15.0" fill="rgb(248,133,48)" rx="2" ry="2" />
<text  x="829.66" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (157 samples, 0.12%)</title><rect x="927.7" y="261" width="1.4" height="15.0" fill="rgb(232,16,41)" rx="2" ry="2" />
<text  x="930.71" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector@plt (13 samples, 0.01%)</title><rect x="942.0" y="325" width="0.2" height="15.0" fill="rgb(231,60,6)" rx="2" ry="2" />
<text  x="945.05" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (638 samples, 0.49%)</title><rect x="911.0" y="261" width="5.7" height="15.0" fill="rgb(214,169,36)" rx="2" ry="2" />
<text  x="913.97" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (27 samples, 0.02%)</title><rect x="1036.5" y="149" width="0.2" height="15.0" fill="rgb(216,109,4)" rx="2" ry="2" />
<text  x="1039.46" y="159.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19 samples, 0.01%)</title><rect x="432.2" y="229" width="0.1" height="15.0" fill="rgb(222,227,29)" rx="2" ry="2" />
<text  x="435.18" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="1002.5" y="197" width="0.1" height="15.0" fill="rgb(206,173,18)" rx="2" ry="2" />
<text  x="1005.45" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (19 samples, 0.01%)</title><rect x="916.4" y="213" width="0.2" height="15.0" fill="rgb(205,168,39)" rx="2" ry="2" />
<text  x="919.40" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (83,134 samples, 63.46%)</title><rect x="28.7" y="453" width="748.9" height="15.0" fill="rgb(229,31,44)" rx="2" ry="2" />
<text  x="31.72" y="463.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (25 samples, 0.02%)</title><rect x="1047.0" y="229" width="0.2" height="15.0" fill="rgb(219,107,4)" rx="2" ry="2" />
<text  x="1049.99" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (16 samples, 0.01%)</title><rect x="981.0" y="261" width="0.1" height="15.0" fill="rgb(225,199,15)" rx="2" ry="2" />
<text  x="983.96" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (45 samples, 0.03%)</title><rect x="865.8" y="277" width="0.4" height="15.0" fill="rgb(208,20,1)" rx="2" ry="2" />
<text  x="868.82" y="287.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (28 samples, 0.02%)</title><rect x="141.6" y="149" width="0.2" height="15.0" fill="rgb(235,36,36)" rx="2" ry="2" />
<text  x="144.56" y="159.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (210 samples, 0.16%)</title><rect x="860.5" y="229" width="1.9" height="15.0" fill="rgb(233,1,6)" rx="2" ry="2" />
<text  x="863.53" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (108 samples, 0.08%)</title><rect x="105.0" y="181" width="1.0" height="15.0" fill="rgb(215,72,16)" rx="2" ry="2" />
<text  x="107.99" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (62 samples, 0.05%)</title><rect x="925.6" y="229" width="0.5" height="15.0" fill="rgb(219,72,54)" rx="2" ry="2" />
<text  x="928.56" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::AssignQueue (138 samples, 0.11%)</title><rect x="953.0" y="277" width="1.2" height="15.0" fill="rgb(205,212,43)" rx="2" ry="2" />
<text  x="955.97" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (228 samples, 0.17%)</title><rect x="403.9" y="213" width="2.0" height="15.0" fill="rgb(232,177,4)" rx="2" ry="2" />
<text  x="406.87" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (52 samples, 0.04%)</title><rect x="120.5" y="277" width="0.5" height="15.0" fill="rgb(210,136,29)" rx="2" ry="2" />
<text  x="123.54" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (15 samples, 0.01%)</title><rect x="1035.7" y="197" width="0.1" height="15.0" fill="rgb(220,194,47)" rx="2" ry="2" />
<text  x="1038.66" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (18 samples, 0.01%)</title><rect x="448.5" y="309" width="0.2" height="15.0" fill="rgb(228,213,42)" rx="2" ry="2" />
<text  x="451.49" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (46 samples, 0.04%)</title><rect x="923.7" y="245" width="0.4" height="15.0" fill="rgb(236,62,14)" rx="2" ry="2" />
<text  x="926.69" y="255.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (192 samples, 0.15%)</title><rect x="938.4" y="325" width="1.7" height="15.0" fill="rgb(254,206,47)" rx="2" ry="2" />
<text  x="941.36" y="335.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (27 samples, 0.02%)</title><rect x="423.8" y="245" width="0.3" height="15.0" fill="rgb(222,158,35)" rx="2" ry="2" />
<text  x="426.83" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (26,835 samples, 20.48%)</title><rect x="166.0" y="261" width="241.7" height="15.0" fill="rgb(217,179,35)" rx="2" ry="2" />
<text  x="168.99" y="271.5" >scythedb::NVMSkipList::KeyIsAfte..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (268 samples, 0.20%)</title><rect x="112.4" y="277" width="2.4" height="15.0" fill="rgb(232,177,40)" rx="2" ry="2" />
<text  x="115.37" y="287.5" ></text>
</g>
<g >
<title>ulog_free_next (646 samples, 0.49%)</title><rect x="816.6" y="565" width="5.9" height="15.0" fill="rgb(209,154,5)" rx="2" ry="2" />
<text  x="819.64" y="575.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::vector (16 samples, 0.01%)</title><rect x="454.8" y="341" width="0.2" height="15.0" fill="rgb(245,75,3)" rx="2" ry="2" />
<text  x="457.81" y="351.5" ></text>
</g>
<g >
<title>__pthread_mutex_destroy (17 samples, 0.01%)</title><rect x="998.4" y="277" width="0.2" height="15.0" fill="rgb(233,30,13)" rx="2" ry="2" />
<text  x="1001.41" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (150 samples, 0.11%)</title><rect x="965.8" y="133" width="1.4" height="15.0" fill="rgb(236,145,37)" rx="2" ry="2" />
<text  x="968.82" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (164 samples, 0.13%)</title><rect x="938.5" y="309" width="1.5" height="15.0" fill="rgb(210,200,34)" rx="2" ry="2" />
<text  x="941.49" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (370 samples, 0.28%)</title><rect x="143.1" y="101" width="3.4" height="15.0" fill="rgb(213,184,51)" rx="2" ry="2" />
<text  x="146.13" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (71 samples, 0.05%)</title><rect x="1029.6" y="261" width="0.6" height="15.0" fill="rgb(250,222,32)" rx="2" ry="2" />
<text  x="1032.58" y="271.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (33 samples, 0.03%)</title><rect x="141.1" y="149" width="0.3" height="15.0" fill="rgb(209,8,26)" rx="2" ry="2" />
<text  x="144.11" y="159.5" ></text>
</g>
<g >
<title>std::_Construct&lt;scythedb::Slice, scythedb::Slice&gt; (12 samples, 0.01%)</title><rect x="129.7" y="213" width="0.2" height="15.0" fill="rgb(245,33,18)" rx="2" ry="2" />
<text  x="132.75" y="223.5" ></text>
</g>
<g >
<title>__lll_lock_wait (77 samples, 0.06%)</title><rect x="1054.2" y="213" width="0.7" height="15.0" fill="rgb(238,160,30)" rx="2" ry="2" />
<text  x="1057.21" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (514 samples, 0.39%)</title><rect x="1156.5" y="581" width="4.6" height="15.0" fill="rgb(235,201,1)" rx="2" ry="2" />
<text  x="1159.49" y="591.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (26 samples, 0.02%)</title><rect x="849.4" y="277" width="0.2" height="15.0" fill="rgb(228,129,21)" rx="2" ry="2" />
<text  x="852.41" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="987.9" y="229" width="0.2" height="15.0" fill="rgb(206,143,0)" rx="2" ry="2" />
<text  x="990.86" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (130 samples, 0.10%)</title><rect x="988.9" y="229" width="1.2" height="15.0" fill="rgb(230,114,48)" rx="2" ry="2" />
<text  x="991.92" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (156 samples, 0.12%)</title><rect x="1035.8" y="197" width="1.4" height="15.0" fill="rgb(225,35,8)" rx="2" ry="2" />
<text  x="1038.84" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (168 samples, 0.13%)</title><rect x="976.8" y="245" width="1.5" height="15.0" fill="rgb(210,105,51)" rx="2" ry="2" />
<text  x="979.75" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="533" width="768.5" height="15.0" fill="rgb(245,187,39)" rx="2" ry="2" />
<text  x="13.14" y="543.5" >std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (15 samples, 0.01%)</title><rect x="42.6" y="245" width="0.1" height="15.0" fill="rgb(244,62,38)" rx="2" ry="2" />
<text  x="45.55" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (109 samples, 0.08%)</title><rect x="1041.5" y="277" width="1.0" height="15.0" fill="rgb(236,104,45)" rx="2" ry="2" />
<text  x="1044.53" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (26 samples, 0.02%)</title><rect x="985.4" y="213" width="0.2" height="15.0" fill="rgb(228,71,42)" rx="2" ry="2" />
<text  x="988.36" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::back (29 samples, 0.02%)</title><rect x="132.0" y="293" width="0.3" height="15.0" fill="rgb(242,108,36)" rx="2" ry="2" />
<text  x="135.02" y="303.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::thread (85,197 samples, 65.04%)</title><rect x="10.1" y="485" width="767.5" height="15.0" fill="rgb(253,192,24)" rx="2" ry="2" />
<text  x="13.14" y="495.5" >scythedb::RepeatableThread::thread</text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (98 samples, 0.07%)</title><rect x="161.0" y="229" width="0.9" height="15.0" fill="rgb(212,28,30)" rx="2" ry="2" />
<text  x="163.98" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (27 samples, 0.02%)</title><rect x="926.5" y="229" width="0.3" height="15.0" fill="rgb(235,41,40)" rx="2" ry="2" />
<text  x="929.54" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="1041.3" y="229" width="0.2" height="15.0" fill="rgb(208,229,4)" rx="2" ry="2" />
<text  x="1044.32" y="239.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_allocate (14 samples, 0.01%)</title><rect x="42.3" y="277" width="0.1" height="15.0" fill="rgb(244,221,7)" rx="2" ry="2" />
<text  x="45.29" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (12 samples, 0.01%)</title><rect x="1031.6" y="261" width="0.1" height="15.0" fill="rgb(214,138,50)" rx="2" ry="2" />
<text  x="1034.61" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (14 samples, 0.01%)</title><rect x="111.7" y="309" width="0.1" height="15.0" fill="rgb(249,197,37)" rx="2" ry="2" />
<text  x="114.72" y="319.5" ></text>
</g>
<g >
<title>pmemobj_tx_get_user_data (19 samples, 0.01%)</title><rect x="151.4" y="261" width="0.2" height="15.0" fill="rgb(239,210,21)" rx="2" ry="2" />
<text  x="154.45" y="271.5" ></text>
</g>
<g >
<title>palloc_reservation_clear (15 samples, 0.01%)</title><rect x="1086.5" y="581" width="0.1" height="15.0" fill="rgb(240,134,47)" rx="2" ry="2" />
<text  x="1089.47" y="591.5" ></text>
</g>
<g >
<title>scythedb::EncodeVarint32 (31 samples, 0.02%)</title><rect x="837.5" y="245" width="0.3" height="15.0" fill="rgb(205,63,22)" rx="2" ry="2" />
<text  x="840.50" y="255.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (68 samples, 0.05%)</title><rect x="875.4" y="213" width="0.7" height="15.0" fill="rgb(240,64,23)" rx="2" ry="2" />
<text  x="878.45" y="223.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (2,610 samples, 1.99%)</title><rect x="77.1" y="213" width="23.5" height="15.0" fill="rgb(252,92,11)" rx="2" ry="2" />
<text  x="80.09" y="223.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="438.6" y="245" width="0.1" height="15.0" fill="rgb(238,116,36)" rx="2" ry="2" />
<text  x="441.59" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (152 samples, 0.12%)</title><rect x="979.5" y="261" width="1.3" height="15.0" fill="rgb(241,133,29)" rx="2" ry="2" />
<text  x="982.48" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (58 samples, 0.04%)</title><rect x="948.0" y="213" width="0.5" height="15.0" fill="rgb(242,210,29)" rx="2" ry="2" />
<text  x="950.97" y="223.5" ></text>
</g>
<g >
<title>palloc_exec_actions (195 samples, 0.15%)</title><rect x="812.3" y="565" width="1.8" height="15.0" fill="rgb(242,143,0)" rx="2" ry="2" />
<text  x="815.30" y="575.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::push_back (815 samples, 0.62%)</title><rect x="142.6" y="181" width="7.4" height="15.0" fill="rgb(218,58,11)" rx="2" ry="2" />
<text  x="145.61" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (277 samples, 0.21%)</title><rect x="430.9" y="293" width="2.5" height="15.0" fill="rgb(213,6,9)" rx="2" ry="2" />
<text  x="433.91" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (18 samples, 0.01%)</title><rect x="771.5" y="373" width="0.2" height="15.0" fill="rgb(209,59,13)" rx="2" ry="2" />
<text  x="774.54" y="383.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (533 samples, 0.41%)</title><rect x="171.2" y="213" width="4.8" height="15.0" fill="rgb(247,141,31)" rx="2" ry="2" />
<text  x="174.20" y="223.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;ycsbc::Operation, double&gt; const*, std::vector&lt;std::pair&lt;ycsbc::Operation, double&gt;, std::allocator&lt;std::pair&lt;ycsbc::Operation, double&gt; &gt; &gt; &gt; (20 samples, 0.02%)</title><rect x="1058.9" y="293" width="0.2" height="15.0" fill="rgb(211,118,54)" rx="2" ry="2" />
<text  x="1061.92" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (15 samples, 0.01%)</title><rect x="1047.6" y="229" width="0.1" height="15.0" fill="rgb(213,73,10)" rx="2" ry="2" />
<text  x="1050.60" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (20 samples, 0.02%)</title><rect x="883.4" y="277" width="0.2" height="15.0" fill="rgb(239,55,43)" rx="2" ry="2" />
<text  x="886.39" y="287.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (235 samples, 0.18%)</title><rect x="393.7" y="149" width="2.1" height="15.0" fill="rgb(230,222,45)" rx="2" ry="2" />
<text  x="396.71" y="159.5" ></text>
</g>
<g >
<title>std::operator&amp; (2,167 samples, 1.65%)</title><rect x="687.4" y="309" width="19.5" height="15.0" fill="rgb(249,216,40)" rx="2" ry="2" />
<text  x="690.39" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18 samples, 0.01%)</title><rect x="901.9" y="213" width="0.2" height="15.0" fill="rgb(218,213,12)" rx="2" ry="2" />
<text  x="904.94" y="223.5" ></text>
</g>
<g >
<title>std::move&lt;void  (14 samples, 0.01%)</title><rect x="852.1" y="229" width="0.2" height="15.0" fill="rgb(243,206,51)" rx="2" ry="2" />
<text  x="855.14" y="239.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (20 samples, 0.02%)</title><rect x="157.6" y="165" width="0.2" height="15.0" fill="rgb(234,72,20)" rx="2" ry="2" />
<text  x="160.59" y="175.5" ></text>
</g>
<g >
<title>__tls_get_addr (109 samples, 0.08%)</title><rect x="1068.3" y="581" width="1.0" height="15.0" fill="rgb(215,11,41)" rx="2" ry="2" />
<text  x="1071.30" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (58 samples, 0.04%)</title><rect x="848.2" y="245" width="0.5" height="15.0" fill="rgb(215,164,42)" rx="2" ry="2" />
<text  x="851.22" y="255.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (786 samples, 0.60%)</title><rect x="268.9" y="197" width="7.1" height="15.0" fill="rgb(214,11,35)" rx="2" ry="2" />
<text  x="271.95" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (21 samples, 0.02%)</title><rect x="773.1" y="405" width="0.2" height="15.0" fill="rgb(253,192,11)" rx="2" ry="2" />
<text  x="776.14" y="415.5" ></text>
</g>
<g >
<title>utils::RandomDouble (99 samples, 0.08%)</title><rect x="993.9" y="245" width="0.9" height="15.0" fill="rgb(212,215,31)" rx="2" ry="2" />
<text  x="996.86" y="255.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (19 samples, 0.01%)</title><rect x="795.4" y="549" width="0.1" height="15.0" fill="rgb(206,95,2)" rx="2" ry="2" />
<text  x="798.38" y="559.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoInsert (12,565 samples, 9.59%)</title><rect x="827.0" y="341" width="113.2" height="15.0" fill="rgb(213,185,36)" rx="2" ry="2" />
<text  x="830.01" y="351.5" >ycsbc::Client..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (18 samples, 0.01%)</title><rect x="975.9" y="245" width="0.1" height="15.0" fill="rgb(236,75,2)" rx="2" ry="2" />
<text  x="978.85" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (12 samples, 0.01%)</title><rect x="976.5" y="181" width="0.1" height="15.0" fill="rgb(236,74,18)" rx="2" ry="2" />
<text  x="979.54" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (94 samples, 0.07%)</title><rect x="438.0" y="261" width="0.8" height="15.0" fill="rgb(235,138,8)" rx="2" ry="2" />
<text  x="440.97" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::max_size (13 samples, 0.01%)</title><rect x="131.3" y="245" width="0.1" height="15.0" fill="rgb(249,48,9)" rx="2" ry="2" />
<text  x="134.32" y="255.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.01%)</title><rect x="128.3" y="245" width="0.2" height="15.0" fill="rgb(219,161,23)" rx="2" ry="2" />
<text  x="131.33" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (50 samples, 0.04%)</title><rect x="447.7" y="277" width="0.4" height="15.0" fill="rgb(218,86,27)" rx="2" ry="2" />
<text  x="450.69" y="287.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (51 samples, 0.04%)</title><rect x="149.3" y="101" width="0.5" height="15.0" fill="rgb(251,64,5)" rx="2" ry="2" />
<text  x="152.35" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (137 samples, 0.10%)</title><rect x="841.8" y="213" width="1.2" height="15.0" fill="rgb(238,88,24)" rx="2" ry="2" />
<text  x="844.79" y="223.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (87 samples, 0.07%)</title><rect x="956.4" y="181" width="0.7" height="15.0" fill="rgb(228,184,21)" rx="2" ry="2" />
<text  x="959.35" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (13 samples, 0.01%)</title><rect x="773.3" y="405" width="0.1" height="15.0" fill="rgb(214,30,42)" rx="2" ry="2" />
<text  x="776.33" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (274 samples, 0.21%)</title><rect x="964.7" y="197" width="2.5" height="15.0" fill="rgb(235,211,13)" rx="2" ry="2" />
<text  x="967.75" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (24 samples, 0.02%)</title><rect x="160.5" y="277" width="0.2" height="15.0" fill="rgb(233,71,7)" rx="2" ry="2" />
<text  x="163.45" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (46 samples, 0.04%)</title><rect x="1128.7" y="597" width="0.4" height="15.0" fill="rgb(220,119,23)" rx="2" ry="2" />
<text  x="1131.66" y="607.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (13 samples, 0.01%)</title><rect x="857.9" y="277" width="0.2" height="15.0" fill="rgb(235,45,51)" rx="2" ry="2" />
<text  x="860.94" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (66 samples, 0.05%)</title><rect x="1016.3" y="149" width="0.6" height="15.0" fill="rgb(226,222,52)" rx="2" ry="2" />
<text  x="1019.30" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (39 samples, 0.03%)</title><rect x="922.1" y="245" width="0.3" height="15.0" fill="rgb(212,130,49)" rx="2" ry="2" />
<text  x="925.07" y="255.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::operator++ (89 samples, 0.07%)</title><rect x="1007.9" y="261" width="0.8" height="15.0" fill="rgb(227,118,16)" rx="2" ry="2" />
<text  x="1010.89" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (447 samples, 0.34%)</title><rect x="970.5" y="277" width="4.0" height="15.0" fill="rgb(239,1,37)" rx="2" ry="2" />
<text  x="973.49" y="287.5" ></text>
</g>
<g >
<title>tx_flush_range (27 samples, 0.02%)</title><rect x="1113.8" y="581" width="0.2" height="15.0" fill="rgb(231,55,9)" rx="2" ry="2" />
<text  x="1116.78" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14 samples, 0.01%)</title><rect x="985.6" y="213" width="0.2" height="15.0" fill="rgb(235,156,18)" rx="2" ry="2" />
<text  x="988.64" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (15 samples, 0.01%)</title><rect x="849.3" y="229" width="0.1" height="15.0" fill="rgb(246,196,10)" rx="2" ry="2" />
<text  x="852.27" y="239.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (26,974 samples, 20.59%)</title><rect x="825.3" y="421" width="243.0" height="15.0" fill="rgb(218,147,47)" rx="2" ry="2" />
<text  x="828.33" y="431.5" >std::thread::_Invoker&lt;std::tuple..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="914.0" y="149" width="0.1" height="15.0" fill="rgb(242,66,44)" rx="2" ry="2" />
<text  x="917.03" y="159.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (281 samples, 0.21%)</title><rect x="959.7" y="245" width="2.6" height="15.0" fill="rgb(220,25,11)" rx="2" ry="2" />
<text  x="962.72" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13 samples, 0.01%)</title><rect x="1031.7" y="261" width="0.1" height="15.0" fill="rgb(210,53,16)" rx="2" ry="2" />
<text  x="1034.72" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (222 samples, 0.17%)</title><rect x="988.4" y="277" width="2.0" height="15.0" fill="rgb(231,126,45)" rx="2" ry="2" />
<text  x="991.42" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (14 samples, 0.01%)</title><rect x="422.5" y="69" width="0.1" height="15.0" fill="rgb(231,7,47)" rx="2" ry="2" />
<text  x="425.49" y="79.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::Process (81,585 samples, 62.28%)</title><rect x="35.9" y="373" width="734.9" height="15.0" fill="rgb(239,149,40)" rx="2" ry="2" />
<text  x="38.89" y="383.5" >scythedb::(anonymous namespace)::NVMBlockProcessor::Process</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (52 samples, 0.04%)</title><rect x="1023.8" y="293" width="0.5" height="15.0" fill="rgb(243,19,49)" rx="2" ry="2" />
<text  x="1026.79" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;int&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;int  (26,974 samples, 20.59%)</title><rect x="825.3" y="437" width="243.0" height="15.0" fill="rgb(245,190,26)" rx="2" ry="2" />
<text  x="828.33" y="447.5" >std::__future_base::_Task_setter..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (33 samples, 0.03%)</title><rect x="1030.3" y="245" width="0.3" height="15.0" fill="rgb(253,82,32)" rx="2" ry="2" />
<text  x="1033.28" y="255.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (520 samples, 0.40%)</title><rect x="1017.6" y="277" width="4.7" height="15.0" fill="rgb(220,174,26)" rx="2" ry="2" />
<text  x="1020.60" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (12 samples, 0.01%)</title><rect x="446.5" y="277" width="0.1" height="15.0" fill="rgb(245,85,47)" rx="2" ry="2" />
<text  x="449.50" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (13 samples, 0.01%)</title><rect x="930.1" y="277" width="0.1" height="15.0" fill="rgb(222,38,33)" rx="2" ry="2" />
<text  x="933.08" y="287.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (33 samples, 0.03%)</title><rect x="403.3" y="181" width="0.3" height="15.0" fill="rgb(226,183,42)" rx="2" ry="2" />
<text  x="406.33" y="191.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (22 samples, 0.02%)</title><rect x="1040.8" y="261" width="0.2" height="15.0" fill="rgb(213,67,36)" rx="2" ry="2" />
<text  x="1043.78" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (123 samples, 0.09%)</title><rect x="154.2" y="277" width="1.1" height="15.0" fill="rgb(243,219,26)" rx="2" ry="2" />
<text  x="157.23" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (47 samples, 0.04%)</title><rect x="434.9" y="277" width="0.5" height="15.0" fill="rgb(233,71,50)" rx="2" ry="2" />
<text  x="437.93" y="287.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread (85,316 samples, 65.13%)</title><rect x="10.1" y="517" width="768.5" height="15.0" fill="rgb(209,43,46)" rx="2" ry="2" />
<text  x="13.14" y="527.5" >std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (139 samples, 0.11%)</title><rect x="984.9" y="277" width="1.2" height="15.0" fill="rgb(218,227,12)" rx="2" ry="2" />
<text  x="987.89" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (15 samples, 0.01%)</title><rect x="1039.3" y="245" width="0.1" height="15.0" fill="rgb(248,205,15)" rx="2" ry="2" />
<text  x="1042.26" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (20 samples, 0.02%)</title><rect x="848.5" y="229" width="0.2" height="15.0" fill="rgb(254,87,12)" rx="2" ry="2" />
<text  x="851.51" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (19 samples, 0.01%)</title><rect x="1014.9" y="245" width="0.1" height="15.0" fill="rgb(226,163,17)" rx="2" ry="2" />
<text  x="1017.86" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (140 samples, 0.11%)</title><rect x="1000.0" y="229" width="1.3" height="15.0" fill="rgb(217,28,53)" rx="2" ry="2" />
<text  x="1003.03" y="239.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (16 samples, 0.01%)</title><rect x="901.0" y="293" width="0.1" height="15.0" fill="rgb(207,177,50)" rx="2" ry="2" />
<text  x="904.00" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (75 samples, 0.06%)</title><rect x="1126.5" y="597" width="0.7" height="15.0" fill="rgb(215,96,35)" rx="2" ry="2" />
<text  x="1129.54" y="607.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (84 samples, 0.06%)</title><rect x="914.6" y="133" width="0.7" height="15.0" fill="rgb(208,187,25)" rx="2" ry="2" />
<text  x="917.57" y="143.5" ></text>
</g>
<g >
<title>XXH64_round (38 samples, 0.03%)</title><rect x="855.9" y="197" width="0.3" height="15.0" fill="rgb(247,94,21)" rx="2" ry="2" />
<text  x="858.88" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (16 samples, 0.01%)</title><rect x="721.5" y="341" width="0.2" height="15.0" fill="rgb(206,72,2)" rx="2" ry="2" />
<text  x="724.53" y="351.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (26 samples, 0.02%)</title><rect x="455.3" y="277" width="0.3" height="15.0" fill="rgb(243,9,19)" rx="2" ry="2" />
<text  x="458.33" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (22 samples, 0.02%)</title><rect x="159.2" y="165" width="0.2" height="15.0" fill="rgb(232,63,34)" rx="2" ry="2" />
<text  x="162.21" y="175.5" ></text>
</g>
<g >
<title>scythedb::PutFixed64 (287 samples, 0.22%)</title><rect x="430.8" y="309" width="2.6" height="15.0" fill="rgb(209,227,33)" rx="2" ry="2" />
<text  x="433.82" y="319.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (13 samples, 0.01%)</title><rect x="916.2" y="181" width="0.1" height="15.0" fill="rgb(219,215,33)" rx="2" ry="2" />
<text  x="919.22" y="191.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducerHash*&gt;::load (24 samples, 0.02%)</title><rect x="1013.3" y="213" width="0.3" height="15.0" fill="rgb(249,176,44)" rx="2" ry="2" />
<text  x="1016.33" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (13 samples, 0.01%)</title><rect x="895.3" y="277" width="0.1" height="15.0" fill="rgb(217,133,41)" rx="2" ry="2" />
<text  x="898.31" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::size (34 samples, 0.03%)</title><rect x="131.4" y="261" width="0.3" height="15.0" fill="rgb(208,95,34)" rx="2" ry="2" />
<text  x="134.44" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (27,821 samples, 21.24%)</title><rect x="162.0" y="277" width="250.6" height="15.0" fill="rgb(236,20,50)" rx="2" ry="2" />
<text  x="165.03" y="287.5" >scythedb::NVMSkipList::FindGreate..</text>
</g>
<g >
<title>pmemobj_tx_commit (15 samples, 0.01%)</title><rect x="148.1" y="149" width="0.1" height="15.0" fill="rgb(207,47,23)" rx="2" ry="2" />
<text  x="151.08" y="159.5" ></text>
</g>
<g >
<title>[unknown] (38 samples, 0.03%)</title><rect x="793.3" y="549" width="0.4" height="15.0" fill="rgb(233,44,14)" rx="2" ry="2" />
<text  x="796.32" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (255 samples, 0.19%)</title><rect x="1028.7" y="293" width="2.3" height="15.0" fill="rgb(235,147,9)" rx="2" ry="2" />
<text  x="1031.66" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (12 samples, 0.01%)</title><rect x="1019.7" y="181" width="0.1" height="15.0" fill="rgb(252,219,24)" rx="2" ry="2" />
<text  x="1022.70" y="191.5" ></text>
</g>
<g >
<title>operator delete (35 samples, 0.03%)</title><rect x="877.7" y="101" width="0.3" height="15.0" fill="rgb(225,201,32)" rx="2" ry="2" />
<text  x="880.68" y="111.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (27 samples, 0.02%)</title><rect x="1032.4" y="213" width="0.3" height="15.0" fill="rgb(225,217,38)" rx="2" ry="2" />
<text  x="1035.45" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (117 samples, 0.09%)</title><rect x="1024.9" y="229" width="1.1" height="15.0" fill="rgb(226,176,27)" rx="2" ry="2" />
<text  x="1027.91" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (67 samples, 0.05%)</title><rect x="1014.1" y="261" width="0.6" height="15.0" fill="rgb(209,80,28)" rx="2" ry="2" />
<text  x="1017.15" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (23 samples, 0.02%)</title><rect x="917.6" y="261" width="0.2" height="15.0" fill="rgb(213,12,34)" rx="2" ry="2" />
<text  x="920.60" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (426 samples, 0.33%)</title><rect x="920.4" y="277" width="3.9" height="15.0" fill="rgb(205,165,16)" rx="2" ry="2" />
<text  x="923.43" y="287.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;, std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (24 samples, 0.02%)</title><rect x="144.8" y="69" width="0.2" height="15.0" fill="rgb(253,34,51)" rx="2" ry="2" />
<text  x="147.75" y="79.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (14 samples, 0.01%)</title><rect x="838.2" y="213" width="0.1" height="15.0" fill="rgb(252,40,14)" rx="2" ry="2" />
<text  x="841.16" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (250 samples, 0.19%)</title><rect x="1015.3" y="229" width="2.2" height="15.0" fill="rgb(249,169,5)" rx="2" ry="2" />
<text  x="1018.25" y="239.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (27 samples, 0.02%)</title><rect x="159.9" y="277" width="0.3" height="15.0" fill="rgb(223,223,40)" rx="2" ry="2" />
<text  x="162.95" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (44 samples, 0.03%)</title><rect x="885.6" y="197" width="0.4" height="15.0" fill="rgb(239,94,18)" rx="2" ry="2" />
<text  x="888.61" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (19 samples, 0.01%)</title><rect x="427.3" y="261" width="0.2" height="15.0" fill="rgb(228,210,6)" rx="2" ry="2" />
<text  x="430.32" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;&amp;, unsigned long&amp;, true&gt; (19 samples, 0.01%)</title><rect x="150.4" y="165" width="0.2" height="15.0" fill="rgb(247,0,19)" rx="2" ry="2" />
<text  x="153.44" y="175.5" ></text>
</g>
<g >
<title>util_checksum_compute (34 samples, 0.03%)</title><rect x="1189.7" y="597" width="0.3" height="15.0" fill="rgb(210,156,27)" rx="2" ry="2" />
<text  x="1192.69" y="607.5" ></text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (14 samples, 0.01%)</title><rect x="159.4" y="165" width="0.1" height="15.0" fill="rgb(228,126,4)" rx="2" ry="2" />
<text  x="162.41" y="175.5" ></text>
</g>
<g >
<title>_IO_setb (41 samples, 0.03%)</title><rect x="794.2" y="565" width="0.4" height="15.0" fill="rgb(240,215,33)" rx="2" ry="2" />
<text  x="797.23" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (23 samples, 0.02%)</title><rect x="115.4" y="309" width="0.2" height="15.0" fill="rgb(216,37,28)" rx="2" ry="2" />
<text  x="118.38" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (29 samples, 0.02%)</title><rect x="925.8" y="213" width="0.3" height="15.0" fill="rgb(219,167,52)" rx="2" ry="2" />
<text  x="928.83" y="223.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (504 samples, 0.38%)</title><rect x="449.8" y="309" width="4.5" height="15.0" fill="rgb(212,192,31)" rx="2" ry="2" />
<text  x="452.78" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (15 samples, 0.01%)</title><rect x="152.4" y="245" width="0.2" height="15.0" fill="rgb(234,224,38)" rx="2" ry="2" />
<text  x="155.42" y="255.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (16 samples, 0.01%)</title><rect x="100.6" y="213" width="0.1" height="15.0" fill="rgb(245,63,23)" rx="2" ry="2" />
<text  x="103.60" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (14 samples, 0.01%)</title><rect x="897.4" y="229" width="0.1" height="15.0" fill="rgb(224,139,23)" rx="2" ry="2" />
<text  x="900.36" y="239.5" ></text>
</g>
</g>
</svg>
