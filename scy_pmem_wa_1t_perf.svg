<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="694" onload="init(evt)" viewBox="0 0 1200 694" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="694.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="677" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="677" > </text>
<g id="frames">
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.18%)</title><rect x="830.3" y="341" width="2.1" height="15.0" fill="rgb(235,27,25)" rx="2" ry="2" />
<text  x="833.32" y="351.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::size_approx (8 samples, 1.43%)</title><rect x="519.0" y="341" width="16.8" height="15.0" fill="rgb(242,203,3)" rx="2" ry="2" />
<text  x="522.02" y="351.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (12 samples, 2.14%)</title><rect x="880.8" y="309" width="25.2" height="15.0" fill="rgb(254,42,32)" rx="2" ry="2" />
<text  x="883.80" y="319.5" >s..</text>
</g>
<g >
<title>scythedb::Slice::Slice (1 samples, 0.18%)</title><rect x="129.9" y="197" width="2.1" height="15.0" fill="rgb(220,212,49)" rx="2" ry="2" />
<text  x="132.89" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (1 samples, 0.18%)</title><rect x="836.6" y="309" width="2.1" height="15.0" fill="rgb(233,158,49)" rx="2" ry="2" />
<text  x="839.63" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.18%)</title><rect x="203.5" y="277" width="2.1" height="15.0" fill="rgb(242,202,54)" rx="2" ry="2" />
<text  x="206.51" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (4 samples, 0.71%)</title><rect x="742.0" y="581" width="8.4" height="15.0" fill="rgb(242,132,13)" rx="2" ry="2" />
<text  x="744.98" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="544.3" y="341" width="2.1" height="15.0" fill="rgb(232,146,40)" rx="2" ry="2" />
<text  x="547.26" y="351.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="514.8" y="293" width="2.1" height="15.0" fill="rgb(218,73,27)" rx="2" ry="2" />
<text  x="517.81" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (5 samples, 0.89%)</title><rect x="779.8" y="245" width="10.6" height="15.0" fill="rgb(243,133,5)" rx="2" ry="2" />
<text  x="782.84" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::emplace_back&lt;scythedb::Slice&gt; (2 samples, 0.36%)</title><rect x="155.1" y="325" width="4.2" height="15.0" fill="rgb(220,47,36)" rx="2" ry="2" />
<text  x="158.13" y="335.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (1 samples, 0.18%)</title><rect x="405.4" y="165" width="2.1" height="15.0" fill="rgb(229,124,37)" rx="2" ry="2" />
<text  x="408.44" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (1 samples, 0.18%)</title><rect x="851.4" y="293" width="2.1" height="15.0" fill="rgb(237,176,44)" rx="2" ry="2" />
<text  x="854.35" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.18%)</title><rect x="973.4" y="261" width="2.1" height="15.0" fill="rgb(227,211,11)" rx="2" ry="2" />
<text  x="976.35" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="861.9" y="293" width="2.1" height="15.0" fill="rgb(238,216,45)" rx="2" ry="2" />
<text  x="864.87" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (16 samples, 2.85%)</title><rect x="925.0" y="309" width="33.6" height="15.0" fill="rgb(245,120,25)" rx="2" ry="2" />
<text  x="927.97" y="319.5" >sc..</text>
</g>
<g >
<title>scythedb::RepeatableThread::thread (312 samples, 55.61%)</title><rect x="10.0" y="501" width="656.3" height="15.0" fill="rgb(232,145,19)" rx="2" ry="2" />
<text  x="13.00" y="511.5" >scythedb::RepeatableThread::thread</text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (2 samples, 0.36%)</title><rect x="190.9" y="117" width="4.2" height="15.0" fill="rgb(254,98,18)" rx="2" ry="2" />
<text  x="193.89" y="127.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::operator unsigned long (4 samples, 0.71%)</title><rect x="174.1" y="229" width="8.4" height="15.0" fill="rgb(208,66,23)" rx="2" ry="2" />
<text  x="177.06" y="239.5" ></text>
</g>
<g >
<title>scythedb_bench (561 samples, 100.00%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(229,217,20)" rx="2" ry="2" />
<text  x="13.00" y="639.5" >scythedb_bench</text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (1 samples, 0.18%)</title><rect x="914.5" y="325" width="2.1" height="15.0" fill="rgb(242,148,48)" rx="2" ry="2" />
<text  x="917.46" y="335.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (1 samples, 0.18%)</title><rect x="119.4" y="213" width="2.1" height="15.0" fill="rgb(215,191,19)" rx="2" ry="2" />
<text  x="122.38" y="223.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (1 samples, 0.18%)</title><rect x="992.3" y="293" width="2.1" height="15.0" fill="rgb(213,128,9)" rx="2" ry="2" />
<text  x="995.28" y="303.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Next (1 samples, 0.18%)</title><rect x="988.1" y="309" width="2.1" height="15.0" fill="rgb(238,38,0)" rx="2" ry="2" />
<text  x="991.07" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (1 samples, 0.18%)</title><rect x="912.4" y="325" width="2.1" height="15.0" fill="rgb(233,200,14)" rx="2" ry="2" />
<text  x="915.35" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.18%)</title><rect x="861.9" y="261" width="2.1" height="15.0" fill="rgb(250,206,12)" rx="2" ry="2" />
<text  x="864.87" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (2 samples, 0.36%)</title><rect x="542.2" y="373" width="4.2" height="15.0" fill="rgb(227,9,7)" rx="2" ry="2" />
<text  x="545.16" y="383.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (107 samples, 19.07%)</title><rect x="769.3" y="421" width="225.1" height="15.0" fill="rgb(231,115,33)" rx="2" ry="2" />
<text  x="772.32" y="431.5" >std::thread::_Invoker&lt;std::tu..</text>
</g>
<g >
<title>realloc (1 samples, 0.18%)</title><rect x="1187.9" y="613" width="2.1" height="15.0" fill="rgb(239,23,17)" rx="2" ry="2" />
<text  x="1190.90" y="623.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (1 samples, 0.18%)</title><rect x="903.9" y="181" width="2.1" height="15.0" fill="rgb(232,209,1)" rx="2" ry="2" />
<text  x="906.94" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.18%)</title><rect x="910.2" y="213" width="2.2" height="15.0" fill="rgb(216,78,40)" rx="2" ry="2" />
<text  x="913.25" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.36%)</title><rect x="908.1" y="277" width="4.3" height="15.0" fill="rgb(224,64,40)" rx="2" ry="2" />
<text  x="911.15" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (2 samples, 0.36%)</title><rect x="929.2" y="181" width="4.2" height="15.0" fill="rgb(239,8,36)" rx="2" ry="2" />
<text  x="932.18" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.18%)</title><rect x="834.5" y="277" width="2.1" height="15.0" fill="rgb(218,46,24)" rx="2" ry="2" />
<text  x="837.53" y="287.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Dequeue (17 samples, 3.03%)</title><rect x="502.2" y="373" width="35.8" height="15.0" fill="rgb(249,176,20)" rx="2" ry="2" />
<text  x="505.19" y="383.5" >scy..</text>
</g>
<g >
<title>std::forward&lt;void  (1 samples, 0.18%)</title><rect x="659.9" y="405" width="2.1" height="15.0" fill="rgb(251,195,17)" rx="2" ry="2" />
<text  x="662.95" y="415.5" ></text>
</g>
<g >
<title>utils::RandomDouble (1 samples, 0.18%)</title><rect x="922.9" y="261" width="2.1" height="15.0" fill="rgb(230,118,29)" rx="2" ry="2" />
<text  x="925.87" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (12 samples, 2.14%)</title><rect x="174.1" y="293" width="25.2" height="15.0" fill="rgb(207,93,16)" rx="2" ry="2" />
<text  x="177.06" y="303.5" >p..</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (6 samples, 1.07%)</title><rect x="815.6" y="309" width="12.6" height="15.0" fill="rgb(249,176,36)" rx="2" ry="2" />
<text  x="818.60" y="319.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.36%)</title><rect x="144.6" y="341" width="4.2" height="15.0" fill="rgb(235,123,25)" rx="2" ry="2" />
<text  x="147.62" y="351.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (2 samples, 0.36%)</title><rect x="958.6" y="277" width="4.2" height="15.0" fill="rgb(243,32,51)" rx="2" ry="2" />
<text  x="961.63" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, true&gt;::~_Sp_ebo_helper (1 samples, 0.18%)</title><rect x="821.9" y="213" width="2.1" height="15.0" fill="rgb(212,5,11)" rx="2" ry="2" />
<text  x="824.91" y="223.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_index_for_index (4 samples, 0.71%)</title><rect x="506.4" y="293" width="8.4" height="15.0" fill="rgb(239,114,41)" rx="2" ry="2" />
<text  x="509.40" y="303.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_snapshot.constprop.25 (9 samples, 1.60%)</title><rect x="1065.9" y="597" width="18.9" height="15.0" fill="rgb(244,18,49)" rx="2" ry="2" />
<text  x="1068.90" y="607.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::PosixEnv::NowMicros (13 samples, 2.32%)</title><rect x="474.8" y="373" width="27.4" height="15.0" fill="rgb(217,59,50)" rx="2" ry="2" />
<text  x="477.85" y="383.5" >s..</text>
</g>
<g >
<title>std::this_thread::yield (52 samples, 9.27%)</title><rect x="548.5" y="373" width="109.3" height="15.0" fill="rgb(226,84,44)" rx="2" ry="2" />
<text  x="551.47" y="383.5" >std::this_thr..</text>
</g>
<g >
<title>[[vdso]] (6 samples, 1.07%)</title><rect x="489.6" y="341" width="12.6" height="15.0" fill="rgb(216,128,13)" rx="2" ry="2" />
<text  x="492.57" y="351.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="581" width="658.4" height="15.0" fill="rgb(252,124,17)" rx="2" ry="2" />
<text  x="13.00" y="591.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="514.8" y="277" width="2.1" height="15.0" fill="rgb(214,149,38)" rx="2" ry="2" />
<text  x="517.81" y="287.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (2 samples, 0.36%)</title><rect x="908.1" y="325" width="4.3" height="15.0" fill="rgb(217,159,37)" rx="2" ry="2" />
<text  x="911.15" y="335.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (2 samples, 0.36%)</title><rect x="943.9" y="261" width="4.2" height="15.0" fill="rgb(221,183,11)" rx="2" ry="2" />
<text  x="946.90" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (2 samples, 0.36%)</title><rect x="954.4" y="101" width="4.2" height="15.0" fill="rgb(234,215,42)" rx="2" ry="2" />
<text  x="957.42" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="954.4" y="197" width="4.2" height="15.0" fill="rgb(210,80,18)" rx="2" ry="2" />
<text  x="957.42" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="826.1" y="181" width="2.1" height="15.0" fill="rgb(243,16,10)" rx="2" ry="2" />
<text  x="829.11" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.36%)</title><rect x="954.4" y="149" width="4.2" height="15.0" fill="rgb(244,3,1)" rx="2" ry="2" />
<text  x="957.42" y="159.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (2 samples, 0.36%)</title><rect x="186.7" y="165" width="4.2" height="15.0" fill="rgb(229,149,3)" rx="2" ry="2" />
<text  x="189.68" y="175.5" ></text>
</g>
<g >
<title>std::_Construct&lt;scythedb::Slice, scythedb::Slice&gt; (1 samples, 0.18%)</title><rect x="157.2" y="229" width="2.1" height="15.0" fill="rgb(249,64,12)" rx="2" ry="2" />
<text  x="160.24" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.18%)</title><rect x="104.7" y="277" width="2.1" height="15.0" fill="rgb(234,159,19)" rx="2" ry="2" />
<text  x="107.65" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (3 samples, 0.53%)</title><rect x="815.6" y="229" width="6.3" height="15.0" fill="rgb(207,125,23)" rx="2" ry="2" />
<text  x="818.60" y="239.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (1 samples, 0.18%)</title><rect x="756.7" y="581" width="2.1" height="15.0" fill="rgb(249,135,54)" rx="2" ry="2" />
<text  x="759.70" y="591.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (3 samples, 0.53%)</title><rect x="420.2" y="277" width="6.3" height="15.0" fill="rgb(205,225,1)" rx="2" ry="2" />
<text  x="423.16" y="287.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (1 samples, 0.18%)</title><rect x="830.3" y="309" width="2.1" height="15.0" fill="rgb(246,145,20)" rx="2" ry="2" />
<text  x="833.32" y="319.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTransactionKey[abi:cxx11] (5 samples, 0.89%)</title><rect x="979.7" y="325" width="10.5" height="15.0" fill="rgb(232,150,25)" rx="2" ry="2" />
<text  x="982.66" y="335.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (1 samples, 0.18%)</title><rect x="226.6" y="229" width="2.2" height="15.0" fill="rgb(211,147,6)" rx="2" ry="2" />
<text  x="229.65" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6 samples, 1.07%)</title><rect x="893.4" y="245" width="12.6" height="15.0" fill="rgb(214,124,12)" rx="2" ry="2" />
<text  x="896.42" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (4 samples, 0.71%)</title><rect x="222.4" y="245" width="8.5" height="15.0" fill="rgb(252,47,0)" rx="2" ry="2" />
<text  x="225.44" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (1 samples, 0.18%)</title><rect x="304.5" y="229" width="2.1" height="15.0" fill="rgb(205,68,41)" rx="2" ry="2" />
<text  x="307.47" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::realloc (1 samples, 0.18%)</title><rect x="193.0" y="101" width="2.1" height="15.0" fill="rgb(232,128,43)" rx="2" ry="2" />
<text  x="195.99" y="111.5" ></text>
</g>
<g >
<title>ycsbc::DelegateClient (107 samples, 19.07%)</title><rect x="769.3" y="373" width="225.1" height="15.0" fill="rgb(238,171,47)" rx="2" ry="2" />
<text  x="772.32" y="383.5" >ycsbc::DelegateClient</text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (1 samples, 0.18%)</title><rect x="903.9" y="197" width="2.1" height="15.0" fill="rgb(247,52,37)" rx="2" ry="2" />
<text  x="906.94" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.18%)</title><rect x="903.9" y="117" width="2.1" height="15.0" fill="rgb(226,201,53)" rx="2" ry="2" />
<text  x="906.94" y="127.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (1 samples, 0.18%)</title><rect x="872.4" y="293" width="2.1" height="15.0" fill="rgb(214,180,53)" rx="2" ry="2" />
<text  x="875.39" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.18%)</title><rect x="880.8" y="261" width="2.1" height="15.0" fill="rgb(220,110,35)" rx="2" ry="2" />
<text  x="883.80" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (2 samples, 0.36%)</title><rect x="100.4" y="261" width="4.3" height="15.0" fill="rgb(231,59,39)" rx="2" ry="2" />
<text  x="103.45" y="271.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (2 samples, 0.36%)</title><rect x="416.0" y="213" width="4.2" height="15.0" fill="rgb(253,167,21)" rx="2" ry="2" />
<text  x="418.95" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.36%)</title><rect x="144.6" y="357" width="4.2" height="15.0" fill="rgb(251,117,33)" rx="2" ry="2" />
<text  x="147.62" y="367.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (1 samples, 0.18%)</title><rect x="912.4" y="309" width="2.1" height="15.0" fill="rgb(245,94,54)" rx="2" ry="2" />
<text  x="915.35" y="319.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMArena::Allocate (1 samples, 0.18%)</title><rect x="203.5" y="229" width="2.1" height="15.0" fill="rgb(238,65,29)" rx="2" ry="2" />
<text  x="206.51" y="239.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (1 samples, 0.18%)</title><rect x="830.3" y="293" width="2.1" height="15.0" fill="rgb(237,56,22)" rx="2" ry="2" />
<text  x="833.32" y="303.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoInsert (48 samples, 8.56%)</title><rect x="773.5" y="357" width="101.0" height="15.0" fill="rgb(222,119,53)" rx="2" ry="2" />
<text  x="776.53" y="367.5" >ycsbc::Clien..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.18%)</title><rect x="775.6" y="309" width="2.1" height="15.0" fill="rgb(229,84,53)" rx="2" ry="2" />
<text  x="778.63" y="319.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (1 samples, 0.18%)</title><rect x="195.1" y="149" width="2.1" height="15.0" fill="rgb(250,88,17)" rx="2" ry="2" />
<text  x="198.10" y="159.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (36 samples, 6.42%)</title><rect x="310.8" y="181" width="75.7" height="15.0" fill="rgb(252,215,29)" rx="2" ry="2" />
<text  x="313.78" y="191.5" >scythedb..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.18%)</title><rect x="853.5" y="181" width="2.1" height="15.0" fill="rgb(216,89,39)" rx="2" ry="2" />
<text  x="856.46" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (1 samples, 0.18%)</title><rect x="912.4" y="277" width="2.1" height="15.0" fill="rgb(212,209,32)" rx="2" ry="2" />
<text  x="915.35" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (12 samples, 2.14%)</title><rect x="174.1" y="261" width="25.2" height="15.0" fill="rgb(233,191,31)" rx="2" ry="2" />
<text  x="177.06" y="271.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (1 samples, 0.18%)</title><rect x="937.6" y="245" width="2.1" height="15.0" fill="rgb(247,228,25)" rx="2" ry="2" />
<text  x="940.59" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (2 samples, 0.36%)</title><rect x="954.4" y="229" width="4.2" height="15.0" fill="rgb(212,65,2)" rx="2" ry="2" />
<text  x="957.42" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (1 samples, 0.18%)</title><rect x="821.9" y="229" width="2.1" height="15.0" fill="rgb(249,92,16)" rx="2" ry="2" />
<text  x="824.91" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.36%)</title><rect x="916.6" y="293" width="4.2" height="15.0" fill="rgb(223,100,14)" rx="2" ry="2" />
<text  x="919.56" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (25 samples, 4.46%)</title><rect x="775.6" y="325" width="52.6" height="15.0" fill="rgb(236,47,14)" rx="2" ry="2" />
<text  x="778.63" y="335.5" >scyth..</text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.18%)</title><rect x="973.4" y="293" width="2.1" height="15.0" fill="rgb(248,42,34)" rx="2" ry="2" />
<text  x="976.35" y="303.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma.localalias.0 (1 samples, 0.18%)</title><rect x="1131.1" y="613" width="2.1" height="15.0" fill="rgb(207,109,32)" rx="2" ry="2" />
<text  x="1134.11" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="824.0" y="165" width="2.1" height="15.0" fill="rgb(221,98,30)" rx="2" ry="2" />
<text  x="827.01" y="175.5" ></text>
</g>
<g >
<title>vfprintf (2 samples, 0.36%)</title><rect x="727.3" y="565" width="4.2" height="15.0" fill="rgb(232,54,48)" rx="2" ry="2" />
<text  x="730.25" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (1 samples, 0.18%)</title><rect x="962.8" y="261" width="2.1" height="15.0" fill="rgb(252,92,15)" rx="2" ry="2" />
<text  x="965.83" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="939.7" y="277" width="2.1" height="15.0" fill="rgb(221,86,45)" rx="2" ry="2" />
<text  x="942.70" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (1 samples, 0.18%)</title><rect x="184.6" y="181" width="2.1" height="15.0" fill="rgb(242,202,54)" rx="2" ry="2" />
<text  x="187.58" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.53%)</title><rect x="952.3" y="245" width="6.3" height="15.0" fill="rgb(221,22,28)" rx="2" ry="2" />
<text  x="955.32" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.18%)</title><rect x="826.1" y="165" width="2.1" height="15.0" fill="rgb(233,6,53)" rx="2" ry="2" />
<text  x="829.11" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (6 samples, 1.07%)</title><rect x="87.8" y="261" width="12.6" height="15.0" fill="rgb(207,39,51)" rx="2" ry="2" />
<text  x="90.83" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="439.1" y="293" width="2.1" height="15.0" fill="rgb(228,45,19)" rx="2" ry="2" />
<text  x="442.09" y="303.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Put (25 samples, 4.46%)</title><rect x="775.6" y="341" width="52.6" height="15.0" fill="rgb(247,47,16)" rx="2" ry="2" />
<text  x="778.63" y="351.5" >scyth..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.18%)</title><rect x="138.3" y="277" width="2.1" height="15.0" fill="rgb(227,188,23)" rx="2" ry="2" />
<text  x="141.31" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (6 samples, 1.07%)</title><rect x="815.6" y="293" width="12.6" height="15.0" fill="rgb(250,211,15)" rx="2" ry="2" />
<text  x="818.60" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (3 samples, 0.53%)</title><rect x="962.8" y="293" width="6.3" height="15.0" fill="rgb(209,194,2)" rx="2" ry="2" />
<text  x="965.83" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.18%)</title><rect x="845.0" y="325" width="2.1" height="15.0" fill="rgb(210,98,31)" rx="2" ry="2" />
<text  x="848.04" y="335.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.36%)</title><rect x="1099.6" y="565" width="4.2" height="15.0" fill="rgb(231,193,25)" rx="2" ry="2" />
<text  x="1102.55" y="575.5" ></text>
</g>
<g >
<title>block_write_header (1 samples, 0.18%)</title><rect x="1145.8" y="613" width="2.1" height="15.0" fill="rgb(218,203,42)" rx="2" ry="2" />
<text  x="1148.83" y="623.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (2 samples, 0.36%)</title><rect x="975.5" y="325" width="4.2" height="15.0" fill="rgb(224,158,33)" rx="2" ry="2" />
<text  x="978.45" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.18%)</title><rect x="777.7" y="261" width="2.1" height="15.0" fill="rgb(244,172,5)" rx="2" ry="2" />
<text  x="780.74" y="271.5" ></text>
</g>
<g >
<title>malloc (7 samples, 1.25%)</title><rect x="1147.9" y="613" width="14.8" height="15.0" fill="rgb(230,172,37)" rx="2" ry="2" />
<text  x="1150.93" y="623.5" ></text>
</g>
<g >
<title>std::__invoke&lt;int  (107 samples, 19.07%)</title><rect x="769.3" y="405" width="225.1" height="15.0" fill="rgb(210,58,43)" rx="2" ry="2" />
<text  x="772.32" y="415.5" >std::__invoke&lt;int </text>
</g>
<g >
<title>__vdso_gettimeofday (12 samples, 2.14%)</title><rect x="477.0" y="357" width="25.2" height="15.0" fill="rgb(231,217,32)" rx="2" ry="2" />
<text  x="479.95" y="367.5" >_..</text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (1 samples, 0.18%)</title><rect x="887.1" y="293" width="2.1" height="15.0" fill="rgb(243,223,25)" rx="2" ry="2" />
<text  x="890.11" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.18%)</title><rect x="140.4" y="325" width="2.1" height="15.0" fill="rgb(220,207,35)" rx="2" ry="2" />
<text  x="143.41" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.18%)</title><rect x="853.5" y="277" width="2.1" height="15.0" fill="rgb(230,102,17)" rx="2" ry="2" />
<text  x="856.46" y="287.5" ></text>
</g>
<g >
<title>obj_norep_memcpy (1 samples, 0.18%)</title><rect x="1032.2" y="597" width="2.1" height="15.0" fill="rgb(209,171,12)" rx="2" ry="2" />
<text  x="1035.25" y="607.5" ></text>
</g>
<g >
<title>std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="549" width="658.4" height="15.0" fill="rgb(254,10,14)" rx="2" ry="2" />
<text  x="13.00" y="559.5" >std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (1 samples, 0.18%)</title><rect x="167.8" y="293" width="2.1" height="15.0" fill="rgb(227,148,46)" rx="2" ry="2" />
<text  x="170.75" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (107 samples, 19.07%)</title><rect x="769.3" y="517" width="225.1" height="15.0" fill="rgb(247,129,35)" rx="2" ry="2" />
<text  x="772.32" y="527.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (1 samples, 0.18%)</title><rect x="971.2" y="293" width="2.2" height="15.0" fill="rgb(209,37,45)" rx="2" ry="2" />
<text  x="974.25" y="303.5" ></text>
</g>
<g >
<title>utils::RandomDouble (1 samples, 0.18%)</title><rect x="992.3" y="309" width="2.1" height="15.0" fill="rgb(211,67,21)" rx="2" ry="2" />
<text  x="995.28" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.36%)</title><rect x="975.5" y="309" width="4.2" height="15.0" fill="rgb(240,195,38)" rx="2" ry="2" />
<text  x="978.45" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.18%)</title><rect x="935.5" y="229" width="2.1" height="15.0" fill="rgb(234,187,29)" rx="2" ry="2" />
<text  x="938.49" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__is_null_pointer&lt;char const&gt; (1 samples, 0.18%)</title><rect x="864.0" y="261" width="2.1" height="15.0" fill="rgb(249,217,6)" rx="2" ry="2" />
<text  x="866.98" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="954.4" y="213" width="4.2" height="15.0" fill="rgb(226,83,38)" rx="2" ry="2" />
<text  x="957.42" y="223.5" ></text>
</g>
<g >
<title>_int_free (5 samples, 0.89%)</title><rect x="731.5" y="581" width="10.5" height="15.0" fill="rgb(231,2,13)" rx="2" ry="2" />
<text  x="734.46" y="591.5" ></text>
</g>
<g >
<title>_int_free (4 samples, 0.71%)</title><rect x="1137.4" y="613" width="8.4" height="15.0" fill="rgb(211,177,49)" rx="2" ry="2" />
<text  x="1140.42" y="623.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (1 samples, 0.18%)</title><rect x="134.1" y="261" width="2.1" height="15.0" fill="rgb(205,213,22)" rx="2" ry="2" />
<text  x="137.10" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::key (1 samples, 0.18%)</title><rect x="136.2" y="341" width="2.1" height="15.0" fill="rgb(218,75,15)" rx="2" ry="2" />
<text  x="139.20" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="845.0" y="309" width="2.1" height="15.0" fill="rgb(238,110,4)" rx="2" ry="2" />
<text  x="848.04" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (1 samples, 0.18%)</title><rect x="85.7" y="293" width="2.1" height="15.0" fill="rgb(233,105,47)" rx="2" ry="2" />
<text  x="88.72" y="303.5" ></text>
</g>
<g >
<title>operation_add_typed_entry (1 samples, 0.18%)</title><rect x="1171.1" y="613" width="2.1" height="15.0" fill="rgb(205,165,50)" rx="2" ry="2" />
<text  x="1174.07" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (6 samples, 1.07%)</title><rect x="927.1" y="261" width="12.6" height="15.0" fill="rgb(244,79,4)" rx="2" ry="2" />
<text  x="930.08" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.18%)</title><rect x="138.3" y="309" width="2.1" height="15.0" fill="rgb(218,129,15)" rx="2" ry="2" />
<text  x="141.31" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (3 samples, 0.53%)</title><rect x="880.8" y="293" width="6.3" height="15.0" fill="rgb(254,37,23)" rx="2" ry="2" />
<text  x="883.80" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (1 samples, 0.18%)</title><rect x="190.9" y="37" width="2.1" height="15.0" fill="rgb(227,1,18)" rx="2" ry="2" />
<text  x="193.89" y="47.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="853.5" y="245" width="2.1" height="15.0" fill="rgb(224,211,47)" rx="2" ry="2" />
<text  x="856.46" y="255.5" ></text>
</g>
<g >
<title>_IO_setb (1 samples, 0.18%)</title><rect x="1099.6" y="533" width="2.1" height="15.0" fill="rgb(238,123,12)" rx="2" ry="2" />
<text  x="1102.55" y="543.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.36%)</title><rect x="781.9" y="229" width="4.2" height="15.0" fill="rgb(205,139,37)" rx="2" ry="2" />
<text  x="784.94" y="239.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (1 samples, 0.18%)</title><rect x="184.6" y="165" width="2.1" height="15.0" fill="rgb(217,207,13)" rx="2" ry="2" />
<text  x="187.58" y="175.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (1 samples, 0.18%)</title><rect x="443.3" y="325" width="2.1" height="15.0" fill="rgb(246,24,7)" rx="2" ry="2" />
<text  x="446.30" y="335.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (292 samples, 52.05%)</title><rect x="52.1" y="453" width="614.2" height="15.0" fill="rgb(212,2,9)" rx="2" ry="2" />
<text  x="55.07" y="463.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (1 samples, 0.18%)</title><rect x="157.2" y="261" width="2.1" height="15.0" fill="rgb(227,90,49)" rx="2" ry="2" />
<text  x="160.24" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (3 samples, 0.53%)</title><rect x="815.6" y="245" width="6.3" height="15.0" fill="rgb(207,202,52)" rx="2" ry="2" />
<text  x="818.60" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.18%)</title><rect x="788.3" y="229" width="2.1" height="15.0" fill="rgb(225,134,32)" rx="2" ry="2" />
<text  x="791.25" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::construct_at_end&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (1 samples, 0.18%)</title><rect x="190.9" y="101" width="2.1" height="15.0" fill="rgb(213,64,28)" rx="2" ry="2" />
<text  x="193.89" y="111.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (1 samples, 0.18%)</title><rect x="439.1" y="277" width="2.1" height="15.0" fill="rgb(251,149,8)" rx="2" ry="2" />
<text  x="442.09" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.18%)</title><rect x="880.8" y="213" width="2.1" height="15.0" fill="rgb(219,46,16)" rx="2" ry="2" />
<text  x="883.80" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (2 samples, 0.36%)</title><rect x="908.1" y="293" width="4.3" height="15.0" fill="rgb(221,4,28)" rx="2" ry="2" />
<text  x="911.15" y="303.5" ></text>
</g>
<g >
<title>_itoa_word (1 samples, 0.18%)</title><rect x="725.2" y="565" width="2.1" height="15.0" fill="rgb(238,116,53)" rx="2" ry="2" />
<text  x="728.15" y="575.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (1 samples, 0.18%)</title><rect x="952.3" y="213" width="2.1" height="15.0" fill="rgb(232,120,12)" rx="2" ry="2" />
<text  x="955.32" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;int  (15 samples, 2.67%)</title><rect x="104.7" y="293" width="31.5" height="15.0" fill="rgb(253,204,8)" rx="2" ry="2" />
<text  x="107.65" y="303.5" >st..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.36%)</title><rect x="190.9" y="133" width="4.2" height="15.0" fill="rgb(246,70,23)" rx="2" ry="2" />
<text  x="193.89" y="143.5" ></text>
</g>
<g >
<title>std::function&lt;void  (3 samples, 0.53%)</title><rect x="199.3" y="293" width="6.3" height="15.0" fill="rgb(245,8,32)" rx="2" ry="2" />
<text  x="202.30" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.18%)</title><rect x="828.2" y="309" width="2.1" height="15.0" fill="rgb(247,45,4)" rx="2" ry="2" />
<text  x="831.22" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (1 samples, 0.18%)</title><rect x="950.2" y="197" width="2.1" height="15.0" fill="rgb(219,207,18)" rx="2" ry="2" />
<text  x="953.21" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="969.1" y="277" width="2.1" height="15.0" fill="rgb(225,190,16)" rx="2" ry="2" />
<text  x="972.14" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (6 samples, 1.07%)</title><rect x="449.6" y="293" width="12.6" height="15.0" fill="rgb(226,17,2)" rx="2" ry="2" />
<text  x="452.61" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (24 samples, 4.28%)</title><rect x="85.7" y="309" width="50.5" height="15.0" fill="rgb(230,64,50)" rx="2" ry="2" />
<text  x="88.72" y="319.5" >scyth..</text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (38 samples, 6.77%)</title><rect x="308.7" y="197" width="79.9" height="15.0" fill="rgb(231,176,51)" rx="2" ry="2" />
<text  x="311.68" y="207.5" >scythedb:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.89%)</title><rect x="779.8" y="261" width="10.6" height="15.0" fill="rgb(236,52,19)" rx="2" ry="2" />
<text  x="782.84" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (1 samples, 0.18%)</title><rect x="472.7" y="325" width="2.1" height="15.0" fill="rgb(215,66,4)" rx="2" ry="2" />
<text  x="475.75" y="335.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt;::_M_head (1 samples, 0.18%)</title><rect x="662.0" y="405" width="2.2" height="15.0" fill="rgb(206,6,43)" rx="2" ry="2" />
<text  x="665.05" y="415.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (7 samples, 1.25%)</title><rect x="792.5" y="309" width="14.7" height="15.0" fill="rgb(213,218,10)" rx="2" ry="2" />
<text  x="795.46" y="319.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (2 samples, 0.36%)</title><rect x="148.8" y="341" width="4.2" height="15.0" fill="rgb(208,58,43)" rx="2" ry="2" />
<text  x="151.82" y="351.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (7 samples, 1.25%)</title><rect x="927.1" y="293" width="14.7" height="15.0" fill="rgb(237,5,50)" rx="2" ry="2" />
<text  x="930.08" y="303.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (1 samples, 0.18%)</title><rect x="906.0" y="309" width="2.1" height="15.0" fill="rgb(234,45,28)" rx="2" ry="2" />
<text  x="909.04" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (1 samples, 0.18%)</title><rect x="948.1" y="277" width="2.1" height="15.0" fill="rgb(237,200,5)" rx="2" ry="2" />
<text  x="951.11" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (12 samples, 2.14%)</title><rect x="174.1" y="245" width="25.2" height="15.0" fill="rgb(239,120,23)" rx="2" ry="2" />
<text  x="177.06" y="255.5" >s..</text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (3 samples, 0.53%)</title><rect x="952.3" y="277" width="6.3" height="15.0" fill="rgb(236,224,48)" rx="2" ry="2" />
<text  x="955.32" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (7 samples, 1.25%)</title><rect x="502.2" y="341" width="14.7" height="15.0" fill="rgb(233,10,10)" rx="2" ry="2" />
<text  x="505.19" y="351.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (1 samples, 0.18%)</title><rect x="872.4" y="341" width="2.1" height="15.0" fill="rgb(238,170,47)" rx="2" ry="2" />
<text  x="875.39" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.53%)</title><rect x="952.3" y="261" width="6.3" height="15.0" fill="rgb(232,202,49)" rx="2" ry="2" />
<text  x="955.32" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (4 samples, 0.71%)</title><rect x="807.2" y="261" width="8.4" height="15.0" fill="rgb(229,38,49)" rx="2" ry="2" />
<text  x="810.18" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (1 samples, 0.18%)</title><rect x="203.5" y="245" width="2.1" height="15.0" fill="rgb(228,92,41)" rx="2" ry="2" />
<text  x="206.51" y="255.5" ></text>
</g>
<g >
<title>pmemobj_mutex_unlock (1 samples, 0.18%)</title><rect x="1173.2" y="613" width="2.1" height="15.0" fill="rgb(224,5,12)" rx="2" ry="2" />
<text  x="1176.17" y="623.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.18%)</title><rect x="853.5" y="261" width="2.1" height="15.0" fill="rgb(234,168,24)" rx="2" ry="2" />
<text  x="856.46" y="271.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (1 samples, 0.18%)</title><rect x="922.9" y="213" width="2.1" height="15.0" fill="rgb(242,147,51)" rx="2" ry="2" />
<text  x="925.87" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="920.8" y="293" width="2.1" height="15.0" fill="rgb(241,111,7)" rx="2" ry="2" />
<text  x="923.77" y="303.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair (1 samples, 0.18%)</title><rect x="190.9" y="69" width="2.1" height="15.0" fill="rgb(229,196,32)" rx="2" ry="2" />
<text  x="193.89" y="79.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (1 samples, 0.18%)</title><rect x="106.8" y="229" width="2.1" height="15.0" fill="rgb(229,161,34)" rx="2" ry="2" />
<text  x="109.76" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (1 samples, 0.18%)</title><rect x="123.6" y="197" width="2.1" height="15.0" fill="rgb(232,2,24)" rx="2" ry="2" />
<text  x="126.58" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (17 samples, 3.03%)</title><rect x="230.9" y="229" width="35.7" height="15.0" fill="rgb(207,145,13)" rx="2" ry="2" />
<text  x="233.86" y="239.5" >pme..</text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::push_back (4 samples, 0.71%)</title><rect x="190.9" y="197" width="8.4" height="15.0" fill="rgb(216,172,26)" rx="2" ry="2" />
<text  x="193.89" y="207.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 1.07%)</title><rect x="815.6" y="277" width="12.6" height="15.0" fill="rgb(205,55,15)" rx="2" ry="2" />
<text  x="818.60" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (1 samples, 0.18%)</title><rect x="891.3" y="277" width="2.1" height="15.0" fill="rgb(252,219,8)" rx="2" ry="2" />
<text  x="894.32" y="287.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (1 samples, 0.18%)</title><rect x="992.3" y="245" width="2.1" height="15.0" fill="rgb(209,178,19)" rx="2" ry="2" />
<text  x="995.28" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (6 samples, 1.07%)</title><rect x="815.6" y="261" width="12.6" height="15.0" fill="rgb(214,68,2)" rx="2" ry="2" />
<text  x="818.60" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (2 samples, 0.36%)</title><rect x="908.1" y="309" width="4.3" height="15.0" fill="rgb(249,48,13)" rx="2" ry="2" />
<text  x="911.15" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.18%)</title><rect x="861.9" y="277" width="2.1" height="15.0" fill="rgb(242,159,43)" rx="2" ry="2" />
<text  x="864.87" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (1 samples, 0.18%)</title><rect x="864.0" y="293" width="2.1" height="15.0" fill="rgb(248,144,28)" rx="2" ry="2" />
<text  x="866.98" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.36%)</title><rect x="190.9" y="149" width="4.2" height="15.0" fill="rgb(208,95,31)" rx="2" ry="2" />
<text  x="193.89" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (2 samples, 0.36%)</title><rect x="958.6" y="261" width="4.2" height="15.0" fill="rgb(208,108,13)" rx="2" ry="2" />
<text  x="961.63" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="840.8" y="309" width="2.1" height="15.0" fill="rgb(226,167,23)" rx="2" ry="2" />
<text  x="843.84" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="824.0" y="213" width="4.2" height="15.0" fill="rgb(240,75,9)" rx="2" ry="2" />
<text  x="827.01" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (1 samples, 0.18%)</title><rect x="864.0" y="277" width="2.1" height="15.0" fill="rgb(250,12,0)" rx="2" ry="2" />
<text  x="866.98" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.18%)</title><rect x="973.4" y="229" width="2.1" height="15.0" fill="rgb(252,84,47)" rx="2" ry="2" />
<text  x="976.35" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (1 samples, 0.18%)</title><rect x="830.3" y="261" width="2.1" height="15.0" fill="rgb(211,105,28)" rx="2" ry="2" />
<text  x="833.32" y="271.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;int, int  (107 samples, 19.07%)</title><rect x="769.3" y="389" width="225.1" height="15.0" fill="rgb(230,67,51)" rx="2" ry="2" />
<text  x="772.32" y="399.5" >std::__invoke_impl&lt;int, int </text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (1 samples, 0.18%)</title><rect x="969.1" y="261" width="2.1" height="15.0" fill="rgb(254,209,26)" rx="2" ry="2" />
<text  x="972.14" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (2 samples, 0.36%)</title><rect x="138.3" y="341" width="4.2" height="15.0" fill="rgb(220,163,12)" rx="2" ry="2" />
<text  x="141.31" y="351.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTransactionKey[abi:cxx11] (4 samples, 0.71%)</title><rect x="916.6" y="325" width="8.4" height="15.0" fill="rgb(212,31,52)" rx="2" ry="2" />
<text  x="919.56" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (1 samples, 0.18%)</title><rect x="190.9" y="53" width="2.1" height="15.0" fill="rgb(207,187,1)" rx="2" ry="2" />
<text  x="193.89" y="63.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="517" width="658.4" height="15.0" fill="rgb(227,40,28)" rx="2" ry="2" />
<text  x="13.00" y="527.5" >scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>__sched_yield (52 samples, 9.27%)</title><rect x="548.5" y="357" width="109.3" height="15.0" fill="rgb(224,76,10)" rx="2" ry="2" />
<text  x="551.47" y="367.5" >__sched_yield</text>
</g>
<g >
<title>std::_Mu&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*, false, false&gt;::operator (1 samples, 0.18%)</title><rect x="56.3" y="421" width="2.1" height="15.0" fill="rgb(239,154,35)" rx="2" ry="2" />
<text  x="59.27" y="431.5" ></text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (1 samples, 0.18%)</title><rect x="1177.4" y="613" width="2.1" height="15.0" fill="rgb(218,15,28)" rx="2" ry="2" />
<text  x="1180.38" y="623.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (3 samples, 0.53%)</title><rect x="388.6" y="165" width="6.3" height="15.0" fill="rgb(208,100,28)" rx="2" ry="2" />
<text  x="391.61" y="175.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (1 samples, 0.18%)</title><rect x="992.3" y="277" width="2.1" height="15.0" fill="rgb(241,79,40)" rx="2" ry="2" />
<text  x="995.28" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="845.0" y="277" width="2.1" height="15.0" fill="rgb(226,33,17)" rx="2" ry="2" />
<text  x="848.04" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (1 samples, 0.18%)</title><rect x="1135.3" y="613" width="2.1" height="15.0" fill="rgb(228,223,19)" rx="2" ry="2" />
<text  x="1138.31" y="623.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::deallocate (1 samples, 0.18%)</title><rect x="142.5" y="293" width="2.1" height="15.0" fill="rgb(218,229,54)" rx="2" ry="2" />
<text  x="145.51" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (4 samples, 0.71%)</title><rect x="411.7" y="229" width="8.5" height="15.0" fill="rgb(243,61,23)" rx="2" ry="2" />
<text  x="414.75" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="872.4" y="325" width="2.1" height="15.0" fill="rgb(233,35,34)" rx="2" ry="2" />
<text  x="875.39" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (6 samples, 1.07%)</title><rect x="893.4" y="277" width="12.6" height="15.0" fill="rgb(245,127,6)" rx="2" ry="2" />
<text  x="896.42" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="809.3" y="213" width="4.2" height="15.0" fill="rgb(217,37,37)" rx="2" ry="2" />
<text  x="812.29" y="223.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (2 samples, 0.36%)</title><rect x="287.6" y="213" width="4.3" height="15.0" fill="rgb(247,120,35)" rx="2" ry="2" />
<text  x="290.65" y="223.5" ></text>
</g>
<g >
<title>obj_norep_flush (13 samples, 2.32%)</title><rect x="1004.9" y="597" width="27.3" height="15.0" fill="rgb(248,99,0)" rx="2" ry="2" />
<text  x="1007.90" y="607.5" >o..</text>
</g>
<g >
<title>pmemobj_root (1 samples, 0.18%)</title><rect x="1047.0" y="597" width="2.1" height="15.0" fill="rgb(239,163,51)" rx="2" ry="2" />
<text  x="1049.97" y="607.5" ></text>
</g>
<g >
<title>[libpmem.so.1.0.0] (25 samples, 4.46%)</title><rect x="668.4" y="597" width="52.5" height="15.0" fill="rgb(252,194,22)" rx="2" ry="2" />
<text  x="671.36" y="607.5" >[libp..</text>
</g>
<g >
<title>pmemobj_direct_inline (1 samples, 0.18%)</title><rect x="211.9" y="181" width="2.1" height="15.0" fill="rgb(218,179,11)" rx="2" ry="2" />
<text  x="214.93" y="191.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (1 samples, 0.18%)</title><rect x="132.0" y="197" width="2.1" height="15.0" fill="rgb(207,114,31)" rx="2" ry="2" />
<text  x="135.00" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="933.4" y="197" width="2.1" height="15.0" fill="rgb(216,2,47)" rx="2" ry="2" />
<text  x="936.39" y="207.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::MutexLock (4 samples, 0.71%)</title><rect x="24.7" y="469" width="8.4" height="15.0" fill="rgb(233,174,27)" rx="2" ry="2" />
<text  x="27.72" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="882.9" y="245" width="2.1" height="15.0" fill="rgb(241,16,46)" rx="2" ry="2" />
<text  x="885.91" y="255.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (11 samples, 1.96%)</title><rect x="388.6" y="197" width="23.1" height="15.0" fill="rgb(224,10,35)" rx="2" ry="2" />
<text  x="391.61" y="207.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="777.7" y="245" width="2.1" height="15.0" fill="rgb(218,20,8)" rx="2" ry="2" />
<text  x="780.74" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="903.9" y="149" width="2.1" height="15.0" fill="rgb(236,6,47)" rx="2" ry="2" />
<text  x="906.94" y="159.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (1 samples, 0.18%)</title><rect x="973.4" y="245" width="2.1" height="15.0" fill="rgb(244,43,5)" rx="2" ry="2" />
<text  x="976.35" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;scythedb::Slice*, scythedb::Slice*, std::allocator&lt;scythedb::Slice&gt; &gt; (1 samples, 0.18%)</title><rect x="157.2" y="293" width="2.1" height="15.0" fill="rgb(249,118,45)" rx="2" ry="2" />
<text  x="160.24" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.36%)</title><rect x="908.1" y="245" width="4.3" height="15.0" fill="rgb(220,84,32)" rx="2" ry="2" />
<text  x="911.15" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="981.8" y="277" width="2.1" height="15.0" fill="rgb(246,42,34)" rx="2" ry="2" />
<text  x="984.76" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (14 samples, 2.50%)</title><rect x="106.8" y="277" width="29.4" height="15.0" fill="rgb(246,166,5)" rx="2" ry="2" />
<text  x="109.76" y="287.5" >st..</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (6 samples, 1.07%)</title><rect x="893.4" y="293" width="12.6" height="15.0" fill="rgb(228,4,32)" rx="2" ry="2" />
<text  x="896.42" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.18%)</title><rect x="964.9" y="261" width="2.1" height="15.0" fill="rgb(233,2,39)" rx="2" ry="2" />
<text  x="967.94" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.18%)</title><rect x="977.6" y="229" width="2.1" height="15.0" fill="rgb(226,197,48)" rx="2" ry="2" />
<text  x="980.56" y="239.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.18%)</title><rect x="464.3" y="245" width="2.1" height="15.0" fill="rgb(206,219,20)" rx="2" ry="2" />
<text  x="467.33" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.18%)</title><rect x="903.9" y="101" width="2.1" height="15.0" fill="rgb(233,110,43)" rx="2" ry="2" />
<text  x="906.94" y="111.5" ></text>
</g>
<g >
<title>[unknown] (22 samples, 3.92%)</title><rect x="720.9" y="597" width="46.3" height="15.0" fill="rgb(225,51,5)" rx="2" ry="2" />
<text  x="723.94" y="607.5" >[unk..</text>
</g>
<g >
<title>vfprintf (1 samples, 0.18%)</title><rect x="1101.7" y="517" width="2.1" height="15.0" fill="rgb(226,93,4)" rx="2" ry="2" />
<text  x="1104.66" y="527.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (1 samples, 0.18%)</title><rect x="546.4" y="373" width="2.1" height="15.0" fill="rgb(223,81,39)" rx="2" ry="2" />
<text  x="549.36" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="828.2" y="325" width="2.1" height="15.0" fill="rgb(212,193,39)" rx="2" ry="2" />
<text  x="831.22" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (4 samples, 0.71%)</title><rect x="927.1" y="229" width="8.4" height="15.0" fill="rgb(245,162,16)" rx="2" ry="2" />
<text  x="930.08" y="239.5" ></text>
</g>
<g >
<title>scythedb::PutFixed64 (1 samples, 0.18%)</title><rect x="441.2" y="325" width="2.1" height="15.0" fill="rgb(226,50,13)" rx="2" ry="2" />
<text  x="444.19" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.18%)</title><rect x="138.3" y="325" width="2.1" height="15.0" fill="rgb(223,214,21)" rx="2" ry="2" />
<text  x="141.31" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.18%)</title><rect x="777.7" y="229" width="2.1" height="15.0" fill="rgb(223,6,41)" rx="2" ry="2" />
<text  x="780.74" y="239.5" ></text>
</g>
<g >
<title>run_get_real_data (1 samples, 0.18%)</title><rect x="1030.1" y="581" width="2.1" height="15.0" fill="rgb(237,31,6)" rx="2" ry="2" />
<text  x="1033.14" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.18%)</title><rect x="153.0" y="325" width="2.1" height="15.0" fill="rgb(238,107,29)" rx="2" ry="2" />
<text  x="156.03" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="914.5" y="309" width="2.1" height="15.0" fill="rgb(207,39,0)" rx="2" ry="2" />
<text  x="917.46" y="319.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (4 samples, 0.71%)</title><rect x="1179.5" y="613" width="8.4" height="15.0" fill="rgb(215,60,20)" rx="2" ry="2" />
<text  x="1182.48" y="623.5" ></text>
</g>
<g >
<title>run_block_size (12 samples, 2.14%)</title><rect x="1004.9" y="581" width="25.2" height="15.0" fill="rgb(247,169,36)" rx="2" ry="2" />
<text  x="1007.90" y="591.5" >r..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="986.0" y="277" width="2.1" height="15.0" fill="rgb(218,20,54)" rx="2" ry="2" />
<text  x="988.97" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (1 samples, 0.18%)</title><rect x="211.9" y="213" width="2.1" height="15.0" fill="rgb(210,124,20)" rx="2" ry="2" />
<text  x="214.93" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.18%)</title><rect x="441.2" y="309" width="2.1" height="15.0" fill="rgb(214,191,52)" rx="2" ry="2" />
<text  x="444.19" y="319.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (11 samples, 1.96%)</title><rect x="832.4" y="341" width="23.2" height="15.0" fill="rgb(250,101,39)" rx="2" ry="2" />
<text  x="835.42" y="351.5" >y..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="464.3" y="277" width="2.1" height="15.0" fill="rgb(239,160,50)" rx="2" ry="2" />
<text  x="467.33" y="287.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (1 samples, 0.18%)</title><rect x="813.5" y="229" width="2.1" height="15.0" fill="rgb(231,94,24)" rx="2" ry="2" />
<text  x="816.49" y="239.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::next_prod (1 samples, 0.18%)</title><rect x="516.9" y="341" width="2.1" height="15.0" fill="rgb(243,91,15)" rx="2" ry="2" />
<text  x="519.92" y="351.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (1 samples, 0.18%)</title><rect x="1175.3" y="613" width="2.1" height="15.0" fill="rgb(216,219,13)" rx="2" ry="2" />
<text  x="1178.28" y="623.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.18%)</title><rect x="767.2" y="597" width="2.1" height="15.0" fill="rgb(223,135,46)" rx="2" ry="2" />
<text  x="770.22" y="607.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (3 samples, 0.53%)</title><rect x="800.9" y="197" width="6.3" height="15.0" fill="rgb(251,221,15)" rx="2" ry="2" />
<text  x="803.87" y="207.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Signal (1 samples, 0.18%)</title><rect x="470.6" y="309" width="2.1" height="15.0" fill="rgb(209,222,11)" rx="2" ry="2" />
<text  x="473.64" y="319.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Next (1 samples, 0.18%)</title><rect x="922.9" y="309" width="2.1" height="15.0" fill="rgb(211,47,33)" rx="2" ry="2" />
<text  x="925.87" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::DecodeMessageField (5 samples, 0.89%)</title><rect x="148.8" y="357" width="10.5" height="15.0" fill="rgb(220,181,49)" rx="2" ry="2" />
<text  x="151.82" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (4 samples, 0.71%)</title><rect x="207.7" y="261" width="8.4" height="15.0" fill="rgb(223,35,8)" rx="2" ry="2" />
<text  x="210.72" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="146.7" y="277" width="2.1" height="15.0" fill="rgb(241,58,50)" rx="2" ry="2" />
<text  x="149.72" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.18%)</title><rect x="786.1" y="229" width="2.2" height="15.0" fill="rgb(218,214,43)" rx="2" ry="2" />
<text  x="789.15" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="950.2" y="245" width="2.1" height="15.0" fill="rgb(216,42,17)" rx="2" ry="2" />
<text  x="953.21" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (1 samples, 0.18%)</title><rect x="887.1" y="245" width="2.1" height="15.0" fill="rgb(246,204,42)" rx="2" ry="2" />
<text  x="890.11" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (1 samples, 0.18%)</title><rect x="157.2" y="277" width="2.1" height="15.0" fill="rgb(250,203,38)" rx="2" ry="2" />
<text  x="160.24" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (7 samples, 1.25%)</title><rect x="792.5" y="277" width="14.7" height="15.0" fill="rgb(253,86,35)" rx="2" ry="2" />
<text  x="795.46" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateNewChunk (7 samples, 1.25%)</title><rect x="184.6" y="213" width="14.7" height="15.0" fill="rgb(246,25,44)" rx="2" ry="2" />
<text  x="187.58" y="223.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.36%)</title><rect x="1099.6" y="549" width="4.2" height="15.0" fill="rgb(214,126,12)" rx="2" ry="2" />
<text  x="1102.55" y="559.5" ></text>
</g>
<g >
<title>ulog_free_next (4 samples, 0.71%)</title><rect x="758.8" y="581" width="8.4" height="15.0" fill="rgb(225,11,47)" rx="2" ry="2" />
<text  x="761.81" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.18%)</title><rect x="983.9" y="277" width="2.1" height="15.0" fill="rgb(240,122,12)" rx="2" ry="2" />
<text  x="986.87" y="287.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.18%)</title><rect x="918.7" y="213" width="2.1" height="15.0" fill="rgb(235,204,40)" rx="2" ry="2" />
<text  x="921.66" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (4 samples, 0.71%)</title><rect x="453.8" y="277" width="8.4" height="15.0" fill="rgb(231,98,50)" rx="2" ry="2" />
<text  x="456.81" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.18%)</title><rect x="920.8" y="261" width="2.1" height="15.0" fill="rgb(221,85,22)" rx="2" ry="2" />
<text  x="923.77" y="271.5" ></text>
</g>
<g >
<title>operator new (1 samples, 0.18%)</title><rect x="813.5" y="197" width="2.1" height="15.0" fill="rgb(215,206,32)" rx="2" ry="2" />
<text  x="816.49" y="207.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextSequenceKey[abi:cxx11] (8 samples, 1.43%)</title><rect x="855.6" y="341" width="16.8" height="15.0" fill="rgb(248,142,28)" rx="2" ry="2" />
<text  x="858.56" y="351.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (1 samples, 0.18%)</title><rect x="386.5" y="181" width="2.1" height="15.0" fill="rgb(235,153,43)" rx="2" ry="2" />
<text  x="389.51" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::operator+=&lt;unsigned long, unsigned long&gt; (1 samples, 0.18%)</title><rect x="184.6" y="197" width="2.1" height="15.0" fill="rgb(239,114,44)" rx="2" ry="2" />
<text  x="187.58" y="207.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::~MutexLock (7 samples, 1.25%)</title><rect x="33.1" y="469" width="14.8" height="15.0" fill="rgb(243,189,44)" rx="2" ry="2" />
<text  x="36.14" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="811.4" y="165" width="2.1" height="15.0" fill="rgb(239,152,43)" rx="2" ry="2" />
<text  x="814.39" y="175.5" ></text>
</g>
<g >
<title>ravl_data (1 samples, 0.18%)</title><rect x="1084.8" y="597" width="2.1" height="15.0" fill="rgb(244,219,19)" rx="2" ry="2" />
<text  x="1087.83" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (2 samples, 0.36%)</title><rect x="981.8" y="293" width="4.2" height="15.0" fill="rgb(222,138,15)" rx="2" ry="2" />
<text  x="984.76" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (2 samples, 0.36%)</title><rect x="824.0" y="197" width="4.2" height="15.0" fill="rgb(239,118,38)" rx="2" ry="2" />
<text  x="827.01" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (17 samples, 3.03%)</title><rect x="502.2" y="357" width="35.8" height="15.0" fill="rgb(207,150,1)" rx="2" ry="2" />
<text  x="505.19" y="367.5" >moo..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.36%)</title><rect x="958.6" y="325" width="4.2" height="15.0" fill="rgb(222,183,8)" rx="2" ry="2" />
<text  x="961.63" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (1 samples, 0.18%)</title><rect x="657.8" y="389" width="2.1" height="15.0" fill="rgb(210,33,45)" rx="2" ry="2" />
<text  x="660.84" y="399.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (57 samples, 10.16%)</title><rect x="300.3" y="245" width="119.9" height="15.0" fill="rgb(247,14,47)" rx="2" ry="2" />
<text  x="303.27" y="255.5" >std::_Function..</text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="546.4" y="357" width="2.1" height="15.0" fill="rgb(225,144,6)" rx="2" ry="2" />
<text  x="549.36" y="367.5" ></text>
</g>
<g >
<title>huge_ensure_header_type (1 samples, 0.18%)</title><rect x="996.5" y="597" width="2.1" height="15.0" fill="rgb(247,184,21)" rx="2" ry="2" />
<text  x="999.49" y="607.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (1 samples, 0.18%)</title><rect x="142.5" y="309" width="2.1" height="15.0" fill="rgb(253,103,36)" rx="2" ry="2" />
<text  x="145.51" y="319.5" ></text>
</g>
<g >
<title>operation_init (1 samples, 0.18%)</title><rect x="752.5" y="581" width="2.1" height="15.0" fill="rgb(235,17,39)" rx="2" ry="2" />
<text  x="755.50" y="591.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (7 samples, 1.25%)</title><rect x="792.5" y="293" width="14.7" height="15.0" fill="rgb(252,21,4)" rx="2" ry="2" />
<text  x="795.46" y="303.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (3 samples, 0.53%)</title><rect x="916.6" y="309" width="6.3" height="15.0" fill="rgb(250,217,50)" rx="2" ry="2" />
<text  x="919.56" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (1 samples, 0.18%)</title><rect x="891.3" y="261" width="2.1" height="15.0" fill="rgb(218,111,13)" rx="2" ry="2" />
<text  x="894.32" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.18%)</title><rect x="464.3" y="293" width="2.1" height="15.0" fill="rgb(228,121,20)" rx="2" ry="2" />
<text  x="467.33" y="303.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (107 samples, 19.07%)</title><rect x="769.3" y="437" width="225.1" height="15.0" fill="rgb(212,50,35)" rx="2" ry="2" />
<text  x="772.32" y="447.5" >std::thread::_Invoker&lt;std::tu..</text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (107 samples, 19.07%)</title><rect x="769.3" y="485" width="225.1" height="15.0" fill="rgb(238,185,10)" rx="2" ry="2" />
<text  x="772.32" y="495.5" >std::function&lt;std::unique_ptr..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="866.1" y="277" width="2.1" height="15.0" fill="rgb(240,172,54)" rx="2" ry="2" />
<text  x="869.08" y="287.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (5 samples, 0.89%)</title><rect x="401.2" y="181" width="10.5" height="15.0" fill="rgb(230,126,51)" rx="2" ry="2" />
<text  x="404.23" y="191.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (1 samples, 0.18%)</title><rect x="950.2" y="213" width="2.1" height="15.0" fill="rgb(225,84,38)" rx="2" ry="2" />
<text  x="953.21" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (1 samples, 0.18%)</title><rect x="136.2" y="325" width="2.1" height="15.0" fill="rgb(232,174,53)" rx="2" ry="2" />
<text  x="139.20" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="853.5" y="229" width="2.1" height="15.0" fill="rgb(217,213,39)" rx="2" ry="2" />
<text  x="856.46" y="239.5" ></text>
</g>
<g >
<title>_int_free (1 samples, 0.18%)</title><rect x="929.2" y="165" width="2.1" height="15.0" fill="rgb(235,206,18)" rx="2" ry="2" />
<text  x="932.18" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (3 samples, 0.53%)</title><rect x="962.8" y="309" width="6.3" height="15.0" fill="rgb(223,223,47)" rx="2" ry="2" />
<text  x="965.83" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (50 samples, 8.91%)</title><rect x="306.6" y="229" width="105.1" height="15.0" fill="rgb(249,170,54)" rx="2" ry="2" />
<text  x="309.58" y="239.5" >scythedb::NV..</text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::operator[]&lt;std::enable_if&lt;true, void&gt; &gt; (1 samples, 0.18%)</title><rect x="193.0" y="85" width="2.1" height="15.0" fill="rgb(231,204,42)" rx="2" ry="2" />
<text  x="195.99" y="95.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (6 samples, 1.07%)</title><rect x="388.6" y="181" width="12.6" height="15.0" fill="rgb(214,137,38)" rx="2" ry="2" />
<text  x="391.61" y="191.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (1 samples, 0.18%)</title><rect x="988.1" y="277" width="2.1" height="15.0" fill="rgb(218,73,27)" rx="2" ry="2" />
<text  x="991.07" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (7 samples, 1.25%)</title><rect x="777.7" y="309" width="14.8" height="15.0" fill="rgb(234,2,52)" rx="2" ry="2" />
<text  x="780.74" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (4 samples, 0.71%)</title><rect x="723.0" y="581" width="8.5" height="15.0" fill="rgb(206,51,33)" rx="2" ry="2" />
<text  x="726.05" y="591.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (287 samples, 51.16%)</title><rect x="58.4" y="421" width="603.6" height="15.0" fill="rgb(235,83,17)" rx="2" ry="2" />
<text  x="61.38" y="431.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="866.1" y="309" width="2.1" height="15.0" fill="rgb(251,74,28)" rx="2" ry="2" />
<text  x="869.08" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="969.1" y="293" width="2.1" height="15.0" fill="rgb(226,174,39)" rx="2" ry="2" />
<text  x="972.14" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (4 samples, 0.71%)</title><rect x="927.1" y="213" width="8.4" height="15.0" fill="rgb(252,62,31)" rx="2" ry="2" />
<text  x="930.08" y="223.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (2 samples, 0.36%)</title><rect x="840.8" y="325" width="4.2" height="15.0" fill="rgb(229,51,12)" rx="2" ry="2" />
<text  x="843.84" y="335.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildUpdate (6 samples, 1.07%)</title><rect x="962.8" y="325" width="12.7" height="15.0" fill="rgb(247,229,50)" rx="2" ry="2" />
<text  x="965.83" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="197.2" y="165" width="2.1" height="15.0" fill="rgb(214,39,24)" rx="2" ry="2" />
<text  x="200.20" y="175.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (101 samples, 18.00%)</title><rect x="216.1" y="293" width="212.5" height="15.0" fill="rgb(219,224,48)" rx="2" ry="2" />
<text  x="219.13" y="303.5" >scythedb::NVMSkipList::FindG..</text>
</g>
<g >
<title>__pthread_mutex_init (1 samples, 0.18%)</title><rect x="941.8" y="277" width="2.1" height="15.0" fill="rgb(230,12,22)" rx="2" ry="2" />
<text  x="944.80" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (3 samples, 0.53%)</title><rect x="821.9" y="245" width="6.3" height="15.0" fill="rgb(250,170,51)" rx="2" ry="2" />
<text  x="824.91" y="255.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextOperation (2 samples, 0.36%)</title><rect x="990.2" y="341" width="4.2" height="15.0" fill="rgb(240,201,54)" rx="2" ry="2" />
<text  x="993.18" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.18%)</title><rect x="908.1" y="229" width="2.1" height="15.0" fill="rgb(254,169,49)" rx="2" ry="2" />
<text  x="911.15" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.36%)</title><rect x="929.2" y="197" width="4.2" height="15.0" fill="rgb(225,39,35)" rx="2" ry="2" />
<text  x="932.18" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.18%)</title><rect x="836.6" y="293" width="2.1" height="15.0" fill="rgb(210,51,23)" rx="2" ry="2" />
<text  x="839.63" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (107 samples, 19.07%)</title><rect x="769.3" y="469" width="225.1" height="15.0" fill="rgb(210,97,50)" rx="2" ry="2" />
<text  x="772.32" y="479.5" >std::_Function_handler&lt;std::u..</text>
</g>
<g >
<title>std::get&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (2 samples, 0.36%)</title><rect x="662.0" y="421" width="4.3" height="15.0" fill="rgb(226,210,20)" rx="2" ry="2" />
<text  x="665.05" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="468.5" y="309" width="2.1" height="15.0" fill="rgb(223,45,33)" rx="2" ry="2" />
<text  x="471.54" y="319.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (1 samples, 0.18%)</title><rect x="885.0" y="277" width="2.1" height="15.0" fill="rgb(210,26,51)" rx="2" ry="2" />
<text  x="888.01" y="287.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (1 samples, 0.18%)</title><rect x="45.8" y="453" width="2.1" height="15.0" fill="rgb(248,135,51)" rx="2" ry="2" />
<text  x="48.76" y="463.5" ></text>
</g>
<g >
<title>scythedb::Status::Status (2 samples, 0.36%)</title><rect x="538.0" y="373" width="4.2" height="15.0" fill="rgb(208,153,45)" rx="2" ry="2" />
<text  x="540.95" y="383.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (1 samples, 0.18%)</title><rect x="941.8" y="293" width="2.1" height="15.0" fill="rgb(234,207,20)" rx="2" ry="2" />
<text  x="944.80" y="303.5" ></text>
</g>
<g >
<title>ulog_store (1 samples, 0.18%)</title><rect x="1097.5" y="597" width="2.1" height="15.0" fill="rgb(250,14,52)" rx="2" ry="2" />
<text  x="1100.45" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="809.3" y="197" width="4.2" height="15.0" fill="rgb(236,206,27)" rx="2" ry="2" />
<text  x="812.29" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="828.2" y="341" width="2.1" height="15.0" fill="rgb(220,123,16)" rx="2" ry="2" />
<text  x="831.22" y="351.5" ></text>
</g>
<g >
<title>malloc (1 samples, 0.18%)</title><rect x="201.4" y="261" width="2.1" height="15.0" fill="rgb(209,83,2)" rx="2" ry="2" />
<text  x="204.41" y="271.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::PutMsgHandle (155 samples, 27.63%)</title><rect x="148.8" y="373" width="326.0" height="15.0" fill="rgb(238,144,12)" rx="2" ry="2" />
<text  x="151.82" y="383.5" >scythedb::(anonymous namespace)::NVMBlockPro..</text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="891.3" y="293" width="2.1" height="15.0" fill="rgb(243,136,30)" rx="2" ry="2" />
<text  x="894.32" y="303.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (1 samples, 0.18%)</title><rect x="992.3" y="261" width="2.1" height="15.0" fill="rgb(228,195,42)" rx="2" ry="2" />
<text  x="995.28" y="271.5" ></text>
</g>
<g >
<title>run_get_real_data (1 samples, 0.18%)</title><rect x="1089.0" y="597" width="2.1" height="15.0" fill="rgb(209,104,52)" rx="2" ry="2" />
<text  x="1092.04" y="607.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (4 samples, 0.71%)</title><rect x="33.1" y="453" width="8.5" height="15.0" fill="rgb(210,47,48)" rx="2" ry="2" />
<text  x="36.14" y="463.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (1 samples, 0.18%)</title><rect x="845.0" y="245" width="2.1" height="15.0" fill="rgb(244,118,43)" rx="2" ry="2" />
<text  x="848.04" y="255.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (4 samples, 0.71%)</title><rect x="807.2" y="293" width="8.4" height="15.0" fill="rgb(246,75,7)" rx="2" ry="2" />
<text  x="810.18" y="303.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (1 samples, 0.18%)</title><rect x="720.9" y="581" width="2.1" height="15.0" fill="rgb(246,93,37)" rx="2" ry="2" />
<text  x="723.94" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (3 samples, 0.53%)</title><rect x="832.4" y="325" width="6.3" height="15.0" fill="rgb(209,26,45)" rx="2" ry="2" />
<text  x="835.42" y="335.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (2 samples, 0.36%)</title><rect x="47.9" y="453" width="4.2" height="15.0" fill="rgb(231,106,41)" rx="2" ry="2" />
<text  x="50.86" y="463.5" ></text>
</g>
<g >
<title>[unknown] (2 samples, 0.36%)</title><rect x="1099.6" y="581" width="4.2" height="15.0" fill="rgb(252,122,13)" rx="2" ry="2" />
<text  x="1102.55" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (1 samples, 0.18%)</title><rect x="146.7" y="309" width="2.1" height="15.0" fill="rgb(234,49,47)" rx="2" ry="2" />
<text  x="149.72" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (2 samples, 0.36%)</title><rect x="190.9" y="165" width="4.2" height="15.0" fill="rgb(217,182,37)" rx="2" ry="2" />
<text  x="193.89" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (2 samples, 0.36%)</title><rect x="954.4" y="165" width="4.2" height="15.0" fill="rgb(210,72,48)" rx="2" ry="2" />
<text  x="957.42" y="175.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (2 samples, 0.36%)</title><rect x="943.9" y="277" width="4.2" height="15.0" fill="rgb(217,87,21)" rx="2" ry="2" />
<text  x="946.90" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (2 samples, 0.36%)</title><rect x="144.6" y="325" width="4.2" height="15.0" fill="rgb(225,225,9)" rx="2" ry="2" />
<text  x="147.62" y="335.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (1 samples, 0.18%)</title><rect x="418.1" y="197" width="2.1" height="15.0" fill="rgb(249,70,6)" rx="2" ry="2" />
<text  x="421.06" y="207.5" ></text>
</g>
<g >
<title>_int_free (2 samples, 0.36%)</title><rect x="781.9" y="181" width="4.2" height="15.0" fill="rgb(213,21,12)" rx="2" ry="2" />
<text  x="784.94" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_realloc_insert&lt;scythedb::Slice&gt; (2 samples, 0.36%)</title><rect x="155.1" y="309" width="4.2" height="15.0" fill="rgb(247,12,32)" rx="2" ry="2" />
<text  x="158.13" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="142.5" y="357" width="2.1" height="15.0" fill="rgb(251,100,5)" rx="2" ry="2" />
<text  x="145.51" y="367.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (1 samples, 0.18%)</title><rect x="439.1" y="261" width="2.1" height="15.0" fill="rgb(230,65,41)" rx="2" ry="2" />
<text  x="442.09" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::NewNode (5 samples, 0.89%)</title><rect x="428.6" y="293" width="10.5" height="15.0" fill="rgb(207,161,51)" rx="2" ry="2" />
<text  x="431.57" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (21 samples, 3.74%)</title><rect x="161.4" y="309" width="44.2" height="15.0" fill="rgb(254,145,48)" rx="2" ry="2" />
<text  x="164.44" y="319.5" >scyt..</text>
</g>
<g >
<title>scythedb::Slice::compare (3 samples, 0.53%)</title><rect x="394.9" y="165" width="6.3" height="15.0" fill="rgb(240,80,7)" rx="2" ry="2" />
<text  x="397.92" y="175.5" ></text>
</g>
<g >
<title>lane_release (2 samples, 0.36%)</title><rect x="1000.7" y="597" width="4.2" height="15.0" fill="rgb(236,98,50)" rx="2" ry="2" />
<text  x="1003.70" y="607.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="939.7" y="261" width="2.1" height="15.0" fill="rgb(218,109,43)" rx="2" ry="2" />
<text  x="942.70" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="948.1" y="293" width="2.1" height="15.0" fill="rgb(212,113,3)" rx="2" ry="2" />
<text  x="951.11" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (1 samples, 0.18%)</title><rect x="207.7" y="197" width="2.1" height="15.0" fill="rgb(221,120,48)" rx="2" ry="2" />
<text  x="210.72" y="207.5" ></text>
</g>
<g >
<title>operation_start (1 samples, 0.18%)</title><rect x="754.6" y="581" width="2.1" height="15.0" fill="rgb(252,152,3)" rx="2" ry="2" />
<text  x="757.60" y="591.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (7 samples, 1.25%)</title><rect x="792.5" y="261" width="14.7" height="15.0" fill="rgb(226,67,15)" rx="2" ry="2" />
<text  x="795.46" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (1 samples, 0.18%)</title><rect x="157.2" y="245" width="2.1" height="15.0" fill="rgb(247,24,3)" rx="2" ry="2" />
<text  x="160.24" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="786.1" y="213" width="2.2" height="15.0" fill="rgb(226,190,51)" rx="2" ry="2" />
<text  x="789.15" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (1 samples, 0.18%)</title><rect x="664.2" y="405" width="2.1" height="15.0" fill="rgb(248,36,22)" rx="2" ry="2" />
<text  x="667.15" y="415.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (1 samples, 0.18%)</title><rect x="1101.7" y="533" width="2.1" height="15.0" fill="rgb(241,49,26)" rx="2" ry="2" />
<text  x="1104.66" y="543.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (107 samples, 19.07%)</title><rect x="769.3" y="565" width="225.1" height="15.0" fill="rgb(236,115,51)" rx="2" ry="2" />
<text  x="772.32" y="575.5" >std::call_once&lt;void </text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (6 samples, 1.07%)</title><rect x="121.5" y="229" width="12.6" height="15.0" fill="rgb(243,101,2)" rx="2" ry="2" />
<text  x="124.48" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (3 samples, 0.53%)</title><rect x="266.6" y="245" width="6.3" height="15.0" fill="rgb(217,120,33)" rx="2" ry="2" />
<text  x="269.61" y="255.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (1 samples, 0.18%)</title><rect x="207.7" y="181" width="2.1" height="15.0" fill="rgb(229,177,10)" rx="2" ry="2" />
<text  x="210.72" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.36%)</title><rect x="975.5" y="261" width="4.2" height="15.0" fill="rgb(211,161,38)" rx="2" ry="2" />
<text  x="978.45" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="824.0" y="181" width="2.1" height="15.0" fill="rgb(216,106,41)" rx="2" ry="2" />
<text  x="827.01" y="191.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (1 samples, 0.18%)</title><rect x="777.7" y="277" width="2.1" height="15.0" fill="rgb(238,54,48)" rx="2" ry="2" />
<text  x="780.74" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (5 samples, 0.89%)</title><rect x="893.4" y="229" width="10.5" height="15.0" fill="rgb(238,226,9)" rx="2" ry="2" />
<text  x="896.42" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (2 samples, 0.36%)</title><rect x="954.4" y="117" width="4.2" height="15.0" fill="rgb(243,32,23)" rx="2" ry="2" />
<text  x="957.42" y="127.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (1 samples, 0.18%)</title><rect x="211.9" y="197" width="2.1" height="15.0" fill="rgb(224,15,10)" rx="2" ry="2" />
<text  x="214.93" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="441.2" y="293" width="2.1" height="15.0" fill="rgb(207,113,21)" rx="2" ry="2" />
<text  x="444.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (1 samples, 0.18%)</title><rect x="811.4" y="133" width="2.1" height="15.0" fill="rgb(252,52,54)" rx="2" ry="2" />
<text  x="814.39" y="143.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (5 samples, 0.89%)</title><rect x="108.9" y="213" width="10.5" height="15.0" fill="rgb(247,226,11)" rx="2" ry="2" />
<text  x="111.86" y="223.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Put (16 samples, 2.85%)</title><rect x="925.0" y="325" width="33.6" height="15.0" fill="rgb(205,157,34)" rx="2" ry="2" />
<text  x="927.97" y="335.5" >sc..</text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::move_iterator (1 samples, 0.18%)</title><rect x="851.4" y="261" width="2.1" height="15.0" fill="rgb(224,150,47)" rx="2" ry="2" />
<text  x="854.35" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (2 samples, 0.36%)</title><rect x="470.6" y="341" width="4.2" height="15.0" fill="rgb(224,193,50)" rx="2" ry="2" />
<text  x="473.64" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.18%)</title><rect x="937.6" y="229" width="2.1" height="15.0" fill="rgb(225,215,35)" rx="2" ry="2" />
<text  x="940.59" y="239.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (1 samples, 0.18%)</title><rect x="228.8" y="229" width="2.1" height="15.0" fill="rgb(240,56,51)" rx="2" ry="2" />
<text  x="231.75" y="239.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Scramble (1 samples, 0.18%)</title><rect x="988.1" y="293" width="2.1" height="15.0" fill="rgb(228,199,12)" rx="2" ry="2" />
<text  x="991.07" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (5 samples, 0.89%)</title><rect x="893.4" y="213" width="10.5" height="15.0" fill="rgb(226,24,38)" rx="2" ry="2" />
<text  x="896.42" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.18%)</title><rect x="964.9" y="245" width="2.1" height="15.0" fill="rgb(215,27,26)" rx="2" ry="2" />
<text  x="967.94" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.18%)</title><rect x="464.3" y="261" width="2.1" height="15.0" fill="rgb(221,73,36)" rx="2" ry="2" />
<text  x="467.33" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (8 samples, 1.43%)</title><rect x="87.8" y="293" width="16.9" height="15.0" fill="rgb(209,213,36)" rx="2" ry="2" />
<text  x="90.83" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (11 samples, 1.96%)</title><rect x="445.4" y="325" width="23.1" height="15.0" fill="rgb(232,18,29)" rx="2" ry="2" />
<text  x="448.40" y="335.5" >s..</text>
</g>
<g >
<title>scythedb::NVMBlock::Get (27 samples, 4.81%)</title><rect x="85.7" y="357" width="56.8" height="15.0" fill="rgb(240,192,25)" rx="2" ry="2" />
<text  x="88.72" y="367.5" >scythe..</text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase*&gt;::load (1 samples, 0.18%)</title><rect x="535.8" y="341" width="2.2" height="15.0" fill="rgb(225,11,10)" rx="2" ry="2" />
<text  x="538.85" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="977.6" y="245" width="2.1" height="15.0" fill="rgb(225,89,26)" rx="2" ry="2" />
<text  x="980.56" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (2 samples, 0.36%)</title><rect x="100.4" y="277" width="4.3" height="15.0" fill="rgb(205,205,33)" rx="2" ry="2" />
<text  x="103.45" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (2 samples, 0.36%)</title><rect x="880.8" y="277" width="4.2" height="15.0" fill="rgb(242,184,28)" rx="2" ry="2" />
<text  x="883.80" y="287.5" ></text>
</g>
<g >
<title>std::operator&amp; (2 samples, 0.36%)</title><rect x="531.6" y="325" width="4.2" height="15.0" fill="rgb(239,207,45)" rx="2" ry="2" />
<text  x="534.64" y="335.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="533" width="658.4" height="15.0" fill="rgb(219,174,43)" rx="2" ry="2" />
<text  x="13.00" y="543.5" >std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (1 samples, 0.18%)</title><rect x="193.0" y="69" width="2.1" height="15.0" fill="rgb(239,205,15)" rx="2" ry="2" />
<text  x="195.99" y="79.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::Process (282 samples, 50.27%)</title><rect x="64.7" y="389" width="593.1" height="15.0" fill="rgb(229,171,12)" rx="2" ry="2" />
<text  x="67.69" y="399.5" >scythedb::(anonymous namespace)::NVMBlockProcessor::Process</text>
</g>
<g >
<title>operation_reserve (1 samples, 0.18%)</title><rect x="1034.3" y="597" width="2.2" height="15.0" fill="rgb(228,52,33)" rx="2" ry="2" />
<text  x="1037.35" y="607.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (1 samples, 0.18%)</title><rect x="922.9" y="293" width="2.1" height="15.0" fill="rgb(214,182,34)" rx="2" ry="2" />
<text  x="925.87" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.18%)</title><rect x="464.3" y="229" width="2.1" height="15.0" fill="rgb(209,82,1)" rx="2" ry="2" />
<text  x="467.33" y="239.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (1 samples, 0.18%)</title><rect x="922.9" y="197" width="2.1" height="15.0" fill="rgb(211,104,23)" rx="2" ry="2" />
<text  x="925.87" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.18%)</title><rect x="981.8" y="261" width="2.1" height="15.0" fill="rgb(230,79,4)" rx="2" ry="2" />
<text  x="984.76" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (112 samples, 19.96%)</title><rect x="205.6" y="309" width="235.6" height="15.0" fill="rgb(229,26,40)" rx="2" ry="2" />
<text  x="208.61" y="319.5" >scythedb::NVMSkipList::Insert</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::operator= (1 samples, 0.18%)</title><rect x="514.8" y="309" width="2.1" height="15.0" fill="rgb(253,211,43)" rx="2" ry="2" />
<text  x="517.81" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (50 samples, 8.91%)</title><rect x="306.6" y="213" width="105.1" height="15.0" fill="rgb(241,88,8)" rx="2" ry="2" />
<text  x="309.58" y="223.5" >scythedb::NV..</text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (1 samples, 0.18%)</title><rect x="887.1" y="261" width="2.1" height="15.0" fill="rgb(235,10,54)" rx="2" ry="2" />
<text  x="890.11" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (1 samples, 0.18%)</title><rect x="298.2" y="245" width="2.1" height="15.0" fill="rgb(208,218,16)" rx="2" ry="2" />
<text  x="301.16" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (1 samples, 0.18%)</title><rect x="964.9" y="229" width="2.1" height="15.0" fill="rgb(212,1,25)" rx="2" ry="2" />
<text  x="967.94" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (4 samples, 0.71%)</title><rect x="190.9" y="181" width="8.4" height="15.0" fill="rgb(219,51,24)" rx="2" ry="2" />
<text  x="193.89" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (1 samples, 0.18%)</title><rect x="146.7" y="293" width="2.1" height="15.0" fill="rgb(232,12,39)" rx="2" ry="2" />
<text  x="149.72" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (2 samples, 0.36%)</title><rect x="169.9" y="293" width="4.2" height="15.0" fill="rgb(250,178,22)" rx="2" ry="2" />
<text  x="172.86" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1 samples, 0.18%)</title><rect x="666.3" y="501" width="2.1" height="15.0" fill="rgb(234,45,16)" rx="2" ry="2" />
<text  x="669.26" y="511.5" ></text>
</g>
<g >
<title>std::function&lt;void  (12 samples, 2.14%)</title><rect x="174.1" y="277" width="25.2" height="15.0" fill="rgb(239,24,28)" rx="2" ry="2" />
<text  x="177.06" y="287.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.18%)</title><rect x="981.8" y="245" width="2.1" height="15.0" fill="rgb(245,106,44)" rx="2" ry="2" />
<text  x="984.76" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="462.2" y="293" width="2.1" height="15.0" fill="rgb(219,62,26)" rx="2" ry="2" />
<text  x="465.23" y="303.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (1 samples, 0.18%)</title><rect x="407.5" y="165" width="2.1" height="15.0" fill="rgb(251,2,20)" rx="2" ry="2" />
<text  x="410.54" y="175.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Get (13 samples, 2.32%)</title><rect x="880.8" y="325" width="27.3" height="15.0" fill="rgb(237,115,16)" rx="2" ry="2" />
<text  x="883.80" y="335.5" >s..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (1 samples, 0.18%)</title><rect x="872.4" y="309" width="2.1" height="15.0" fill="rgb(227,1,32)" rx="2" ry="2" />
<text  x="875.39" y="319.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="597" width="658.4" height="15.0" fill="rgb(250,70,33)" rx="2" ry="2" />
<text  x="13.00" y="607.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::Repe..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (1 samples, 0.18%)</title><rect x="779.8" y="229" width="2.1" height="15.0" fill="rgb(239,179,26)" rx="2" ry="2" />
<text  x="782.84" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Add (148 samples, 26.38%)</title><rect x="159.3" y="357" width="311.3" height="15.0" fill="rgb(234,215,42)" rx="2" ry="2" />
<text  x="162.34" y="367.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (3 samples, 0.53%)</title><rect x="800.9" y="245" width="6.3" height="15.0" fill="rgb(216,100,17)" rx="2" ry="2" />
<text  x="803.87" y="255.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (1 samples, 0.18%)</title><rect x="851.4" y="277" width="2.1" height="15.0" fill="rgb(221,115,19)" rx="2" ry="2" />
<text  x="854.35" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (7 samples, 1.25%)</title><rect x="502.2" y="325" width="14.7" height="15.0" fill="rgb(236,179,31)" rx="2" ry="2" />
<text  x="505.19" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.18%)</title><rect x="920.8" y="229" width="2.1" height="15.0" fill="rgb(234,155,19)" rx="2" ry="2" />
<text  x="923.77" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (1 samples, 0.18%)</title><rect x="853.5" y="213" width="2.1" height="15.0" fill="rgb(240,216,29)" rx="2" ry="2" />
<text  x="856.46" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (1 samples, 0.18%)</title><rect x="910.2" y="229" width="2.2" height="15.0" fill="rgb(254,132,43)" rx="2" ry="2" />
<text  x="913.25" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (1 samples, 0.18%)</title><rect x="409.6" y="165" width="2.1" height="15.0" fill="rgb(245,174,9)" rx="2" ry="2" />
<text  x="412.64" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::standard_alloc_policy&lt;char&gt;::allocate (2 samples, 0.36%)</title><rect x="186.7" y="197" width="4.2" height="15.0" fill="rgb(227,134,30)" rx="2" ry="2" />
<text  x="189.68" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="986.0" y="293" width="2.1" height="15.0" fill="rgb(235,51,15)" rx="2" ry="2" />
<text  x="988.97" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (2 samples, 0.36%)</title><rect x="809.3" y="181" width="4.2" height="15.0" fill="rgb(209,2,19)" rx="2" ry="2" />
<text  x="812.29" y="191.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (2 samples, 0.36%)</title><rect x="542.2" y="357" width="4.2" height="15.0" fill="rgb(247,171,3)" rx="2" ry="2" />
<text  x="545.16" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="447.5" y="293" width="2.1" height="15.0" fill="rgb(232,131,40)" rx="2" ry="2" />
<text  x="450.50" y="303.5" ></text>
</g>
<g >
<title>operation_finish (1 samples, 0.18%)</title><rect x="750.4" y="581" width="2.1" height="15.0" fill="rgb(230,130,19)" rx="2" ry="2" />
<text  x="753.39" y="591.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (2 samples, 0.36%)</title><rect x="1103.8" y="613" width="4.2" height="15.0" fill="rgb(222,34,10)" rx="2" ry="2" />
<text  x="1106.76" y="623.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (1 samples, 0.18%)</title><rect x="903.9" y="213" width="2.1" height="15.0" fill="rgb(240,223,8)" rx="2" ry="2" />
<text  x="906.94" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (4 samples, 0.71%)</title><rect x="207.7" y="293" width="8.4" height="15.0" fill="rgb(215,169,54)" rx="2" ry="2" />
<text  x="210.72" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (1 samples, 0.18%)</title><rect x="826.1" y="149" width="2.1" height="15.0" fill="rgb(210,189,5)" rx="2" ry="2" />
<text  x="829.11" y="159.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (1 samples, 0.18%)</title><rect x="172.0" y="261" width="2.1" height="15.0" fill="rgb(249,79,54)" rx="2" ry="2" />
<text  x="174.96" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (13 samples, 2.32%)</title><rect x="106.8" y="261" width="27.3" height="15.0" fill="rgb(210,200,22)" rx="2" ry="2" />
<text  x="109.76" y="271.5" >s..</text>
</g>
<g >
<title>__pthread_once_slow (107 samples, 19.07%)</title><rect x="769.3" y="597" width="225.1" height="15.0" fill="rgb(222,194,22)" rx="2" ry="2" />
<text  x="772.32" y="607.5" >__pthread_once_slow</text>
</g>
<g >
<title>utils::Hash (1 samples, 0.18%)</title><rect x="859.8" y="325" width="2.1" height="15.0" fill="rgb(224,170,26)" rx="2" ry="2" />
<text  x="862.77" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (1 samples, 0.18%)</title><rect x="779.8" y="213" width="2.1" height="15.0" fill="rgb(254,26,41)" rx="2" ry="2" />
<text  x="782.84" y="223.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (3 samples, 0.53%)</title><rect x="981.8" y="309" width="6.3" height="15.0" fill="rgb(235,44,50)" rx="2" ry="2" />
<text  x="984.76" y="319.5" ></text>
</g>
<g >
<title>ravl_emplace (1 samples, 0.18%)</title><rect x="1086.9" y="597" width="2.1" height="15.0" fill="rgb(241,208,44)" rx="2" ry="2" />
<text  x="1089.93" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.36%)</title><rect x="958.6" y="293" width="4.2" height="15.0" fill="rgb(207,76,2)" rx="2" ry="2" />
<text  x="961.63" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (1 samples, 0.18%)</title><rect x="834.5" y="293" width="2.1" height="15.0" fill="rgb(215,1,7)" rx="2" ry="2" />
<text  x="837.53" y="303.5" ></text>
</g>
<g >
<title>std::mutex::lock (1 samples, 0.18%)</title><rect x="990.2" y="309" width="2.1" height="15.0" fill="rgb(251,157,14)" rx="2" ry="2" />
<text  x="993.18" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (24 samples, 4.28%)</title><rect x="85.7" y="325" width="50.5" height="15.0" fill="rgb(220,2,16)" rx="2" ry="2" />
<text  x="88.72" y="335.5" >scyth..</text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (1 samples, 0.18%)</title><rect x="922.9" y="229" width="2.1" height="15.0" fill="rgb(242,204,25)" rx="2" ry="2" />
<text  x="925.87" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (294 samples, 52.41%)</title><rect x="47.9" y="469" width="618.4" height="15.0" fill="rgb(253,77,50)" rx="2" ry="2" />
<text  x="50.86" y="479.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (4 samples, 0.71%)</title><rect x="807.2" y="309" width="8.4" height="15.0" fill="rgb(233,12,25)" rx="2" ry="2" />
<text  x="810.18" y="319.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (3 samples, 0.53%)</title><rect x="800.9" y="165" width="6.3" height="15.0" fill="rgb(253,100,48)" rx="2" ry="2" />
<text  x="803.87" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="880.8" y="245" width="2.1" height="15.0" fill="rgb(225,122,15)" rx="2" ry="2" />
<text  x="883.80" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.18%)</title><rect x="990.2" y="293" width="2.1" height="15.0" fill="rgb(247,49,38)" rx="2" ry="2" />
<text  x="993.18" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (29 samples, 5.17%)</title><rect x="230.9" y="261" width="61.0" height="15.0" fill="rgb(224,117,45)" rx="2" ry="2" />
<text  x="233.86" y="271.5" >scythe..</text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (3 samples, 0.53%)</title><rect x="800.9" y="181" width="6.3" height="15.0" fill="rgb(237,32,47)" rx="2" ry="2" />
<text  x="803.87" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (1 samples, 0.18%)</title><rect x="889.2" y="293" width="2.1" height="15.0" fill="rgb(233,70,44)" rx="2" ry="2" />
<text  x="892.22" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="866.1" y="293" width="2.1" height="15.0" fill="rgb(223,140,54)" rx="2" ry="2" />
<text  x="869.08" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (285 samples, 50.80%)</title><rect x="60.5" y="405" width="599.4" height="15.0" fill="rgb(237,87,9)" rx="2" ry="2" />
<text  x="63.48" y="415.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.18%)</title><rect x="542.2" y="341" width="2.1" height="15.0" fill="rgb(219,206,18)" rx="2" ry="2" />
<text  x="545.16" y="351.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (3 samples, 0.53%)</title><rect x="800.9" y="213" width="6.3" height="15.0" fill="rgb(211,50,34)" rx="2" ry="2" />
<text  x="803.87" y="223.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (107 samples, 19.07%)</title><rect x="769.3" y="533" width="225.1" height="15.0" fill="rgb(216,185,23)" rx="2" ry="2" />
<text  x="772.32" y="543.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>ycsbc::Client::TransactionUpdate (31 samples, 5.53%)</title><rect x="925.0" y="341" width="65.2" height="15.0" fill="rgb(229,200,52)" rx="2" ry="2" />
<text  x="927.97" y="351.5" >ycsbc::..</text>
</g>
<g >
<title>ulog_clobber (3 samples, 0.53%)</title><rect x="1091.1" y="597" width="6.4" height="15.0" fill="rgb(207,127,38)" rx="2" ry="2" />
<text  x="1094.14" y="607.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (6 samples, 1.07%)</title><rect x="108.9" y="229" width="12.6" height="15.0" fill="rgb(247,178,18)" rx="2" ry="2" />
<text  x="111.86" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (3 samples, 0.53%)</title><rect x="849.3" y="309" width="6.3" height="15.0" fill="rgb(242,157,22)" rx="2" ry="2" />
<text  x="852.25" y="319.5" ></text>
</g>
<g >
<title>all (561 samples, 100%)</title><rect x="10.0" y="645" width="1180.0" height="15.0" fill="rgb(234,0,22)" rx="2" ry="2" />
<text  x="13.00" y="655.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.18%)</title><rect x="853.5" y="293" width="2.1" height="15.0" fill="rgb(211,37,36)" rx="2" ry="2" />
<text  x="856.46" y="303.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (4 samples, 0.71%)</title><rect x="807.2" y="245" width="8.4" height="15.0" fill="rgb(213,170,35)" rx="2" ry="2" />
<text  x="810.18" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="914.5" y="293" width="2.1" height="15.0" fill="rgb(226,109,32)" rx="2" ry="2" />
<text  x="917.46" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (2 samples, 0.36%)</title><rect x="916.6" y="277" width="4.2" height="15.0" fill="rgb(245,164,49)" rx="2" ry="2" />
<text  x="919.56" y="287.5" ></text>
</g>
<g >
<title>ycsbc::Client::TransactionRead (22 samples, 3.92%)</title><rect x="878.7" y="341" width="46.3" height="15.0" fill="rgb(222,186,18)" rx="2" ry="2" />
<text  x="881.70" y="351.5" >ycsb..</text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistNext (2 samples, 0.36%)</title><rect x="207.7" y="229" width="4.2" height="15.0" fill="rgb(231,183,34)" rx="2" ry="2" />
<text  x="210.72" y="239.5" ></text>
</g>
<g >
<title>ycsbc::CounterGenerator::Next (2 samples, 0.36%)</title><rect x="868.2" y="325" width="4.2" height="15.0" fill="rgb(207,212,11)" rx="2" ry="2" />
<text  x="871.18" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (6 samples, 1.07%)</title><rect x="87.8" y="277" width="12.6" height="15.0" fill="rgb(205,133,7)" rx="2" ry="2" />
<text  x="90.83" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.18%)</title><rect x="925.0" y="293" width="2.1" height="15.0" fill="rgb(218,167,31)" rx="2" ry="2" />
<text  x="927.97" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="920.8" y="245" width="2.1" height="15.0" fill="rgb(217,176,54)" rx="2" ry="2" />
<text  x="923.77" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (3 samples, 0.53%)</title><rect x="807.2" y="229" width="6.3" height="15.0" fill="rgb(239,10,43)" rx="2" ry="2" />
<text  x="810.18" y="239.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (107 samples, 19.07%)</title><rect x="769.3" y="581" width="225.1" height="15.0" fill="rgb(210,121,24)" rx="2" ry="2" />
<text  x="772.32" y="591.5" >std::call_once&lt;void </text>
</g>
<g >
<title>std::__shared_count&lt; (1 samples, 0.18%)</title><rect x="950.2" y="229" width="2.1" height="15.0" fill="rgb(246,41,34)" rx="2" ry="2" />
<text  x="953.21" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (2 samples, 0.36%)</title><rect x="916.6" y="261" width="4.2" height="15.0" fill="rgb(228,186,48)" rx="2" ry="2" />
<text  x="919.56" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (1 samples, 0.18%)</title><rect x="912.4" y="293" width="2.1" height="15.0" fill="rgb(248,227,21)" rx="2" ry="2" />
<text  x="915.35" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (1 samples, 0.18%)</title><rect x="918.7" y="229" width="2.1" height="15.0" fill="rgb(248,36,46)" rx="2" ry="2" />
<text  x="921.66" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (4 samples, 0.71%)</title><rect x="453.8" y="261" width="8.4" height="15.0" fill="rgb(229,135,39)" rx="2" ry="2" />
<text  x="456.81" y="271.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (1 samples, 0.18%)</title><rect x="887.1" y="277" width="2.1" height="15.0" fill="rgb(228,194,48)" rx="2" ry="2" />
<text  x="890.11" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (17 samples, 3.03%)</title><rect x="230.9" y="245" width="35.7" height="15.0" fill="rgb(238,171,47)" rx="2" ry="2" />
<text  x="233.86" y="255.5" >pme..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.36%)</title><rect x="954.4" y="133" width="4.2" height="15.0" fill="rgb(231,188,24)" rx="2" ry="2" />
<text  x="957.42" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (1 samples, 0.18%)</title><rect x="138.3" y="293" width="2.1" height="15.0" fill="rgb(205,136,47)" rx="2" ry="2" />
<text  x="141.31" y="303.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (4 samples, 0.71%)</title><rect x="125.7" y="213" width="8.4" height="15.0" fill="rgb(206,57,50)" rx="2" ry="2" />
<text  x="128.69" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (5 samples, 0.89%)</title><rect x="779.8" y="277" width="10.6" height="15.0" fill="rgb(250,204,1)" rx="2" ry="2" />
<text  x="782.84" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (1 samples, 0.18%)</title><rect x="466.4" y="293" width="2.1" height="15.0" fill="rgb(208,136,24)" rx="2" ry="2" />
<text  x="469.43" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="811.4" y="149" width="2.1" height="15.0" fill="rgb(223,220,32)" rx="2" ry="2" />
<text  x="814.39" y="159.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::SeekGreaterOrEqual (24 samples, 4.28%)</title><rect x="85.7" y="341" width="50.5" height="15.0" fill="rgb(237,39,21)" rx="2" ry="2" />
<text  x="88.72" y="351.5" >scyth..</text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.18%)</title><rect x="830.3" y="325" width="2.1" height="15.0" fill="rgb(219,36,25)" rx="2" ry="2" />
<text  x="833.32" y="335.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (1 samples, 0.18%)</title><rect x="470.6" y="325" width="2.1" height="15.0" fill="rgb(251,225,48)" rx="2" ry="2" />
<text  x="473.64" y="335.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (1 samples, 0.18%)</title><rect x="155.1" y="293" width="2.1" height="15.0" fill="rgb(223,126,3)" rx="2" ry="2" />
<text  x="158.13" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (6 samples, 1.07%)</title><rect x="927.1" y="277" width="12.6" height="15.0" fill="rgb(227,177,48)" rx="2" ry="2" />
<text  x="930.08" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (1 samples, 0.18%)</title><rect x="952.3" y="229" width="2.1" height="15.0" fill="rgb(210,142,51)" rx="2" ry="2" />
<text  x="955.32" y="239.5" ></text>
</g>
<g >
<title>__condvar_dec_grefs (11 samples, 1.96%)</title><rect x="1108.0" y="613" width="23.1" height="15.0" fill="rgb(215,57,47)" rx="2" ry="2" />
<text  x="1110.97" y="623.5" >_..</text>
</g>
<g >
<title>std::function&lt;void  (4 samples, 0.71%)</title><rect x="207.7" y="277" width="8.4" height="15.0" fill="rgb(217,136,10)" rx="2" ry="2" />
<text  x="210.72" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (2 samples, 0.36%)</title><rect x="470.6" y="357" width="4.2" height="15.0" fill="rgb(218,0,39)" rx="2" ry="2" />
<text  x="473.64" y="367.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (1 samples, 0.18%)</title><rect x="922.9" y="245" width="2.1" height="15.0" fill="rgb(237,216,2)" rx="2" ry="2" />
<text  x="925.87" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (11 samples, 1.96%)</title><rect x="445.4" y="309" width="23.1" height="15.0" fill="rgb(246,184,31)" rx="2" ry="2" />
<text  x="448.40" y="319.5" >s..</text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="790.4" y="293" width="2.1" height="15.0" fill="rgb(250,227,22)" rx="2" ry="2" />
<text  x="793.36" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateAligned (5 samples, 0.89%)</title><rect x="428.6" y="277" width="10.5" height="15.0" fill="rgb(244,162,28)" rx="2" ry="2" />
<text  x="431.57" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (2 samples, 0.36%)</title><rect x="971.2" y="309" width="4.3" height="15.0" fill="rgb(227,158,11)" rx="2" ry="2" />
<text  x="974.25" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="967.0" y="261" width="2.1" height="15.0" fill="rgb(221,146,39)" rx="2" ry="2" />
<text  x="970.04" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (1 samples, 0.18%)</title><rect x="931.3" y="165" width="2.1" height="15.0" fill="rgb(241,9,9)" rx="2" ry="2" />
<text  x="934.28" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (2 samples, 0.36%)</title><rect x="169.9" y="277" width="4.2" height="15.0" fill="rgb(210,111,30)" rx="2" ry="2" />
<text  x="172.86" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::GetMsgHandle (30 samples, 5.35%)</title><rect x="85.7" y="373" width="63.1" height="15.0" fill="rgb(217,75,24)" rx="2" ry="2" />
<text  x="88.72" y="383.5" >scythe..</text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (9 samples, 1.60%)</title><rect x="272.9" y="245" width="19.0" height="15.0" fill="rgb(245,74,39)" rx="2" ry="2" />
<text  x="275.92" y="255.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (107 samples, 19.07%)</title><rect x="769.3" y="501" width="225.1" height="15.0" fill="rgb(247,59,2)" rx="2" ry="2" />
<text  x="772.32" y="511.5" >std::__future_base::_State_ba..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="853.5" y="197" width="2.1" height="15.0" fill="rgb(213,7,48)" rx="2" ry="2" />
<text  x="856.46" y="207.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (4 samples, 0.71%)</title><rect x="1162.7" y="613" width="8.4" height="15.0" fill="rgb(243,223,22)" rx="2" ry="2" />
<text  x="1165.66" y="623.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (1 samples, 0.18%)</title><rect x="201.4" y="277" width="2.1" height="15.0" fill="rgb(251,167,6)" rx="2" ry="2" />
<text  x="204.41" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (3 samples, 0.53%)</title><rect x="962.8" y="277" width="6.3" height="15.0" fill="rgb(209,86,22)" rx="2" ry="2" />
<text  x="965.83" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;int  (61 samples, 10.87%)</title><rect x="291.9" y="261" width="128.3" height="15.0" fill="rgb(251,18,4)" rx="2" ry="2" />
<text  x="294.85" y="271.5" >std::function&lt;int </text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (2 samples, 0.36%)</title><rect x="954.4" y="181" width="4.2" height="15.0" fill="rgb(233,229,12)" rx="2" ry="2" />
<text  x="957.42" y="191.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (6 samples, 1.07%)</title><rect x="893.4" y="261" width="12.6" height="15.0" fill="rgb(215,26,29)" rx="2" ry="2" />
<text  x="896.42" y="271.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_entry_for_index (4 samples, 0.71%)</title><rect x="506.4" y="309" width="8.4" height="15.0" fill="rgb(230,141,52)" rx="2" ry="2" />
<text  x="509.40" y="319.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (313 samples, 55.79%)</title><rect x="10.0" y="565" width="658.4" height="15.0" fill="rgb(226,1,19)" rx="2" ry="2" />
<text  x="13.00" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (5 samples, 0.89%)</title><rect x="927.1" y="245" width="10.5" height="15.0" fill="rgb(237,117,8)" rx="2" ry="2" />
<text  x="930.08" y="255.5" ></text>
</g>
<g >
<title>ycsbc::DiscreteGenerator&lt;ycsbc::Operation&gt;::Next (2 samples, 0.36%)</title><rect x="990.2" y="325" width="4.2" height="15.0" fill="rgb(239,29,28)" rx="2" ry="2" />
<text  x="993.18" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::back (1 samples, 0.18%)</title><rect x="195.1" y="165" width="2.1" height="15.0" fill="rgb(236,62,8)" rx="2" ry="2" />
<text  x="198.10" y="175.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (1 samples, 0.18%)</title><rect x="426.5" y="277" width="2.1" height="15.0" fill="rgb(253,128,35)" rx="2" ry="2" />
<text  x="429.47" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (3 samples, 0.53%)</title><rect x="800.9" y="229" width="6.3" height="15.0" fill="rgb(214,16,14)" rx="2" ry="2" />
<text  x="803.87" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::push_back (2 samples, 0.36%)</title><rect x="155.1" y="341" width="4.2" height="15.0" fill="rgb(248,32,3)" rx="2" ry="2" />
<text  x="158.13" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (1 samples, 0.18%)</title><rect x="838.7" y="325" width="2.1" height="15.0" fill="rgb(228,96,9)" rx="2" ry="2" />
<text  x="841.73" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.18%)</title><rect x="927.1" y="197" width="2.1" height="15.0" fill="rgb(213,120,19)" rx="2" ry="2" />
<text  x="930.08" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (1 samples, 0.18%)</title><rect x="967.0" y="229" width="2.1" height="15.0" fill="rgb(220,58,30)" rx="2" ry="2" />
<text  x="970.04" y="239.5" ></text>
</g>
<g >
<title>[[vdso]] (1 samples, 0.18%)</title><rect x="474.8" y="357" width="2.2" height="15.0" fill="rgb(218,45,45)" rx="2" ry="2" />
<text  x="477.85" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (1 samples, 0.18%)</title><rect x="861.9" y="309" width="2.1" height="15.0" fill="rgb(244,8,45)" rx="2" ry="2" />
<text  x="864.87" y="319.5" ></text>
</g>
<g >
<title>pmem_memset (2 samples, 0.36%)</title><rect x="1042.8" y="597" width="4.2" height="15.0" fill="rgb(226,88,33)" rx="2" ry="2" />
<text  x="1045.76" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.36%)</title><rect x="975.5" y="277" width="4.2" height="15.0" fill="rgb(215,159,27)" rx="2" ry="2" />
<text  x="978.45" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (1 samples, 0.18%)</title><rect x="443.3" y="309" width="2.1" height="15.0" fill="rgb(240,224,36)" rx="2" ry="2" />
<text  x="446.30" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (1 samples, 0.18%)</title><rect x="882.9" y="261" width="2.1" height="15.0" fill="rgb(225,49,51)" rx="2" ry="2" />
<text  x="885.91" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (1 samples, 0.18%)</title><rect x="56.3" y="405" width="2.1" height="15.0" fill="rgb(217,91,0)" rx="2" ry="2" />
<text  x="59.27" y="415.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (1 samples, 0.18%)</title><rect x="969.1" y="309" width="2.1" height="15.0" fill="rgb(245,24,43)" rx="2" ry="2" />
<text  x="972.14" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (2 samples, 0.36%)</title><rect x="958.6" y="309" width="4.2" height="15.0" fill="rgb(240,107,10)" rx="2" ry="2" />
<text  x="961.63" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (1 samples, 0.18%)</title><rect x="838.7" y="309" width="2.1" height="15.0" fill="rgb(235,86,40)" rx="2" ry="2" />
<text  x="841.73" y="319.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (6 samples, 1.07%)</title><rect x="777.7" y="293" width="12.7" height="15.0" fill="rgb(223,115,14)" rx="2" ry="2" />
<text  x="780.74" y="303.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoTransaction (57 samples, 10.16%)</title><rect x="874.5" y="357" width="119.9" height="15.0" fill="rgb(224,4,10)" rx="2" ry="2" />
<text  x="877.49" y="367.5" >ycsbc::Client:..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="834.5" y="309" width="2.1" height="15.0" fill="rgb(215,212,13)" rx="2" ry="2" />
<text  x="837.53" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (1 samples, 0.18%)</title><rect x="813.5" y="213" width="2.1" height="15.0" fill="rgb(228,77,15)" rx="2" ry="2" />
<text  x="816.49" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (1 samples, 0.18%)</title><rect x="209.8" y="213" width="2.1" height="15.0" fill="rgb(222,35,52)" rx="2" ry="2" />
<text  x="212.82" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (9 samples, 1.60%)</title><rect x="272.9" y="229" width="19.0" height="15.0" fill="rgb(239,49,35)" rx="2" ry="2" />
<text  x="275.92" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="468.5" y="325" width="2.1" height="15.0" fill="rgb(209,177,17)" rx="2" ry="2" />
<text  x="471.54" y="335.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (2 samples, 0.36%)</title><rect x="163.5" y="293" width="4.3" height="15.0" fill="rgb(245,2,4)" rx="2" ry="2" />
<text  x="166.55" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (1 samples, 0.18%)</title><rect x="880.8" y="229" width="2.1" height="15.0" fill="rgb(229,207,5)" rx="2" ry="2" />
<text  x="883.80" y="239.5" ></text>
</g>
<g >
<title>palloc_reservation_create (3 samples, 0.53%)</title><rect x="1036.5" y="597" width="6.3" height="15.0" fill="rgb(223,83,14)" rx="2" ry="2" />
<text  x="1039.45" y="607.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (1 samples, 0.18%)</title><rect x="207.7" y="213" width="2.1" height="15.0" fill="rgb(211,76,4)" rx="2" ry="2" />
<text  x="210.72" y="223.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (3 samples, 0.53%)</title><rect x="861.9" y="325" width="6.3" height="15.0" fill="rgb(249,61,9)" rx="2" ry="2" />
<text  x="864.87" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.18%)</title><rect x="142.5" y="325" width="2.1" height="15.0" fill="rgb(227,126,16)" rx="2" ry="2" />
<text  x="145.51" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (2 samples, 0.36%)</title><rect x="824.0" y="229" width="4.2" height="15.0" fill="rgb(250,219,27)" rx="2" ry="2" />
<text  x="827.01" y="239.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (107 samples, 19.07%)</title><rect x="769.3" y="549" width="225.1" height="15.0" fill="rgb(239,115,54)" rx="2" ry="2" />
<text  x="772.32" y="559.5" >std::call_once&lt;void </text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (1 samples, 0.18%)</title><rect x="830.3" y="277" width="2.1" height="15.0" fill="rgb(208,35,30)" rx="2" ry="2" />
<text  x="833.32" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (1 samples, 0.18%)</title><rect x="910.2" y="197" width="2.2" height="15.0" fill="rgb(234,209,10)" rx="2" ry="2" />
<text  x="913.25" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator= (1 samples, 0.18%)</title><rect x="214.0" y="213" width="2.1" height="15.0" fill="rgb(237,179,50)" rx="2" ry="2" />
<text  x="217.03" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (4 samples, 0.71%)</title><rect x="807.2" y="277" width="8.4" height="15.0" fill="rgb(227,222,4)" rx="2" ry="2" />
<text  x="810.18" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (6 samples, 1.07%)</title><rect x="218.2" y="261" width="12.7" height="15.0" fill="rgb(227,69,24)" rx="2" ry="2" />
<text  x="221.24" y="271.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (2 samples, 0.36%)</title><rect x="121.5" y="213" width="4.2" height="15.0" fill="rgb(235,184,16)" rx="2" ry="2" />
<text  x="124.48" y="223.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (1 samples, 0.18%)</title><rect x="950.2" y="277" width="2.1" height="15.0" fill="rgb(233,184,32)" rx="2" ry="2" />
<text  x="953.21" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (1 samples, 0.18%)</title><rect x="441.2" y="277" width="2.1" height="15.0" fill="rgb(244,124,8)" rx="2" ry="2" />
<text  x="444.19" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (1 samples, 0.18%)</title><rect x="842.9" y="309" width="2.1" height="15.0" fill="rgb(248,200,34)" rx="2" ry="2" />
<text  x="845.94" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="830.3" y="245" width="2.1" height="15.0" fill="rgb(211,216,23)" rx="2" ry="2" />
<text  x="833.32" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (1 samples, 0.18%)</title><rect x="203.5" y="261" width="2.1" height="15.0" fill="rgb(219,104,29)" rx="2" ry="2" />
<text  x="206.51" y="271.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::wait (13 samples, 2.32%)</title><rect x="20.5" y="485" width="27.4" height="15.0" fill="rgb(241,0,48)" rx="2" ry="2" />
<text  x="23.52" y="495.5" >s..</text>
</g>
<g >
<title>__strchrnul_avx2 (1 samples, 0.18%)</title><rect x="723.0" y="565" width="2.2" height="15.0" fill="rgb(217,53,36)" rx="2" ry="2" />
<text  x="726.05" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="142.5" y="341" width="2.1" height="15.0" fill="rgb(225,144,43)" rx="2" ry="2" />
<text  x="145.51" y="351.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (292 samples, 52.05%)</title><rect x="52.1" y="437" width="614.2" height="15.0" fill="rgb(229,34,21)" rx="2" ry="2" />
<text  x="55.07" y="447.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::SetPersistNext (2 samples, 0.36%)</title><rect x="211.9" y="229" width="4.2" height="15.0" fill="rgb(244,78,8)" rx="2" ry="2" />
<text  x="214.93" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.18%)</title><rect x="468.5" y="293" width="2.1" height="15.0" fill="rgb(222,211,7)" rx="2" ry="2" />
<text  x="471.54" y="303.5" ></text>
</g>
<g >
<title>memcmp@plt (1 samples, 0.18%)</title><rect x="121.5" y="197" width="2.1" height="15.0" fill="rgb(228,114,31)" rx="2" ry="2" />
<text  x="124.48" y="207.5" ></text>
</g>
<g >
<title>__tls_get_addr (1 samples, 0.18%)</title><rect x="994.4" y="597" width="2.1" height="15.0" fill="rgb(226,1,38)" rx="2" ry="2" />
<text  x="997.39" y="607.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (1 samples, 0.18%)</title><rect x="950.2" y="261" width="2.1" height="15.0" fill="rgb(251,203,37)" rx="2" ry="2" />
<text  x="953.21" y="271.5" ></text>
</g>
<g >
<title>pmem::detail::type_num&lt;char&gt; (2 samples, 0.36%)</title><rect x="186.7" y="181" width="4.2" height="15.0" fill="rgb(246,165,32)" rx="2" ry="2" />
<text  x="189.68" y="191.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (2 samples, 0.36%)</title><rect x="943.9" y="293" width="4.2" height="15.0" fill="rgb(252,64,29)" rx="2" ry="2" />
<text  x="946.90" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (1 samples, 0.18%)</title><rect x="967.0" y="245" width="2.1" height="15.0" fill="rgb(231,188,37)" rx="2" ry="2" />
<text  x="970.04" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (1 samples, 0.18%)</title><rect x="903.9" y="133" width="2.1" height="15.0" fill="rgb(246,124,9)" rx="2" ry="2" />
<text  x="906.94" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (1 samples, 0.18%)</title><rect x="31.0" y="453" width="2.1" height="15.0" fill="rgb(216,87,49)" rx="2" ry="2" />
<text  x="34.03" y="463.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (2 samples, 0.36%)</title><rect x="781.9" y="213" width="4.2" height="15.0" fill="rgb(236,97,11)" rx="2" ry="2" />
<text  x="784.94" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (97 samples, 17.29%)</title><rect x="216.1" y="277" width="204.1" height="15.0" fill="rgb(211,33,48)" rx="2" ry="2" />
<text  x="219.13" y="287.5" >scythedb::NVMSkipList::Key..</text>
</g>
<g >
<title>__pthread_disable_asynccancel (1 samples, 0.18%)</title><rect x="1133.2" y="613" width="2.1" height="15.0" fill="rgb(233,144,19)" rx="2" ry="2" />
<text  x="1136.21" y="623.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (1 samples, 0.18%)</title><rect x="845.0" y="261" width="2.1" height="15.0" fill="rgb(242,228,54)" rx="2" ry="2" />
<text  x="848.04" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (1 samples, 0.18%)</title><rect x="903.9" y="229" width="2.1" height="15.0" fill="rgb(230,118,4)" rx="2" ry="2" />
<text  x="906.94" y="239.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (313 samples, 55.79%)</title><rect x="10.0" y="613" width="658.4" height="15.0" fill="rgb(239,57,16)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >[libstdc++.so.6.0.25]</text>
</g>
<g >
<title>scythedb::NVMBlock::Add (148 samples, 26.38%)</title><rect x="159.3" y="341" width="311.3" height="15.0" fill="rgb(226,147,0)" rx="2" ry="2" />
<text  x="162.34" y="351.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (1 samples, 0.18%)</title><rect x="903.9" y="165" width="2.1" height="15.0" fill="rgb(210,150,42)" rx="2" ry="2" />
<text  x="906.94" y="175.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (2 samples, 0.36%)</title><rect x="1099.6" y="597" width="4.2" height="15.0" fill="rgb(231,202,53)" rx="2" ry="2" />
<text  x="1102.55" y="607.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (1 samples, 0.18%)</title><rect x="950.2" y="293" width="2.1" height="15.0" fill="rgb(218,217,13)" rx="2" ry="2" />
<text  x="953.21" y="303.5" ></text>
</g>
<g >
<title>std::function&lt;void  (294 samples, 52.41%)</title><rect x="47.9" y="485" width="618.4" height="15.0" fill="rgb(248,10,0)" rx="2" ry="2" />
<text  x="50.86" y="495.5" >std::function&lt;void </text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (13 samples, 2.32%)</title><rect x="106.8" y="245" width="27.3" height="15.0" fill="rgb(232,36,52)" rx="2" ry="2" />
<text  x="109.76" y="255.5" >s..</text>
</g>
<g >
<title>lane_hold (1 samples, 0.18%)</title><rect x="998.6" y="597" width="2.1" height="15.0" fill="rgb(253,187,23)" rx="2" ry="2" />
<text  x="1001.59" y="607.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;, std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (1 samples, 0.18%)</title><rect x="190.9" y="85" width="2.1" height="15.0" fill="rgb(235,28,52)" rx="2" ry="2" />
<text  x="193.89" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="845.0" y="293" width="2.1" height="15.0" fill="rgb(212,198,10)" rx="2" ry="2" />
<text  x="848.04" y="303.5" ></text>
</g>
<g >
<title>[unknown] (207 samples, 36.90%)</title><rect x="668.4" y="613" width="435.4" height="15.0" fill="rgb(220,184,48)" rx="2" ry="2" />
<text  x="671.36" y="623.5" >[unknown]</text>
</g>
<g >
<title>scythedb::NVMBlock::RecordPersist (133 samples, 23.71%)</title><rect x="161.4" y="325" width="279.8" height="15.0" fill="rgb(231,41,13)" rx="2" ry="2" />
<text  x="164.44" y="335.5" >scythedb::NVMBlock::RecordPersist</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (2 samples, 0.36%)</title><rect x="781.9" y="197" width="4.2" height="15.0" fill="rgb(217,125,44)" rx="2" ry="2" />
<text  x="784.94" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (2 samples, 0.36%)</title><rect x="916.6" y="245" width="4.2" height="15.0" fill="rgb(252,112,49)" rx="2" ry="2" />
<text  x="919.56" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (1 samples, 0.18%)</title><rect x="830.3" y="229" width="2.1" height="15.0" fill="rgb(244,211,6)" rx="2" ry="2" />
<text  x="833.32" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (1 samples, 0.18%)</title><rect x="880.8" y="197" width="2.1" height="15.0" fill="rgb(227,76,29)" rx="2" ry="2" />
<text  x="883.80" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (2 samples, 0.36%)</title><rect x="975.5" y="293" width="4.2" height="15.0" fill="rgb(221,155,16)" rx="2" ry="2" />
<text  x="978.45" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (2 samples, 0.36%)</title><rect x="908.1" y="261" width="4.3" height="15.0" fill="rgb(250,123,16)" rx="2" ry="2" />
<text  x="911.15" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_common.constprop.20 (8 samples, 1.43%)</title><rect x="1049.1" y="597" width="16.8" height="15.0" fill="rgb(243,22,40)" rx="2" ry="2" />
<text  x="1052.07" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (1 samples, 0.18%)</title><rect x="153.0" y="341" width="2.1" height="15.0" fill="rgb(223,127,26)" rx="2" ry="2" />
<text  x="156.03" y="351.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (3 samples, 0.53%)</title><rect x="952.3" y="293" width="6.3" height="15.0" fill="rgb(213,43,35)" rx="2" ry="2" />
<text  x="955.32" y="303.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (1 samples, 0.18%)</title><rect x="845.0" y="229" width="2.1" height="15.0" fill="rgb(245,127,54)" rx="2" ry="2" />
<text  x="848.04" y="239.5" ></text>
</g>
<g >
<title>std::numeric_limits&lt;unsigned long&gt;::max (1 samples, 0.18%)</title><rect x="136.2" y="309" width="2.1" height="15.0" fill="rgb(248,229,2)" rx="2" ry="2" />
<text  x="139.20" y="319.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (2 samples, 0.36%)</title><rect x="943.9" y="245" width="4.2" height="15.0" fill="rgb(239,3,53)" rx="2" ry="2" />
<text  x="946.90" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (1 samples, 0.18%)</title><rect x="443.3" y="293" width="2.1" height="15.0" fill="rgb(241,208,28)" rx="2" ry="2" />
<text  x="446.30" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateFallback (8 samples, 1.43%)</title><rect x="182.5" y="229" width="16.8" height="15.0" fill="rgb(227,192,3)" rx="2" ry="2" />
<text  x="185.48" y="239.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (1 samples, 0.18%)</title><rect x="922.9" y="277" width="2.1" height="15.0" fill="rgb(250,200,43)" rx="2" ry="2" />
<text  x="925.87" y="287.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (2 samples, 0.36%)</title><rect x="41.6" y="453" width="4.2" height="15.0" fill="rgb(225,223,22)" rx="2" ry="2" />
<text  x="44.55" y="463.5" ></text>
</g>
<g >
<title>__gthread_yield (1 samples, 0.18%)</title><rect x="83.6" y="373" width="2.1" height="15.0" fill="rgb(236,33,1)" rx="2" ry="2" />
<text  x="86.62" y="383.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (4 samples, 0.71%)</title><rect x="207.7" y="245" width="8.4" height="15.0" fill="rgb(213,82,34)" rx="2" ry="2" />
<text  x="210.72" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (1 samples, 0.18%)</title><rect x="864.0" y="309" width="2.1" height="15.0" fill="rgb(240,143,47)" rx="2" ry="2" />
<text  x="866.98" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (4 samples, 0.71%)</title><rect x="847.1" y="325" width="8.5" height="15.0" fill="rgb(252,190,28)" rx="2" ry="2" />
<text  x="850.15" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1 samples, 0.18%)</title><rect x="973.4" y="277" width="2.1" height="15.0" fill="rgb(225,97,25)" rx="2" ry="2" />
<text  x="976.35" y="287.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;int&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;int  (107 samples, 19.07%)</title><rect x="769.3" y="453" width="225.1" height="15.0" fill="rgb(226,193,8)" rx="2" ry="2" />
<text  x="772.32" y="463.5" >std::__future_base::_Task_set..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (1 samples, 0.18%)</title><rect x="920.8" y="277" width="2.1" height="15.0" fill="rgb(230,47,45)" rx="2" ry="2" />
<text  x="923.77" y="287.5" ></text>
</g>
</g>
</svg>
