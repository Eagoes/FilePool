<?xml version="1.0" standalone="no"?>
<!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd">
<svg version="1.1" width="1200" height="678" onload="init(evt)" viewBox="0 0 1200 678" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink">
<!-- Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples. -->
<!-- NOTES:  -->
<defs>
	<linearGradient id="background" y1="0" y2="1" x1="0" x2="0" >
		<stop stop-color="#eeeeee" offset="5%" />
		<stop stop-color="#eeeeb0" offset="95%" />
	</linearGradient>
</defs>
<style type="text/css">
	text { font-family:Verdana; font-size:12px; fill:rgb(0,0,0); }
	#search, #ignorecase { opacity:0.1; cursor:pointer; }
	#search:hover, #search.show, #ignorecase:hover, #ignorecase.show { opacity:1; }
	#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
	#title { text-anchor:middle; font-size:17px}
	#unzoom { cursor:pointer; }
	#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
	.hide { display:none; }
	.parent { opacity:0.5; }
</style>
<script type="text/ecmascript">
<![CDATA[
	"use strict";
	var details, searchbtn, unzoombtn, matchedtxt, svg, searching, currentSearchTerm, ignorecase, ignorecaseBtn;
	function init(evt) {
		details = document.getElementById("details").firstChild;
		searchbtn = document.getElementById("search");
		ignorecaseBtn = document.getElementById("ignorecase");
		unzoombtn = document.getElementById("unzoom");
		matchedtxt = document.getElementById("matched");
		svg = document.getElementsByTagName("svg")[0];
		searching = 0;
		currentSearchTerm = null;
	}

	window.addEventListener("click", function(e) {
		var target = find_group(e.target);
		if (target) {
			if (target.nodeName == "a") {
				if (e.ctrlKey === false) return;
				e.preventDefault();
			}
			if (target.classList.contains("parent")) unzoom();
			zoom(target);
		}
		else if (e.target.id == "unzoom") unzoom();
		else if (e.target.id == "search") search_prompt();
		else if (e.target.id == "ignorecase") toggle_ignorecase();
	}, false)

	// mouse-over for info
	// show
	window.addEventListener("mouseover", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = "Function: " + g_to_text(target);
	}, false)

	// clear
	window.addEventListener("mouseout", function(e) {
		var target = find_group(e.target);
		if (target) details.nodeValue = ' ';
	}, false)

	// ctrl-F for search
	window.addEventListener("keydown",function (e) {
		if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
			e.preventDefault();
			search_prompt();
		}
	}, false)

	// ctrl-I to toggle case-sensitive search
	window.addEventListener("keydown",function (e) {
		if (e.ctrlKey && e.keyCode === 73) {
			e.preventDefault();
			toggle_ignorecase();
		}
	}, false)

	// functions
	function find_child(node, selector) {
		var children = node.querySelectorAll(selector);
		if (children.length) return children[0];
		return;
	}
	function find_group(node) {
		var parent = node.parentElement;
		if (!parent) return;
		if (parent.id == "frames") return node;
		return find_group(parent);
	}
	function orig_save(e, attr, val) {
		if (e.attributes["_orig_" + attr] != undefined) return;
		if (e.attributes[attr] == undefined) return;
		if (val == undefined) val = e.attributes[attr].value;
		e.setAttribute("_orig_" + attr, val);
	}
	function orig_load(e, attr) {
		if (e.attributes["_orig_"+attr] == undefined) return;
		e.attributes[attr].value = e.attributes["_orig_" + attr].value;
		e.removeAttribute("_orig_"+attr);
	}
	function g_to_text(e) {
		var text = find_child(e, "title").firstChild.nodeValue;
		return (text)
	}
	function g_to_func(e) {
		var func = g_to_text(e);
		// if there's any manipulation we want to do to the function
		// name before it's searched, do it here before returning.
		return (func);
	}
	function update_text(e) {
		var r = find_child(e, "rect");
		var t = find_child(e, "text");
		var w = parseFloat(r.attributes.width.value) -3;
		var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
		t.attributes.x.value = parseFloat(r.attributes.x.value) + 3;

		// Smaller than this size won't fit anything
		if (w < 2 * 12 * 0.59) {
			t.textContent = "";
			return;
		}

		t.textContent = txt;
		// Fit in full text width
		if (/^ *$/.test(txt) || t.getSubStringLength(0, txt.length) < w)
			return;

		for (var x = txt.length - 2; x > 0; x--) {
			if (t.getSubStringLength(0, x + 2) <= w) {
				t.textContent = txt.substring(0, x) + "..";
				return;
			}
		}
		t.textContent = "";
	}

	// zoom
	function zoom_reset(e) {
		if (e.attributes != undefined) {
			orig_load(e, "x");
			orig_load(e, "width");
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_reset(c[i]);
		}
	}
	function zoom_child(e, x, ratio) {
		if (e.attributes != undefined) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = (parseFloat(e.attributes.x.value) - x - 10) * ratio + 10;
				if (e.tagName == "text")
					e.attributes.x.value = find_child(e.parentNode, "rect[x]").attributes.x.value + 3;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseFloat(e.attributes.width.value) * ratio;
			}
		}

		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_child(c[i], x - 10, ratio);
		}
	}
	function zoom_parent(e) {
		if (e.attributes) {
			if (e.attributes.x != undefined) {
				orig_save(e, "x");
				e.attributes.x.value = 10;
			}
			if (e.attributes.width != undefined) {
				orig_save(e, "width");
				e.attributes.width.value = parseInt(svg.width.baseVal.value) - (10 * 2);
			}
		}
		if (e.childNodes == undefined) return;
		for (var i = 0, c = e.childNodes; i < c.length; i++) {
			zoom_parent(c[i]);
		}
	}
	function zoom(node) {
		var attr = find_child(node, "rect").attributes;
		var width = parseFloat(attr.width.value);
		var xmin = parseFloat(attr.x.value);
		var xmax = parseFloat(xmin + width);
		var ymin = parseFloat(attr.y.value);
		var ratio = (svg.width.baseVal.value - 2 * 10) / width;

		// XXX: Workaround for JavaScript float issues (fix me)
		var fudge = 0.0001;

		unzoombtn.classList.remove("hide");

		var el = document.getElementById("frames").children;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var a = find_child(e, "rect").attributes;
			var ex = parseFloat(a.x.value);
			var ew = parseFloat(a.width.value);
			var upstack;
			// Is it an ancestor
			if (0 == 0) {
				upstack = parseFloat(a.y.value) > ymin;
			} else {
				upstack = parseFloat(a.y.value) < ymin;
			}
			if (upstack) {
				// Direct ancestor
				if (ex <= xmin && (ex+ew+fudge) >= xmax) {
					e.classList.add("parent");
					zoom_parent(e);
					update_text(e);
				}
				// not in current path
				else
					e.classList.add("hide");
			}
			// Children maybe
			else {
				// no common path
				if (ex < xmin || ex + fudge >= xmax) {
					e.classList.add("hide");
				}
				else {
					zoom_child(e, xmin, ratio);
					update_text(e);
				}
			}
		}
		search();
	}
	function unzoom() {
		unzoombtn.classList.add("hide");
		var el = document.getElementById("frames").children;
		for(var i = 0; i < el.length; i++) {
			el[i].classList.remove("parent");
			el[i].classList.remove("hide");
			zoom_reset(el[i]);
			update_text(el[i]);
		}
		search();
	}

	// search
	function toggle_ignorecase() {
		ignorecase = !ignorecase;
		if (ignorecase) {
			ignorecaseBtn.classList.add("show");
		} else {
			ignorecaseBtn.classList.remove("show");
		}
		reset_search();
		search();
	}
	function reset_search() {
		var el = document.querySelectorAll("#frames rect");
		for (var i = 0; i < el.length; i++) {
			orig_load(el[i], "fill")
		}
	}
	function search_prompt() {
		if (!searching) {
			var term = prompt("Enter a search term (regexp " +
			    "allowed, eg: ^ext4_)"
			    + (ignorecase ? ", ignoring case" : "")
			    + "\nPress Ctrl-i to toggle case sensitivity", "");
			if (term != null) {
				currentSearchTerm = term;
				search();
			}
		} else {
			reset_search();
			searching = 0;
			currentSearchTerm = null;
			searchbtn.classList.remove("show");
			searchbtn.firstChild.nodeValue = "Search"
			matchedtxt.classList.add("hide");
			matchedtxt.firstChild.nodeValue = ""
		}
	}
	function search(term) {
		if (currentSearchTerm === null) return;
		var term = currentSearchTerm;

		var re = new RegExp(term, ignorecase ? 'i' : '');
		var el = document.getElementById("frames").children;
		var matches = new Object();
		var maxwidth = 0;
		for (var i = 0; i < el.length; i++) {
			var e = el[i];
			var func = g_to_func(e);
			var rect = find_child(e, "rect");
			if (func == null || rect == null)
				continue;

			// Save max width. Only works as we have a root frame
			var w = parseFloat(rect.attributes.width.value);
			if (w > maxwidth)
				maxwidth = w;

			if (func.match(re)) {
				// highlight
				var x = parseFloat(rect.attributes.x.value);
				orig_save(rect, "fill");
				rect.attributes.fill.value = "rgb(230,0,230)";

				// remember matches
				if (matches[x] == undefined) {
					matches[x] = w;
				} else {
					if (w > matches[x]) {
						// overwrite with parent
						matches[x] = w;
					}
				}
				searching = 1;
			}
		}
		if (!searching)
			return;

		searchbtn.classList.add("show");
		searchbtn.firstChild.nodeValue = "Reset Search";

		// calculate percent matched, excluding vertical overlap
		var count = 0;
		var lastx = -1;
		var lastw = 0;
		var keys = Array();
		for (k in matches) {
			if (matches.hasOwnProperty(k))
				keys.push(k);
		}
		// sort the matched frames by their x location
		// ascending, then width descending
		keys.sort(function(a, b){
			return a - b;
		});
		// Step through frames saving only the biggest bottom-up frames
		// thanks to the sort order. This relies on the tree property
		// where children are always smaller than their parents.
		var fudge = 0.0001;	// JavaScript floating point
		for (var k in keys) {
			var x = parseFloat(keys[k]);
			var w = matches[keys[k]];
			if (x >= lastx + lastw - fudge) {
				count += w;
				lastx = x;
				lastw = w;
			}
		}
		// display matched percent
		matchedtxt.classList.remove("hide");
		var pct = 100 * count / maxwidth;
		if (pct != 100) pct = pct.toFixed(1)
		matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
	}
]]>
</script>
<rect x="0.0" y="0" width="1200.0" height="678.0" fill="url(#background)"  />
<text id="title" x="600.00" y="24" >Flame Graph</text>
<text id="details" x="10.00" y="661" > </text>
<text id="unzoom" x="10.00" y="24" class="hide">Reset Zoom</text>
<text id="search" x="1090.00" y="24" >Search</text>
<text id="ignorecase" x="1174.00" y="24" >ic</text>
<text id="matched" x="1090.00" y="661" > </text>
<g id="frames">
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (141 samples, 0.13%)</title><rect x="890.7" y="165" width="1.5" height="15.0" fill="rgb(215,33,31)" rx="2" ry="2" />
<text  x="893.75" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (74 samples, 0.07%)</title><rect x="246.3" y="133" width="0.8" height="15.0" fill="rgb(251,221,11)" rx="2" ry="2" />
<text  x="249.30" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (95 samples, 0.09%)</title><rect x="932.9" y="277" width="1.0" height="15.0" fill="rgb(253,118,7)" rx="2" ry="2" />
<text  x="935.91" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (16 samples, 0.01%)</title><rect x="473.3" y="277" width="0.1" height="15.0" fill="rgb(245,43,7)" rx="2" ry="2" />
<text  x="476.27" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (11 samples, 0.01%)</title><rect x="204.9" y="277" width="0.1" height="15.0" fill="rgb(211,109,10)" rx="2" ry="2" />
<text  x="207.88" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,122 samples, 1.01%)</title><rect x="212.5" y="325" width="11.9" height="15.0" fill="rgb(229,18,22)" rx="2" ry="2" />
<text  x="215.50" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (67 samples, 0.06%)</title><rect x="41.8" y="309" width="0.7" height="15.0" fill="rgb(235,36,1)" rx="2" ry="2" />
<text  x="44.81" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (217 samples, 0.20%)</title><rect x="987.2" y="229" width="2.3" height="15.0" fill="rgb(252,18,28)" rx="2" ry="2" />
<text  x="990.22" y="239.5" ></text>
</g>
<g >
<title>memblock_rebuild_state (15 samples, 0.01%)</title><rect x="1085.6" y="581" width="0.2" height="15.0" fill="rgb(239,19,12)" rx="2" ry="2" />
<text  x="1088.63" y="591.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (23 samples, 0.02%)</title><rect x="1061.4" y="261" width="0.2" height="15.0" fill="rgb(235,96,44)" rx="2" ry="2" />
<text  x="1064.39" y="271.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;scythedb::Slice*&gt;::base (17 samples, 0.02%)</title><rect x="231.6" y="181" width="0.1" height="15.0" fill="rgb(248,161,33)" rx="2" ry="2" />
<text  x="234.56" y="191.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::ScrambledZipfianGenerator (11 samples, 0.01%)</title><rect x="838.6" y="517" width="0.1" height="15.0" fill="rgb(218,164,11)" rx="2" ry="2" />
<text  x="841.62" y="527.5" ></text>
</g>
<g >
<title>__lll_unlock_wake_private (97 samples, 0.09%)</title><rect x="912.8" y="309" width="1.0" height="15.0" fill="rgb(225,201,23)" rx="2" ry="2" />
<text  x="915.79" y="319.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (927 samples, 0.84%)</title><rect x="894.1" y="293" width="9.9" height="15.0" fill="rgb(243,164,0)" rx="2" ry="2" />
<text  x="897.10" y="303.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (27 samples, 0.02%)</title><rect x="985.2" y="277" width="0.3" height="15.0" fill="rgb(240,88,45)" rx="2" ry="2" />
<text  x="988.22" y="287.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (14 samples, 0.01%)</title><rect x="122.8" y="213" width="0.1" height="15.0" fill="rgb(216,17,24)" rx="2" ry="2" />
<text  x="125.78" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateFallback (29 samples, 0.03%)</title><rect x="470.5" y="181" width="0.3" height="15.0" fill="rgb(247,134,44)" rx="2" ry="2" />
<text  x="473.54" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::max_size (25 samples, 0.02%)</title><rect x="232.4" y="261" width="0.3" height="15.0" fill="rgb(208,38,11)" rx="2" ry="2" />
<text  x="235.39" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (277 samples, 0.25%)</title><rect x="854.3" y="245" width="2.9" height="15.0" fill="rgb(230,131,51)" rx="2" ry="2" />
<text  x="857.25" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (89 samples, 0.08%)</title><rect x="938.9" y="261" width="1.0" height="15.0" fill="rgb(225,82,1)" rx="2" ry="2" />
<text  x="941.91" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (145 samples, 0.13%)</title><rect x="456.1" y="213" width="1.5" height="15.0" fill="rgb(208,156,54)" rx="2" ry="2" />
<text  x="459.10" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (103 samples, 0.09%)</title><rect x="1055.3" y="229" width="1.1" height="15.0" fill="rgb(235,15,52)" rx="2" ry="2" />
<text  x="1058.30" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (7,554 samples, 6.82%)</title><rect x="118.7" y="261" width="80.4" height="15.0" fill="rgb(227,207,5)" rx="2" ry="2" />
<text  x="121.70" y="271.5" >std::_Fun..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (188 samples, 0.17%)</title><rect x="956.3" y="245" width="2.0" height="15.0" fill="rgb(240,42,31)" rx="2" ry="2" />
<text  x="959.34" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (21 samples, 0.02%)</title><rect x="488.4" y="261" width="0.3" height="15.0" fill="rgb(244,194,37)" rx="2" ry="2" />
<text  x="491.44" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (43 samples, 0.04%)</title><rect x="470.1" y="165" width="0.4" height="15.0" fill="rgb(218,57,32)" rx="2" ry="2" />
<text  x="473.08" y="175.5" ></text>
</g>
<g >
<title>operator delete (30 samples, 0.03%)</title><rect x="901.1" y="101" width="0.3" height="15.0" fill="rgb(252,69,1)" rx="2" ry="2" />
<text  x="904.12" y="111.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (186 samples, 0.17%)</title><rect x="930.6" y="309" width="1.9" height="15.0" fill="rgb(216,139,42)" rx="2" ry="2" />
<text  x="933.57" y="319.5" ></text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (30 samples, 0.03%)</title><rect x="870.4" y="245" width="0.3" height="15.0" fill="rgb(218,69,18)" rx="2" ry="2" />
<text  x="873.41" y="255.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma.localalias.0 (157 samples, 0.14%)</title><rect x="1127.3" y="597" width="1.6" height="15.0" fill="rgb(243,222,47)" rx="2" ry="2" />
<text  x="1130.27" y="607.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (14 samples, 0.01%)</title><rect x="891.8" y="149" width="0.2" height="15.0" fill="rgb(247,0,2)" rx="2" ry="2" />
<text  x="894.81" y="159.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (17 samples, 0.02%)</title><rect x="932.3" y="293" width="0.2" height="15.0" fill="rgb(242,18,17)" rx="2" ry="2" />
<text  x="935.35" y="303.5" ></text>
</g>
<g >
<title>std::swap&lt;pmemoid&gt; (15 samples, 0.01%)</title><rect x="465.3" y="229" width="0.2" height="15.0" fill="rgb(234,79,3)" rx="2" ry="2" />
<text  x="468.34" y="239.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (422 samples, 0.38%)</title><rect x="878.9" y="245" width="4.5" height="15.0" fill="rgb(247,32,1)" rx="2" ry="2" />
<text  x="881.88" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (15 samples, 0.01%)</title><rect x="885.2" y="293" width="0.2" height="15.0" fill="rgb(217,56,17)" rx="2" ry="2" />
<text  x="888.20" y="303.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (17 samples, 0.02%)</title><rect x="255.3" y="277" width="0.2" height="15.0" fill="rgb(236,128,36)" rx="2" ry="2" />
<text  x="258.33" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (133 samples, 0.12%)</title><rect x="930.9" y="293" width="1.4" height="15.0" fill="rgb(205,75,30)" rx="2" ry="2" />
<text  x="933.86" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (12 samples, 0.01%)</title><rect x="969.6" y="245" width="0.1" height="15.0" fill="rgb(226,218,48)" rx="2" ry="2" />
<text  x="972.58" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (57 samples, 0.05%)</title><rect x="855.7" y="213" width="0.7" height="15.0" fill="rgb(253,133,16)" rx="2" ry="2" />
<text  x="858.74" y="223.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (29 samples, 0.03%)</title><rect x="194.5" y="197" width="0.4" height="15.0" fill="rgb(248,26,35)" rx="2" ry="2" />
<text  x="197.55" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (209 samples, 0.19%)</title><rect x="895.3" y="213" width="2.2" height="15.0" fill="rgb(244,55,14)" rx="2" ry="2" />
<text  x="898.25" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (777 samples, 0.70%)</title><rect x="919.1" y="309" width="8.3" height="15.0" fill="rgb(226,169,2)" rx="2" ry="2" />
<text  x="922.10" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (18 samples, 0.02%)</title><rect x="219.6" y="261" width="0.2" height="15.0" fill="rgb(215,165,31)" rx="2" ry="2" />
<text  x="222.61" y="271.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (16 samples, 0.01%)</title><rect x="455.9" y="213" width="0.2" height="15.0" fill="rgb(211,229,34)" rx="2" ry="2" />
<text  x="458.93" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="1050.9" y="213" width="0.1" height="15.0" fill="rgb(207,172,36)" rx="2" ry="2" />
<text  x="1053.86" y="223.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (135 samples, 0.12%)</title><rect x="1118.0" y="517" width="1.5" height="15.0" fill="rgb(250,153,12)" rx="2" ry="2" />
<text  x="1121.03" y="527.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (132 samples, 0.12%)</title><rect x="909.3" y="245" width="1.4" height="15.0" fill="rgb(218,187,34)" rx="2" ry="2" />
<text  x="912.28" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (16 samples, 0.01%)</title><rect x="495.0" y="293" width="0.2" height="15.0" fill="rgb(225,106,41)" rx="2" ry="2" />
<text  x="498.03" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (3,967 samples, 3.58%)</title><rect x="55.5" y="261" width="42.3" height="15.0" fill="rgb(244,217,44)" rx="2" ry="2" />
<text  x="58.54" y="271.5" >pme..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (15 samples, 0.01%)</title><rect x="945.7" y="213" width="0.2" height="15.0" fill="rgb(227,80,0)" rx="2" ry="2" />
<text  x="948.73" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;void  (251 samples, 0.23%)</title><rect x="1003.6" y="277" width="2.7" height="15.0" fill="rgb(220,5,39)" rx="2" ry="2" />
<text  x="1006.64" y="287.5" ></text>
</g>
<g >
<title>[unknown] (61 samples, 0.06%)</title><rect x="812.7" y="565" width="0.6" height="15.0" fill="rgb(235,7,40)" rx="2" ry="2" />
<text  x="815.67" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (28 samples, 0.03%)</title><rect x="480.8" y="277" width="0.3" height="15.0" fill="rgb(250,2,18)" rx="2" ry="2" />
<text  x="483.79" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (4,700 samples, 4.24%)</title><rect x="125.0" y="197" width="50.1" height="15.0" fill="rgb(234,76,46)" rx="2" ry="2" />
<text  x="128.04" y="207.5" >scyth..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (17 samples, 0.02%)</title><rect x="1044.8" y="181" width="0.1" height="15.0" fill="rgb(253,222,44)" rx="2" ry="2" />
<text  x="1047.76" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (513 samples, 0.46%)</title><rect x="964.8" y="293" width="5.5" height="15.0" fill="rgb(231,140,31)" rx="2" ry="2" />
<text  x="967.81" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::DecodeMessageField (742 samples, 0.67%)</title><rect x="225.3" y="341" width="7.9" height="15.0" fill="rgb(247,120,18)" rx="2" ry="2" />
<text  x="228.33" y="351.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (22,775 samples, 20.55%)</title><rect x="839.7" y="501" width="242.5" height="15.0" fill="rgb(215,115,39)" rx="2" ry="2" />
<text  x="842.69" y="511.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (513 samples, 0.46%)</title><rect x="888.5" y="277" width="5.4" height="15.0" fill="rgb(227,225,16)" rx="2" ry="2" />
<text  x="891.47" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (12 samples, 0.01%)</title><rect x="903.4" y="181" width="0.1" height="15.0" fill="rgb(248,179,23)" rx="2" ry="2" />
<text  x="906.39" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (2,073 samples, 1.87%)</title><rect x="329.7" y="229" width="22.1" height="15.0" fill="rgb(230,81,26)" rx="2" ry="2" />
<text  x="332.70" y="239.5" >p..</text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (16 samples, 0.01%)</title><rect x="889.9" y="197" width="0.2" height="15.0" fill="rgb(245,204,16)" rx="2" ry="2" />
<text  x="892.95" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (14 samples, 0.01%)</title><rect x="1008.1" y="181" width="0.2" height="15.0" fill="rgb(217,3,37)" rx="2" ry="2" />
<text  x="1011.13" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (21 samples, 0.02%)</title><rect x="480.2" y="261" width="0.3" height="15.0" fill="rgb(234,48,32)" rx="2" ry="2" />
<text  x="483.24" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (644 samples, 0.58%)</title><rect x="1035.4" y="309" width="6.9" height="15.0" fill="rgb(230,76,17)" rx="2" ry="2" />
<text  x="1038.44" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (20 samples, 0.02%)</title><rect x="1060.7" y="165" width="0.2" height="15.0" fill="rgb(247,61,21)" rx="2" ry="2" />
<text  x="1063.69" y="175.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_entry_for_index (141 samples, 0.13%)</title><rect x="534.7" y="293" width="1.5" height="15.0" fill="rgb(232,114,53)" rx="2" ry="2" />
<text  x="537.71" y="303.5" ></text>
</g>
<g >
<title>__pow (14 samples, 0.01%)</title><rect x="1063.1" y="261" width="0.1" height="15.0" fill="rgb(211,164,50)" rx="2" ry="2" />
<text  x="1066.10" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (33 samples, 0.03%)</title><rect x="482.6" y="245" width="0.4" height="15.0" fill="rgb(212,96,34)" rx="2" ry="2" />
<text  x="485.63" y="255.5" ></text>
</g>
<g >
<title>ravl_foreach_node (33 samples, 0.03%)</title><rect x="1113.9" y="581" width="0.4" height="15.0" fill="rgb(232,69,50)" rx="2" ry="2" />
<text  x="1116.92" y="591.5" ></text>
</g>
<g >
<title>_IO_str_init_static_internal (36 samples, 0.03%)</title><rect x="813.9" y="565" width="0.4" height="15.0" fill="rgb(242,184,50)" rx="2" ry="2" />
<text  x="816.94" y="575.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (12 samples, 0.01%)</title><rect x="203.5" y="309" width="0.1" height="15.0" fill="rgb(221,183,20)" rx="2" ry="2" />
<text  x="206.46" y="319.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (170 samples, 0.15%)</title><rect x="881.6" y="197" width="1.8" height="15.0" fill="rgb(252,91,12)" rx="2" ry="2" />
<text  x="884.57" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (21 samples, 0.02%)</title><rect x="887.4" y="277" width="0.2" height="15.0" fill="rgb(217,166,49)" rx="2" ry="2" />
<text  x="890.39" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (32 samples, 0.03%)</title><rect x="1058.1" y="245" width="0.4" height="15.0" fill="rgb(232,180,37)" rx="2" ry="2" />
<text  x="1061.13" y="255.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Dequeue (26 samples, 0.02%)</title><rect x="791.6" y="373" width="0.3" height="15.0" fill="rgb(205,89,45)" rx="2" ry="2" />
<text  x="794.61" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (131 samples, 0.12%)</title><rect x="1043.4" y="181" width="1.4" height="15.0" fill="rgb(248,208,16)" rx="2" ry="2" />
<text  x="1046.36" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (39 samples, 0.04%)</title><rect x="933.5" y="261" width="0.4" height="15.0" fill="rgb(250,60,10)" rx="2" ry="2" />
<text  x="936.45" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (22 samples, 0.02%)</title><rect x="203.7" y="277" width="0.2" height="15.0" fill="rgb(214,71,41)" rx="2" ry="2" />
<text  x="206.69" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (22,775 samples, 20.55%)</title><rect x="839.7" y="469" width="242.5" height="15.0" fill="rgb(249,154,9)" rx="2" ry="2" />
<text  x="842.69" y="479.5" >std::function&lt;std::unique_ptr&lt;st..</text>
</g>
<g >
<title>__gthread_yield (22 samples, 0.02%)</title><rect x="39.2" y="357" width="0.2" height="15.0" fill="rgb(241,43,43)" rx="2" ry="2" />
<text  x="42.20" y="367.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (20 samples, 0.02%)</title><rect x="357.2" y="181" width="0.2" height="15.0" fill="rgb(237,90,9)" rx="2" ry="2" />
<text  x="360.17" y="191.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::ZipfianGenerator (11 samples, 0.01%)</title><rect x="838.6" y="485" width="0.1" height="15.0" fill="rgb(234,196,21)" rx="2" ry="2" />
<text  x="841.62" y="495.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (375 samples, 0.34%)</title><rect x="899.6" y="197" width="4.0" height="15.0" fill="rgb(215,226,36)" rx="2" ry="2" />
<text  x="902.63" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (968 samples, 0.87%)</title><rect x="530.9" y="325" width="10.3" height="15.0" fill="rgb(211,201,50)" rx="2" ry="2" />
<text  x="533.93" y="335.5" ></text>
</g>
<g >
<title>ycsbc::DiscreteGenerator&lt;ycsbc::Operation&gt;::Next (934 samples, 0.84%)</title><rect x="1072.0" y="309" width="10.0" height="15.0" fill="rgb(252,137,52)" rx="2" ry="2" />
<text  x="1075.04" y="319.5" ></text>
</g>
<g >
<title>operator new (13 samples, 0.01%)</title><rect x="1051.2" y="197" width="0.1" height="15.0" fill="rgb(223,146,17)" rx="2" ry="2" />
<text  x="1054.16" y="207.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul, true, true&gt;::__calc (10 samples, 0.01%)</title><rect x="1070.8" y="133" width="0.1" height="15.0" fill="rgb(244,85,52)" rx="2" ry="2" />
<text  x="1073.83" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (28 samples, 0.03%)</title><rect x="973.5" y="245" width="0.3" height="15.0" fill="rgb(232,219,24)" rx="2" ry="2" />
<text  x="976.52" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (20 samples, 0.02%)</title><rect x="1051.4" y="229" width="0.2" height="15.0" fill="rgb(208,88,20)" rx="2" ry="2" />
<text  x="1054.43" y="239.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (10 samples, 0.01%)</title><rect x="25.2" y="421" width="0.1" height="15.0" fill="rgb(226,11,5)" rx="2" ry="2" />
<text  x="28.19" y="431.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_check_len (29 samples, 0.03%)</title><rect x="44.7" y="277" width="0.3" height="15.0" fill="rgb(237,1,45)" rx="2" ry="2" />
<text  x="47.71" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (255 samples, 0.23%)</title><rect x="987.2" y="245" width="2.7" height="15.0" fill="rgb(244,180,8)" rx="2" ry="2" />
<text  x="990.16" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (10 samples, 0.01%)</title><rect x="255.2" y="229" width="0.1" height="15.0" fill="rgb(215,173,49)" rx="2" ry="2" />
<text  x="258.21" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (197 samples, 0.18%)</title><rect x="1039.0" y="213" width="2.1" height="15.0" fill="rgb(208,45,2)" rx="2" ry="2" />
<text  x="1042.00" y="223.5" ></text>
</g>
<g >
<title>ulog_inc_gen_num (10 samples, 0.01%)</title><rect x="1117.6" y="581" width="0.1" height="15.0" fill="rgb(205,171,31)" rx="2" ry="2" />
<text  x="1120.64" y="591.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (25 samples, 0.02%)</title><rect x="195.2" y="197" width="0.2" height="15.0" fill="rgb(232,106,46)" rx="2" ry="2" />
<text  x="198.16" y="207.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (57 samples, 0.05%)</title><rect x="1132.2" y="597" width="0.6" height="15.0" fill="rgb(253,101,7)" rx="2" ry="2" />
<text  x="1135.20" y="607.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;, std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (11 samples, 0.01%)</title><rect x="242.6" y="69" width="0.2" height="15.0" fill="rgb(212,79,8)" rx="2" ry="2" />
<text  x="245.65" y="79.5" ></text>
</g>
<g >
<title>std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~allocator (16 samples, 0.01%)</title><rect x="898.7" y="181" width="0.2" height="15.0" fill="rgb(249,182,23)" rx="2" ry="2" />
<text  x="901.72" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (276 samples, 0.25%)</title><rect x="1050.1" y="277" width="2.9" height="15.0" fill="rgb(219,83,21)" rx="2" ry="2" />
<text  x="1053.08" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (10 samples, 0.01%)</title><rect x="974.5" y="309" width="0.1" height="15.0" fill="rgb(237,200,39)" rx="2" ry="2" />
<text  x="977.45" y="319.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (34 samples, 0.03%)</title><rect x="982.7" y="277" width="0.3" height="15.0" fill="rgb(229,101,16)" rx="2" ry="2" />
<text  x="985.65" y="287.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (72,054 samples, 65.03%)</title><rect x="29.2" y="421" width="767.3" height="15.0" fill="rgb(251,84,28)" rx="2" ry="2" />
<text  x="32.19" y="431.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>_itoa_word (11 samples, 0.01%)</title><rect x="1118.3" y="501" width="0.1" height="15.0" fill="rgb(253,207,35)" rx="2" ry="2" />
<text  x="1121.28" y="511.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (38 samples, 0.03%)</title><rect x="472.6" y="229" width="0.4" height="15.0" fill="rgb(253,75,1)" rx="2" ry="2" />
<text  x="475.63" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (75 samples, 0.07%)</title><rect x="1019.3" y="101" width="0.8" height="15.0" fill="rgb(224,18,53)" rx="2" ry="2" />
<text  x="1022.28" y="111.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (44 samples, 0.04%)</title><rect x="923.3" y="245" width="0.5" height="15.0" fill="rgb(205,20,39)" rx="2" ry="2" />
<text  x="926.35" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::Slice&gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (12 samples, 0.01%)</title><rect x="44.6" y="261" width="0.1" height="15.0" fill="rgb(224,104,35)" rx="2" ry="2" />
<text  x="47.57" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18 samples, 0.02%)</title><rect x="989.0" y="213" width="0.2" height="15.0" fill="rgb(231,42,16)" rx="2" ry="2" />
<text  x="992.04" y="223.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (41 samples, 0.04%)</title><rect x="121.1" y="229" width="0.5" height="15.0" fill="rgb(254,79,33)" rx="2" ry="2" />
<text  x="124.14" y="239.5" ></text>
</g>
<g >
<title>operator delete (13 samples, 0.01%)</title><rect x="1025.0" y="245" width="0.1" height="15.0" fill="rgb(224,74,32)" rx="2" ry="2" />
<text  x="1028.01" y="255.5" ></text>
</g>
<g >
<title>lane_redo_extend (10 samples, 0.01%)</title><rect x="1145.5" y="597" width="0.1" height="15.0" fill="rgb(232,161,12)" rx="2" ry="2" />
<text  x="1148.54" y="607.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (876 samples, 0.79%)</title><rect x="894.6" y="261" width="9.4" height="15.0" fill="rgb(226,96,54)" rx="2" ry="2" />
<text  x="897.65" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::GetMaxHeight (37 samples, 0.03%)</title><rect x="463.0" y="277" width="0.4" height="15.0" fill="rgb(245,202,50)" rx="2" ry="2" />
<text  x="466.02" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (12 samples, 0.01%)</title><rect x="251.9" y="277" width="0.2" height="15.0" fill="rgb(250,8,47)" rx="2" ry="2" />
<text  x="254.94" y="287.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (29 samples, 0.03%)</title><rect x="44.1" y="245" width="0.3" height="15.0" fill="rgb(249,115,25)" rx="2" ry="2" />
<text  x="47.10" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (65 samples, 0.06%)</title><rect x="175.1" y="197" width="0.7" height="15.0" fill="rgb(244,219,19)" rx="2" ry="2" />
<text  x="178.09" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (141 samples, 0.13%)</title><rect x="741.3" y="357" width="1.5" height="15.0" fill="rgb(240,138,15)" rx="2" ry="2" />
<text  x="744.30" y="367.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (379 samples, 0.34%)</title><rect x="742.8" y="357" width="4.0" height="15.0" fill="rgb(222,208,5)" rx="2" ry="2" />
<text  x="745.80" y="367.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (11 samples, 0.01%)</title><rect x="964.4" y="229" width="0.1" height="15.0" fill="rgb(242,123,1)" rx="2" ry="2" />
<text  x="967.42" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (47 samples, 0.04%)</title><rect x="983.0" y="277" width="0.5" height="15.0" fill="rgb(227,206,0)" rx="2" ry="2" />
<text  x="986.02" y="287.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (22,775 samples, 20.55%)</title><rect x="839.7" y="565" width="242.5" height="15.0" fill="rgb(237,54,44)" rx="2" ry="2" />
<text  x="842.69" y="575.5" >std::call_once&lt;void </text>
</g>
<g >
<title>pmemobj_direct_inline (20 samples, 0.02%)</title><rect x="203.7" y="261" width="0.2" height="15.0" fill="rgb(250,24,10)" rx="2" ry="2" />
<text  x="206.71" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (51 samples, 0.05%)</title><rect x="195.4" y="197" width="0.6" height="15.0" fill="rgb(219,140,25)" rx="2" ry="2" />
<text  x="198.43" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (160 samples, 0.14%)</title><rect x="860.9" y="197" width="1.7" height="15.0" fill="rgb(221,100,43)" rx="2" ry="2" />
<text  x="863.85" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="1051.5" y="213" width="0.1" height="15.0" fill="rgb(231,84,52)" rx="2" ry="2" />
<text  x="1054.48" y="223.5" ></text>
</g>
<g >
<title>XXH64_finalize (172 samples, 0.16%)</title><rect x="874.7" y="213" width="1.8" height="15.0" fill="rgb(230,123,36)" rx="2" ry="2" />
<text  x="877.66" y="223.5" ></text>
</g>
<g >
<title>operator new (18 samples, 0.02%)</title><rect x="923.6" y="229" width="0.2" height="15.0" fill="rgb(245,46,0)" rx="2" ry="2" />
<text  x="926.61" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (37 samples, 0.03%)</title><rect x="234.5" y="277" width="0.4" height="15.0" fill="rgb(245,142,26)" rx="2" ry="2" />
<text  x="237.49" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (11 samples, 0.01%)</title><rect x="1046.6" y="213" width="0.1" height="15.0" fill="rgb(226,70,50)" rx="2" ry="2" />
<text  x="1049.55" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="1114.6" y="565" width="0.2" height="15.0" fill="rgb(253,68,45)" rx="2" ry="2" />
<text  x="1117.56" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::GetMaxHeight (51 samples, 0.05%)</title><rect x="259.5" y="261" width="0.5" height="15.0" fill="rgb(238,59,3)" rx="2" ry="2" />
<text  x="262.49" y="271.5" ></text>
</g>
<g >
<title>realloc (73 samples, 0.07%)</title><rect x="1114.3" y="581" width="0.8" height="15.0" fill="rgb(229,15,33)" rx="2" ry="2" />
<text  x="1117.29" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (18 samples, 0.02%)</title><rect x="989.3" y="197" width="0.2" height="15.0" fill="rgb(227,8,17)" rx="2" ry="2" />
<text  x="992.30" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (54 samples, 0.05%)</title><rect x="1111.9" y="581" width="0.5" height="15.0" fill="rgb(214,152,48)" rx="2" ry="2" />
<text  x="1114.86" y="591.5" ></text>
</g>
<g >
<title>std::function&lt;void  (93 samples, 0.08%)</title><rect x="902.4" y="165" width="1.0" height="15.0" fill="rgb(238,196,0)" rx="2" ry="2" />
<text  x="905.40" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (3,942 samples, 3.56%)</title><rect x="55.8" y="245" width="42.0" height="15.0" fill="rgb(251,71,24)" rx="2" ry="2" />
<text  x="58.80" y="255.5" >pme..</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (16 samples, 0.01%)</title><rect x="541.0" y="293" width="0.1" height="15.0" fill="rgb(207,45,13)" rx="2" ry="2" />
<text  x="543.95" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (18 samples, 0.02%)</title><rect x="950.2" y="293" width="0.2" height="15.0" fill="rgb(246,201,51)" rx="2" ry="2" />
<text  x="953.20" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (31 samples, 0.03%)</title><rect x="830.4" y="549" width="0.3" height="15.0" fill="rgb(218,96,36)" rx="2" ry="2" />
<text  x="833.42" y="559.5" ></text>
</g>
<g >
<title>tx_range_def_cmp (11 samples, 0.01%)</title><rect x="1116.0" y="581" width="0.1" height="15.0" fill="rgb(208,125,32)" rx="2" ry="2" />
<text  x="1118.95" y="591.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (431 samples, 0.39%)</title><rect x="263.2" y="229" width="4.6" height="15.0" fill="rgb(214,69,41)" rx="2" ry="2" />
<text  x="266.24" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (20 samples, 0.02%)</title><rect x="905.4" y="325" width="0.2" height="15.0" fill="rgb(207,151,49)" rx="2" ry="2" />
<text  x="908.36" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (12 samples, 0.01%)</title><rect x="1023.2" y="293" width="0.1" height="15.0" fill="rgb(227,27,48)" rx="2" ry="2" />
<text  x="1026.18" y="303.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (25 samples, 0.02%)</title><rect x="247.8" y="277" width="0.3" height="15.0" fill="rgb(206,169,22)" rx="2" ry="2" />
<text  x="250.80" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="1022.6" y="293" width="0.1" height="15.0" fill="rgb(249,221,46)" rx="2" ry="2" />
<text  x="1025.63" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="988.6" y="181" width="0.2" height="15.0" fill="rgb(252,78,32)" rx="2" ry="2" />
<text  x="991.59" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (18 samples, 0.02%)</title><rect x="1010.2" y="165" width="0.2" height="15.0" fill="rgb(209,79,41)" rx="2" ry="2" />
<text  x="1013.23" y="175.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (12 samples, 0.01%)</title><rect x="218.3" y="293" width="0.1" height="15.0" fill="rgb(239,81,7)" rx="2" ry="2" />
<text  x="221.30" y="303.5" ></text>
</g>
<g >
<title>XXH64_round (24 samples, 0.02%)</title><rect x="995.6" y="181" width="0.2" height="15.0" fill="rgb(254,105,41)" rx="2" ry="2" />
<text  x="998.58" y="191.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="1022.9" y="293" width="0.1" height="15.0" fill="rgb(236,222,34)" rx="2" ry="2" />
<text  x="1025.90" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::back (20 samples, 0.02%)</title><rect x="233.0" y="293" width="0.2" height="15.0" fill="rgb(227,171,7)" rx="2" ry="2" />
<text  x="235.96" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (36 samples, 0.03%)</title><rect x="1055.8" y="197" width="0.4" height="15.0" fill="rgb(222,33,49)" rx="2" ry="2" />
<text  x="1058.85" y="207.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (182 samples, 0.16%)</title><rect x="908.9" y="309" width="1.9" height="15.0" fill="rgb(245,29,43)" rx="2" ry="2" />
<text  x="911.88" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (21 samples, 0.02%)</title><rect x="926.0" y="261" width="0.2" height="15.0" fill="rgb(213,208,32)" rx="2" ry="2" />
<text  x="929.01" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (37 samples, 0.03%)</title><rect x="855.3" y="213" width="0.4" height="15.0" fill="rgb(219,98,17)" rx="2" ry="2" />
<text  x="858.35" y="223.5" ></text>
</g>
<g >
<title>main (11 samples, 0.01%)</title><rect x="838.6" y="565" width="0.1" height="15.0" fill="rgb(241,1,20)" rx="2" ry="2" />
<text  x="841.62" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (13 samples, 0.01%)</title><rect x="966.3" y="197" width="0.2" height="15.0" fill="rgb(228,111,4)" rx="2" ry="2" />
<text  x="969.33" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (14 samples, 0.01%)</title><rect x="1026.5" y="261" width="0.2" height="15.0" fill="rgb(236,162,50)" rx="2" ry="2" />
<text  x="1029.51" y="271.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (12 samples, 0.01%)</title><rect x="928.0" y="293" width="0.2" height="15.0" fill="rgb(242,221,17)" rx="2" ry="2" />
<text  x="931.04" y="303.5" ></text>
</g>
<g >
<title>XXH64_finalize (14 samples, 0.01%)</title><rect x="876.6" y="229" width="0.1" height="15.0" fill="rgb(229,133,54)" rx="2" ry="2" />
<text  x="879.56" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (16 samples, 0.01%)</title><rect x="480.5" y="261" width="0.1" height="15.0" fill="rgb(243,141,6)" rx="2" ry="2" />
<text  x="483.46" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="952.2" y="229" width="0.1" height="15.0" fill="rgb(211,4,12)" rx="2" ry="2" />
<text  x="955.21" y="239.5" ></text>
</g>
<g >
<title>operation_add_typed_entry (93 samples, 0.08%)</title><rect x="1165.4" y="597" width="1.0" height="15.0" fill="rgb(206,133,52)" rx="2" ry="2" />
<text  x="1168.44" y="607.5" ></text>
</g>
<g >
<title>pmem_drain (11 samples, 0.01%)</title><rect x="1097.5" y="581" width="0.1" height="15.0" fill="rgb(228,44,37)" rx="2" ry="2" />
<text  x="1100.50" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (96 samples, 0.09%)</title><rect x="973.0" y="277" width="1.0" height="15.0" fill="rgb(243,25,2)" rx="2" ry="2" />
<text  x="976.02" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Get (15,449 samples, 13.94%)</title><rect x="45.5" y="341" width="164.5" height="15.0" fill="rgb(247,172,40)" rx="2" ry="2" />
<text  x="48.46" y="351.5" >scythedb::NVMBlock::Get</text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (4,963 samples, 4.48%)</title><rect x="122.9" y="213" width="52.9" height="15.0" fill="rgb(211,58,51)" rx="2" ry="2" />
<text  x="125.93" y="223.5" >scyth..</text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (77 samples, 0.07%)</title><rect x="198.3" y="245" width="0.8" height="15.0" fill="rgb(208,103,10)" rx="2" ry="2" />
<text  x="201.33" y="255.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (100 samples, 0.09%)</title><rect x="230.8" y="261" width="1.1" height="15.0" fill="rgb(214,81,52)" rx="2" ry="2" />
<text  x="233.79" y="271.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;, std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (24 samples, 0.02%)</title><rect x="243.7" y="53" width="0.2" height="15.0" fill="rgb(231,131,0)" rx="2" ry="2" />
<text  x="246.65" y="63.5" ></text>
</g>
<g >
<title>[libc-2.28.so] (10 samples, 0.01%)</title><rect x="814.5" y="549" width="0.1" height="15.0" fill="rgb(248,229,33)" rx="2" ry="2" />
<text  x="817.50" y="559.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextSequenceKey[abi:cxx11] (2,288 samples, 2.06%)</title><rect x="948.0" y="325" width="24.4" height="15.0" fill="rgb(242,20,51)" rx="2" ry="2" />
<text  x="951.00" y="335.5" >y..</text>
</g>
<g >
<title>std::_Function_handler&lt;void  (1,167 samples, 1.05%)</title><rect x="235.3" y="245" width="12.4" height="15.0" fill="rgb(228,166,18)" rx="2" ry="2" />
<text  x="238.27" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (11 samples, 0.01%)</title><rect x="943.4" y="149" width="0.1" height="15.0" fill="rgb(233,26,22)" rx="2" ry="2" />
<text  x="946.37" y="159.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (84 samples, 0.08%)</title><rect x="740.1" y="357" width="0.9" height="15.0" fill="rgb(248,51,18)" rx="2" ry="2" />
<text  x="743.13" y="367.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="973.6" y="213" width="0.2" height="15.0" fill="rgb(243,27,23)" rx="2" ry="2" />
<text  x="976.59" y="223.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="930.2" y="261" width="0.2" height="15.0" fill="rgb(224,197,44)" rx="2" ry="2" />
<text  x="933.25" y="271.5" ></text>
</g>
<g >
<title>rand (14 samples, 0.01%)</title><rect x="918.7" y="309" width="0.2" height="15.0" fill="rgb(219,110,20)" rx="2" ry="2" />
<text  x="921.70" y="319.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (16 samples, 0.01%)</title><rect x="197.8" y="213" width="0.2" height="15.0" fill="rgb(245,167,3)" rx="2" ry="2" />
<text  x="200.78" y="223.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (57 samples, 0.05%)</title><rect x="192.9" y="181" width="0.6" height="15.0" fill="rgb(246,37,42)" rx="2" ry="2" />
<text  x="195.94" y="191.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::AssignQueue (202 samples, 0.18%)</title><rect x="994.2" y="277" width="2.2" height="15.0" fill="rgb(230,89,17)" rx="2" ry="2" />
<text  x="997.22" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (259 samples, 0.23%)</title><rect x="241.3" y="101" width="2.8" height="15.0" fill="rgb(239,187,15)" rx="2" ry="2" />
<text  x="244.34" y="111.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (13 samples, 0.01%)</title><rect x="1027.8" y="181" width="0.2" height="15.0" fill="rgb(233,56,4)" rx="2" ry="2" />
<text  x="1030.84" y="191.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (82 samples, 0.07%)</title><rect x="863.7" y="197" width="0.9" height="15.0" fill="rgb(253,109,7)" rx="2" ry="2" />
<text  x="866.74" y="207.5" ></text>
</g>
<g >
<title>operator new (27 samples, 0.02%)</title><rect x="967.5" y="165" width="0.3" height="15.0" fill="rgb(218,97,47)" rx="2" ry="2" />
<text  x="970.54" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (118 samples, 0.11%)</title><rect x="928.8" y="261" width="1.2" height="15.0" fill="rgb(234,27,11)" rx="2" ry="2" />
<text  x="931.76" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (37 samples, 0.03%)</title><rect x="941.0" y="213" width="0.3" height="15.0" fill="rgb(242,98,34)" rx="2" ry="2" />
<text  x="943.95" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (42 samples, 0.04%)</title><rect x="956.8" y="229" width="0.4" height="15.0" fill="rgb(248,218,12)" rx="2" ry="2" />
<text  x="959.79" y="239.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::operator= (397 samples, 0.36%)</title><rect x="536.7" y="293" width="4.3" height="15.0" fill="rgb(231,209,22)" rx="2" ry="2" />
<text  x="539.73" y="303.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (71,463 samples, 64.50%)</title><rect x="32.5" y="389" width="761.1" height="15.0" fill="rgb(230,228,6)" rx="2" ry="2" />
<text  x="35.52" y="399.5" >std::__invoke_impl&lt;void, void </text>
</g>
<g >
<title>__random (338 samples, 0.31%)</title><rect x="913.8" y="309" width="3.6" height="15.0" fill="rgb(209,218,35)" rx="2" ry="2" />
<text  x="916.83" y="319.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (63 samples, 0.06%)</title><rect x="939.1" y="229" width="0.7" height="15.0" fill="rgb(220,194,4)" rx="2" ry="2" />
<text  x="942.09" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (56 samples, 0.05%)</title><rect x="886.8" y="261" width="0.6" height="15.0" fill="rgb(206,128,50)" rx="2" ry="2" />
<text  x="889.75" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (11 samples, 0.01%)</title><rect x="929.7" y="181" width="0.1" height="15.0" fill="rgb(218,174,43)" rx="2" ry="2" />
<text  x="932.68" y="191.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (596 samples, 0.54%)</title><rect x="814.3" y="565" width="6.4" height="15.0" fill="rgb(218,109,48)" rx="2" ry="2" />
<text  x="817.33" y="575.5" ></text>
</g>
<g >
<title>std::_Mu&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*, false, false&gt;::operator (31 samples, 0.03%)</title><rect x="796.5" y="421" width="0.4" height="15.0" fill="rgb(229,152,36)" rx="2" ry="2" />
<text  x="799.53" y="431.5" ></text>
</g>
<g >
<title>std::function&lt;void  (290 samples, 0.26%)</title><rect x="252.2" y="261" width="3.1" height="15.0" fill="rgb(234,67,30)" rx="2" ry="2" />
<text  x="255.23" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;int  (83 samples, 0.07%)</title><rect x="256.0" y="261" width="0.9" height="15.0" fill="rgb(218,12,45)" rx="2" ry="2" />
<text  x="259.00" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (73 samples, 0.07%)</title><rect x="256.0" y="229" width="0.8" height="15.0" fill="rgb(245,2,53)" rx="2" ry="2" />
<text  x="259.05" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (16 samples, 0.01%)</title><rect x="964.4" y="245" width="0.1" height="15.0" fill="rgb(240,228,26)" rx="2" ry="2" />
<text  x="967.37" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (29 samples, 0.03%)</title><rect x="921.7" y="293" width="0.3" height="15.0" fill="rgb(226,126,30)" rx="2" ry="2" />
<text  x="924.72" y="303.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (11 samples, 0.01%)</title><rect x="794.5" y="405" width="0.1" height="15.0" fill="rgb(240,166,29)" rx="2" ry="2" />
<text  x="797.52" y="415.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (873 samples, 0.79%)</title><rect x="1011.5" y="245" width="9.3" height="15.0" fill="rgb(245,29,3)" rx="2" ry="2" />
<text  x="1014.46" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (1,051 samples, 0.95%)</title><rect x="212.5" y="309" width="11.2" height="15.0" fill="rgb(218,186,26)" rx="2" ry="2" />
<text  x="215.51" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::push_back (243 samples, 0.22%)</title><rect x="42.7" y="325" width="2.6" height="15.0" fill="rgb(247,108,10)" rx="2" ry="2" />
<text  x="45.68" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (15 samples, 0.01%)</title><rect x="1027.6" y="197" width="0.1" height="15.0" fill="rgb(243,195,18)" rx="2" ry="2" />
<text  x="1030.57" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="1053.0" y="245" width="0.2" height="15.0" fill="rgb(252,137,1)" rx="2" ry="2" />
<text  x="1056.04" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (19 samples, 0.02%)</title><rect x="1052.6" y="213" width="0.2" height="15.0" fill="rgb(242,156,50)" rx="2" ry="2" />
<text  x="1055.57" y="223.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (14 samples, 0.01%)</title><rect x="944.8" y="165" width="0.2" height="15.0" fill="rgb(219,215,42)" rx="2" ry="2" />
<text  x="947.81" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (28 samples, 0.03%)</title><rect x="909.8" y="197" width="0.3" height="15.0" fill="rgb(228,51,8)" rx="2" ry="2" />
<text  x="912.82" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (138 samples, 0.12%)</title><rect x="479.8" y="293" width="1.4" height="15.0" fill="rgb(206,155,50)" rx="2" ry="2" />
<text  x="482.76" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (15 samples, 0.01%)</title><rect x="1046.3" y="229" width="0.2" height="15.0" fill="rgb(240,111,18)" rx="2" ry="2" />
<text  x="1049.33" y="239.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (22 samples, 0.02%)</title><rect x="868.9" y="261" width="0.2" height="15.0" fill="rgb(241,128,0)" rx="2" ry="2" />
<text  x="871.90" y="271.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (592 samples, 0.53%)</title><rect x="109.8" y="229" width="6.3" height="15.0" fill="rgb(224,156,45)" rx="2" ry="2" />
<text  x="112.81" y="239.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (24 samples, 0.02%)</title><rect x="471.4" y="245" width="0.3" height="15.0" fill="rgb(207,151,32)" rx="2" ry="2" />
<text  x="474.41" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (37 samples, 0.03%)</title><rect x="964.2" y="261" width="0.3" height="15.0" fill="rgb(243,148,53)" rx="2" ry="2" />
<text  x="967.16" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (21 samples, 0.02%)</title><rect x="907.9" y="325" width="0.3" height="15.0" fill="rgb(247,205,40)" rx="2" ry="2" />
<text  x="910.95" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::__normal_iterator (15 samples, 0.01%)</title><rect x="947.8" y="277" width="0.1" height="15.0" fill="rgb(218,46,35)" rx="2" ry="2" />
<text  x="950.79" y="287.5" ></text>
</g>
<g >
<title>std::make_pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; const&amp;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;&gt; (829 samples, 0.75%)</title><rect x="1025.8" y="309" width="8.8" height="15.0" fill="rgb(222,96,49)" rx="2" ry="2" />
<text  x="1028.78" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (304 samples, 0.27%)</title><rect x="252.1" y="277" width="3.2" height="15.0" fill="rgb(211,133,50)" rx="2" ry="2" />
<text  x="255.09" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::RandomHeight (20 samples, 0.02%)</title><rect x="474.4" y="277" width="0.2" height="15.0" fill="rgb(254,75,6)" rx="2" ry="2" />
<text  x="477.44" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (12 samples, 0.01%)</title><rect x="351.8" y="229" width="0.1" height="15.0" fill="rgb(252,184,33)" rx="2" ry="2" />
<text  x="354.78" y="239.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (17 samples, 0.02%)</title><rect x="934.0" y="309" width="0.2" height="15.0" fill="rgb(240,108,24)" rx="2" ry="2" />
<text  x="937.00" y="319.5" ></text>
</g>
<g >
<title>std::make_pair&lt;pmem::obj::persistent_ptr&lt;char&gt;&amp;, unsigned long&amp;&gt; (15 samples, 0.01%)</title><rect x="247.4" y="181" width="0.2" height="15.0" fill="rgb(245,210,3)" rx="2" ry="2" />
<text  x="250.42" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::operator+=&lt;unsigned long, unsigned long&gt; (25 samples, 0.02%)</title><rect x="239.2" y="181" width="0.3" height="15.0" fill="rgb(214,91,0)" rx="2" ry="2" />
<text  x="242.21" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (13 samples, 0.01%)</title><rect x="1005.9" y="229" width="0.2" height="15.0" fill="rgb(212,97,21)" rx="2" ry="2" />
<text  x="1008.93" y="239.5" ></text>
</g>
<g >
<title>ulog_entry_buf_create (106 samples, 0.10%)</title><rect x="1163.1" y="581" width="1.2" height="15.0" fill="rgb(215,225,25)" rx="2" ry="2" />
<text  x="1166.14" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (11 samples, 0.01%)</title><rect x="479.3" y="261" width="0.1" height="15.0" fill="rgb(250,199,35)" rx="2" ry="2" />
<text  x="482.28" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (76 samples, 0.07%)</title><rect x="923.0" y="261" width="0.8" height="15.0" fill="rgb(246,210,25)" rx="2" ry="2" />
<text  x="926.02" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (172 samples, 0.16%)</title><rect x="890.5" y="181" width="1.9" height="15.0" fill="rgb(234,121,4)" rx="2" ry="2" />
<text  x="893.52" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (50 samples, 0.05%)</title><rect x="477.0" y="277" width="0.5" height="15.0" fill="rgb(233,69,20)" rx="2" ry="2" />
<text  x="479.98" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::insert_block_index_entry&lt; (11 samples, 0.01%)</title><rect x="880.9" y="229" width="0.1" height="15.0" fill="rgb(223,206,14)" rx="2" ry="2" />
<text  x="883.87" y="239.5" ></text>
</g>
<g >
<title>std::_Hash_bytes (30 samples, 0.03%)</title><rect x="239.8" y="149" width="0.3" height="15.0" fill="rgb(222,39,23)" rx="2" ry="2" />
<text  x="242.78" y="159.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (109 samples, 0.10%)</title><rect x="1070.1" y="229" width="1.2" height="15.0" fill="rgb(233,3,25)" rx="2" ry="2" />
<text  x="1073.13" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (16 samples, 0.01%)</title><rect x="1060.7" y="149" width="0.2" height="15.0" fill="rgb(220,205,29)" rx="2" ry="2" />
<text  x="1063.70" y="159.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (12 samples, 0.01%)</title><rect x="798.3" y="405" width="0.1" height="15.0" fill="rgb(230,126,33)" rx="2" ry="2" />
<text  x="801.30" y="415.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (20 samples, 0.02%)</title><rect x="942.6" y="149" width="0.2" height="15.0" fill="rgb(216,58,40)" rx="2" ry="2" />
<text  x="945.56" y="159.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::push_back (593 samples, 0.54%)</title><rect x="240.8" y="181" width="6.3" height="15.0" fill="rgb(216,150,9)" rx="2" ry="2" />
<text  x="243.82" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::push_back (488 samples, 0.44%)</title><rect x="228.0" y="325" width="5.2" height="15.0" fill="rgb(252,115,11)" rx="2" ry="2" />
<text  x="231.04" y="335.5" ></text>
</g>
<g >
<title>std::function&lt;void  (91 samples, 0.08%)</title><rect x="249.1" y="277" width="1.0" height="15.0" fill="rgb(253,205,30)" rx="2" ry="2" />
<text  x="252.14" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (25 samples, 0.02%)</title><rect x="742.5" y="309" width="0.3" height="15.0" fill="rgb(218,39,16)" rx="2" ry="2" />
<text  x="745.54" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="483.0" y="261" width="0.1" height="15.0" fill="rgb(240,75,9)" rx="2" ry="2" />
<text  x="486.00" y="271.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (469 samples, 0.42%)</title><rect x="998.3" y="261" width="5.0" height="15.0" fill="rgb(224,95,16)" rx="2" ry="2" />
<text  x="1001.28" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (23 samples, 0.02%)</title><rect x="1039.5" y="197" width="0.3" height="15.0" fill="rgb(215,198,24)" rx="2" ry="2" />
<text  x="1042.53" y="207.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (20 samples, 0.02%)</title><rect x="196.0" y="213" width="0.2" height="15.0" fill="rgb(240,189,36)" rx="2" ry="2" />
<text  x="198.97" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (782 samples, 0.71%)</title><rect x="1026.1" y="277" width="8.3" height="15.0" fill="rgb(252,5,24)" rx="2" ry="2" />
<text  x="1029.07" y="287.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::move_iterator (21 samples, 0.02%)</title><rect x="938.7" y="245" width="0.2" height="15.0" fill="rgb(246,94,18)" rx="2" ry="2" />
<text  x="941.68" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (25 samples, 0.02%)</title><rect x="941.0" y="197" width="0.3" height="15.0" fill="rgb(235,107,15)" rx="2" ry="2" />
<text  x="943.99" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;void  (18 samples, 0.02%)</title><rect x="905.0" y="309" width="0.1" height="15.0" fill="rgb(231,117,0)" rx="2" ry="2" />
<text  x="907.95" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (28 samples, 0.03%)</title><rect x="968.7" y="181" width="0.3" height="15.0" fill="rgb(227,160,34)" rx="2" ry="2" />
<text  x="971.67" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13 samples, 0.01%)</title><rect x="209.7" y="277" width="0.1" height="15.0" fill="rgb(214,96,1)" rx="2" ry="2" />
<text  x="212.70" y="287.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="1057.8" y="213" width="0.1" height="15.0" fill="rgb(217,37,0)" rx="2" ry="2" />
<text  x="1060.79" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (498 samples, 0.45%)</title><rect x="888.6" y="245" width="5.3" height="15.0" fill="rgb(249,180,3)" rx="2" ry="2" />
<text  x="891.63" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (458 samples, 0.41%)</title><rect x="483.6" y="261" width="4.8" height="15.0" fill="rgb(209,85,47)" rx="2" ry="2" />
<text  x="486.56" y="271.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (32 samples, 0.03%)</title><rect x="31.0" y="405" width="0.4" height="15.0" fill="rgb(226,62,51)" rx="2" ry="2" />
<text  x="34.02" y="415.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (14 samples, 0.01%)</title><rect x="856.8" y="213" width="0.2" height="15.0" fill="rgb(223,100,45)" rx="2" ry="2" />
<text  x="859.81" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (509 samples, 0.46%)</title><rect x="888.5" y="261" width="5.4" height="15.0" fill="rgb(233,85,31)" rx="2" ry="2" />
<text  x="891.51" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (64 samples, 0.06%)</title><rect x="1037.8" y="245" width="0.7" height="15.0" fill="rgb(216,220,31)" rx="2" ry="2" />
<text  x="1040.82" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (41 samples, 0.04%)</title><rect x="968.6" y="197" width="0.4" height="15.0" fill="rgb(217,154,40)" rx="2" ry="2" />
<text  x="971.55" y="207.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (29 samples, 0.03%)</title><rect x="194.9" y="197" width="0.3" height="15.0" fill="rgb(251,6,46)" rx="2" ry="2" />
<text  x="197.85" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (21 samples, 0.02%)</title><rect x="1039.3" y="197" width="0.2" height="15.0" fill="rgb(252,150,27)" rx="2" ry="2" />
<text  x="1042.27" y="207.5" ></text>
</g>
<g >
<title>utils::Hash (83 samples, 0.07%)</title><rect x="970.5" y="293" width="0.9" height="15.0" fill="rgb(211,85,37)" rx="2" ry="2" />
<text  x="973.52" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (20 samples, 0.02%)</title><rect x="972.6" y="293" width="0.2" height="15.0" fill="rgb(228,185,41)" rx="2" ry="2" />
<text  x="975.61" y="303.5" ></text>
</g>
<g >
<title>scythedb::MakePersistent&lt;scythedb::InternalNode, char, pmem::obj::persistent_ptr&lt;char&gt; const&amp;, decltype (171 samples, 0.15%)</title><rect x="463.9" y="261" width="1.8" height="15.0" fill="rgb(227,66,13)" rx="2" ry="2" />
<text  x="466.93" y="271.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (16 samples, 0.01%)</title><rect x="122.6" y="213" width="0.2" height="15.0" fill="rgb(239,132,20)" rx="2" ry="2" />
<text  x="125.61" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::realloc (71 samples, 0.06%)</title><rect x="243.2" y="85" width="0.8" height="15.0" fill="rgb(223,206,17)" rx="2" ry="2" />
<text  x="246.25" y="95.5" ></text>
</g>
<g >
<title>ravl_emplace (18 samples, 0.02%)</title><rect x="831.9" y="565" width="0.1" height="15.0" fill="rgb(219,39,35)" rx="2" ry="2" />
<text  x="834.86" y="575.5" ></text>
</g>
<g >
<title>operation_init (262 samples, 0.24%)</title><rect x="825.9" y="565" width="2.8" height="15.0" fill="rgb(217,224,54)" rx="2" ry="2" />
<text  x="828.90" y="575.5" ></text>
</g>
<g >
<title>tx_flush_range (17 samples, 0.02%)</title><rect x="1115.8" y="581" width="0.2" height="15.0" fill="rgb(241,17,27)" rx="2" ry="2" />
<text  x="1118.77" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (49 samples, 0.04%)</title><rect x="227.4" y="325" width="0.5" height="15.0" fill="rgb(234,179,54)" rx="2" ry="2" />
<text  x="230.42" y="335.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (1,712 samples, 1.55%)</title><rect x="437.6" y="181" width="18.2" height="15.0" fill="rgb(218,110,30)" rx="2" ry="2" />
<text  x="440.60" y="191.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.01%)</title><rect x="1037.0" y="229" width="0.2" height="15.0" fill="rgb(234,55,12)" rx="2" ry="2" />
<text  x="1040.04" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (5,787 samples, 5.22%)</title><rect x="55.1" y="277" width="61.7" height="15.0" fill="rgb(241,8,40)" rx="2" ry="2" />
<text  x="58.13" y="287.5" >scythe..</text>
</g>
<g >
<title>std::swap&lt;std::_Any_data&gt; (17 samples, 0.02%)</title><rect x="991.5" y="229" width="0.2" height="15.0" fill="rgb(249,223,51)" rx="2" ry="2" />
<text  x="994.55" y="239.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (174 samples, 0.16%)</title><rect x="1080.1" y="277" width="1.9" height="15.0" fill="rgb(231,7,5)" rx="2" ry="2" />
<text  x="1083.13" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (578 samples, 0.52%)</title><rect x="940.0" y="261" width="6.2" height="15.0" fill="rgb(213,170,54)" rx="2" ry="2" />
<text  x="943.03" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (59 samples, 0.05%)</title><rect x="901.5" y="133" width="0.6" height="15.0" fill="rgb(211,40,11)" rx="2" ry="2" />
<text  x="904.45" y="143.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducerHash*&gt;::load (36 samples, 0.03%)</title><rect x="1002.8" y="213" width="0.4" height="15.0" fill="rgb(225,15,20)" rx="2" ry="2" />
<text  x="1005.79" y="223.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoInsert (12,485 samples, 11.27%)</title><rect x="841.8" y="341" width="132.9" height="15.0" fill="rgb(216,49,10)" rx="2" ry="2" />
<text  x="844.77" y="351.5" >ycsbc::Client::D..</text>
</g>
<g >
<title>_itoa_word (182 samples, 0.16%)</title><rect x="816.0" y="549" width="2.0" height="15.0" fill="rgb(214,107,12)" rx="2" ry="2" />
<text  x="819.02" y="559.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (201 samples, 0.18%)</title><rect x="881.2" y="213" width="2.2" height="15.0" fill="rgb(218,78,19)" rx="2" ry="2" />
<text  x="884.24" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (21 samples, 0.02%)</title><rect x="856.0" y="181" width="0.2" height="15.0" fill="rgb(231,124,52)" rx="2" ry="2" />
<text  x="859.02" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (27 samples, 0.02%)</title><rect x="931.3" y="277" width="0.3" height="15.0" fill="rgb(207,69,23)" rx="2" ry="2" />
<text  x="934.31" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (30 samples, 0.03%)</title><rect x="1042.3" y="293" width="0.4" height="15.0" fill="rgb(208,46,9)" rx="2" ry="2" />
<text  x="1045.33" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (16 samples, 0.01%)</title><rect x="1005.6" y="229" width="0.2" height="15.0" fill="rgb(243,91,34)" rx="2" ry="2" />
<text  x="1008.58" y="239.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::BlockIndexHeader*&gt;::load (22 samples, 0.02%)</title><rect x="535.9" y="261" width="0.2" height="15.0" fill="rgb(233,142,40)" rx="2" ry="2" />
<text  x="538.87" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (31 samples, 0.03%)</title><rect x="203.6" y="309" width="0.3" height="15.0" fill="rgb(213,69,15)" rx="2" ry="2" />
<text  x="206.60" y="319.5" ></text>
</g>
<g >
<title>pmem_flush (33 samples, 0.03%)</title><rect x="1097.6" y="581" width="0.4" height="15.0" fill="rgb(228,162,50)" rx="2" ry="2" />
<text  x="1100.62" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (283 samples, 0.26%)</title><rect x="219.4" y="277" width="3.0" height="15.0" fill="rgb(215,66,45)" rx="2" ry="2" />
<text  x="222.40" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (29 samples, 0.03%)</title><rect x="1051.0" y="213" width="0.3" height="15.0" fill="rgb(210,145,22)" rx="2" ry="2" />
<text  x="1053.99" y="223.5" ></text>
</g>
<g >
<title>__tls_get_addr (15 samples, 0.01%)</title><rect x="234.3" y="277" width="0.1" height="15.0" fill="rgb(210,58,47)" rx="2" ry="2" />
<text  x="237.26" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11 samples, 0.01%)</title><rect x="1025.5" y="261" width="0.1" height="15.0" fill="rgb(208,156,14)" rx="2" ry="2" />
<text  x="1028.45" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (12 samples, 0.01%)</title><rect x="1053.8" y="197" width="0.1" height="15.0" fill="rgb(216,161,37)" rx="2" ry="2" />
<text  x="1056.77" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (81 samples, 0.07%)</title><rect x="1005.2" y="261" width="0.9" height="15.0" fill="rgb(222,176,1)" rx="2" ry="2" />
<text  x="1008.21" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::data (33 samples, 0.03%)</title><rect x="453.4" y="149" width="0.4" height="15.0" fill="rgb(237,71,25)" rx="2" ry="2" />
<text  x="456.43" y="159.5" ></text>
</g>
<g >
<title>_int_free (24 samples, 0.02%)</title><rect x="1016.7" y="85" width="0.3" height="15.0" fill="rgb(247,158,12)" rx="2" ry="2" />
<text  x="1019.70" y="95.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (58 samples, 0.05%)</title><rect x="866.3" y="229" width="0.6" height="15.0" fill="rgb(237,26,41)" rx="2" ry="2" />
<text  x="869.32" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (14 samples, 0.01%)</title><rect x="44.5" y="277" width="0.2" height="15.0" fill="rgb(242,217,19)" rx="2" ry="2" />
<text  x="47.55" y="287.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (434 samples, 0.39%)</title><rect x="182.9" y="181" width="4.7" height="15.0" fill="rgb(225,30,44)" rx="2" ry="2" />
<text  x="185.94" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_realloc_insert&lt;scythedb::Slice&gt; (437 samples, 0.39%)</title><rect x="228.3" y="293" width="4.7" height="15.0" fill="rgb(208,134,21)" rx="2" ry="2" />
<text  x="231.30" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (10 samples, 0.01%)</title><rect x="908.9" y="277" width="0.2" height="15.0" fill="rgb(239,18,36)" rx="2" ry="2" />
<text  x="911.95" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (7,836 samples, 7.07%)</title><rect x="268.5" y="245" width="83.4" height="15.0" fill="rgb(249,39,41)" rx="2" ry="2" />
<text  x="271.45" y="255.5" >scythedb:..</text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::emplace_back&lt;scythedb::Slice&gt; (238 samples, 0.21%)</title><rect x="42.7" y="309" width="2.6" height="15.0" fill="rgb(225,55,24)" rx="2" ry="2" />
<text  x="45.74" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (67 samples, 0.06%)</title><rect x="963.4" y="245" width="0.7" height="15.0" fill="rgb(239,224,35)" rx="2" ry="2" />
<text  x="966.41" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::next_prod (1,153 samples, 1.04%)</title><rect x="541.2" y="325" width="12.3" height="15.0" fill="rgb(227,152,21)" rx="2" ry="2" />
<text  x="544.24" y="335.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (11 samples, 0.01%)</title><rect x="944.5" y="133" width="0.2" height="15.0" fill="rgb(235,61,44)" rx="2" ry="2" />
<text  x="947.55" y="143.5" ></text>
</g>
<g >
<title>pmemobj_tx_get_user_data (14 samples, 0.01%)</title><rect x="831.6" y="549" width="0.2" height="15.0" fill="rgb(213,195,17)" rx="2" ry="2" />
<text  x="834.62" y="559.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::thread (74,040 samples, 66.82%)</title><rect x="10.1" y="485" width="788.5" height="15.0" fill="rgb(226,63,24)" rx="2" ry="2" />
<text  x="13.13" y="495.5" >scythedb::RepeatableThread::thread</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (19 samples, 0.02%)</title><rect x="969.8" y="277" width="0.2" height="15.0" fill="rgb(243,108,12)" rx="2" ry="2" />
<text  x="972.80" y="287.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (12 samples, 0.01%)</title><rect x="997.9" y="277" width="0.1" height="15.0" fill="rgb(235,27,0)" rx="2" ry="2" />
<text  x="1000.90" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (345 samples, 0.31%)</title><rect x="743.2" y="341" width="3.6" height="15.0" fill="rgb(221,154,0)" rx="2" ry="2" />
<text  x="746.17" y="351.5" ></text>
</g>
<g >
<title>std::function&lt;void  (72,568 samples, 65.49%)</title><rect x="25.8" y="469" width="772.8" height="15.0" fill="rgb(222,17,54)" rx="2" ry="2" />
<text  x="28.80" y="479.5" >std::function&lt;void </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (45 samples, 0.04%)</title><rect x="927.5" y="309" width="0.5" height="15.0" fill="rgb(236,137,9)" rx="2" ry="2" />
<text  x="930.51" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (27 samples, 0.02%)</title><rect x="1053.6" y="213" width="0.3" height="15.0" fill="rgb(206,188,39)" rx="2" ry="2" />
<text  x="1056.62" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (155 samples, 0.14%)</title><rect x="477.8" y="277" width="1.6" height="15.0" fill="rgb(218,227,21)" rx="2" ry="2" />
<text  x="480.79" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (21 samples, 0.02%)</title><rect x="970.0" y="277" width="0.3" height="15.0" fill="rgb(234,98,18)" rx="2" ry="2" />
<text  x="973.03" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (140 samples, 0.13%)</title><rect x="1055.1" y="261" width="1.5" height="15.0" fill="rgb(228,44,13)" rx="2" ry="2" />
<text  x="1058.06" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (14 samples, 0.01%)</title><rect x="986.6" y="197" width="0.1" height="15.0" fill="rgb(224,36,20)" rx="2" ry="2" />
<text  x="989.58" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (26 samples, 0.02%)</title><rect x="1040.3" y="197" width="0.2" height="15.0" fill="rgb(235,123,33)" rx="2" ry="2" />
<text  x="1043.27" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (13 samples, 0.01%)</title><rect x="255.0" y="197" width="0.2" height="15.0" fill="rgb(220,18,22)" rx="2" ry="2" />
<text  x="258.02" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11 samples, 0.01%)</title><rect x="480.6" y="261" width="0.2" height="15.0" fill="rgb(242,45,18)" rx="2" ry="2" />
<text  x="483.63" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (11 samples, 0.01%)</title><rect x="855.2" y="197" width="0.1" height="15.0" fill="rgb(238,37,39)" rx="2" ry="2" />
<text  x="858.23" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (53 samples, 0.05%)</title><rect x="867.1" y="245" width="0.6" height="15.0" fill="rgb(215,126,4)" rx="2" ry="2" />
<text  x="870.10" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (47 samples, 0.04%)</title><rect x="489.8" y="309" width="0.5" height="15.0" fill="rgb(246,39,29)" rx="2" ry="2" />
<text  x="492.76" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (16 samples, 0.01%)</title><rect x="947.4" y="277" width="0.1" height="15.0" fill="rgb(216,210,42)" rx="2" ry="2" />
<text  x="950.36" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;char&gt;::allocate (13 samples, 0.01%)</title><rect x="967.0" y="165" width="0.2" height="15.0" fill="rgb(208,36,50)" rx="2" ry="2" />
<text  x="970.04" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (33 samples, 0.03%)</title><rect x="1004.7" y="245" width="0.3" height="15.0" fill="rgb(253,32,49)" rx="2" ry="2" />
<text  x="1007.67" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (70 samples, 0.06%)</title><rect x="1046.1" y="261" width="0.7" height="15.0" fill="rgb(227,114,3)" rx="2" ry="2" />
<text  x="1049.09" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateFallback (832 samples, 0.75%)</title><rect x="238.7" y="213" width="8.9" height="15.0" fill="rgb(243,29,1)" rx="2" ry="2" />
<text  x="241.73" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (99 samples, 0.09%)</title><rect x="943.6" y="149" width="1.1" height="15.0" fill="rgb(223,101,2)" rx="2" ry="2" />
<text  x="946.61" y="159.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt;::_M_head (70 samples, 0.06%)</title><rect x="795.8" y="373" width="0.7" height="15.0" fill="rgb(246,4,26)" rx="2" ry="2" />
<text  x="798.79" y="383.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (18 samples, 0.02%)</title><rect x="989.9" y="245" width="0.2" height="15.0" fill="rgb(220,12,25)" rx="2" ry="2" />
<text  x="992.87" y="255.5" ></text>
</g>
<g >
<title>std::__invoke&lt;int  (22,775 samples, 20.55%)</title><rect x="839.7" y="389" width="242.5" height="15.0" fill="rgb(229,56,53)" rx="2" ry="2" />
<text  x="842.69" y="399.5" >std::__invoke&lt;int </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (158 samples, 0.14%)</title><rect x="987.4" y="213" width="1.6" height="15.0" fill="rgb(223,142,30)" rx="2" ry="2" />
<text  x="990.36" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (7,000 samples, 6.32%)</title><rect x="121.7" y="229" width="74.5" height="15.0" fill="rgb(230,50,4)" rx="2" ry="2" />
<text  x="124.67" y="239.5" >scythedb..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (12 samples, 0.01%)</title><rect x="495.2" y="293" width="0.1" height="15.0" fill="rgb(207,123,13)" rx="2" ry="2" />
<text  x="498.20" y="303.5" ></text>
</g>
<g >
<title>__tls_get_addr (40 samples, 0.04%)</title><rect x="1132.8" y="597" width="0.4" height="15.0" fill="rgb(237,205,28)" rx="2" ry="2" />
<text  x="1135.81" y="607.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (17 samples, 0.02%)</title><rect x="853.1" y="293" width="0.2" height="15.0" fill="rgb(211,91,46)" rx="2" ry="2" />
<text  x="856.12" y="303.5" ></text>
</g>
<g >
<title>utils::Hash (30 samples, 0.03%)</title><rect x="1061.8" y="277" width="0.3" height="15.0" fill="rgb(243,214,13)" rx="2" ry="2" />
<text  x="1064.76" y="287.5" ></text>
</g>
<g >
<title>__lll_unlock_wake_private (13 samples, 0.01%)</title><rect x="1129.1" y="597" width="0.1" height="15.0" fill="rgb(226,219,7)" rx="2" ry="2" />
<text  x="1132.10" y="607.5" ></text>
</g>
<g >
<title>ycsbc::CounterGenerator::Next (15 samples, 0.01%)</title><rect x="974.6" y="325" width="0.1" height="15.0" fill="rgb(238,218,22)" rx="2" ry="2" />
<text  x="977.57" y="335.5" ></text>
</g>
<g >
<title>__lll_lock_wait (140 samples, 0.13%)</title><rect x="1074.2" y="277" width="1.5" height="15.0" fill="rgb(205,46,10)" rx="2" ry="2" />
<text  x="1077.21" y="287.5" ></text>
</g>
<g >
<title>std::operator&amp; (1,651 samples, 1.49%)</title><rect x="711.3" y="309" width="17.6" height="15.0" fill="rgb(234,99,3)" rx="2" ry="2" />
<text  x="714.29" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (19 samples, 0.02%)</title><rect x="54.9" y="277" width="0.2" height="15.0" fill="rgb(253,175,48)" rx="2" ry="2" />
<text  x="57.93" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (10 samples, 0.01%)</title><rect x="869.6" y="229" width="0.1" height="15.0" fill="rgb(237,97,11)" rx="2" ry="2" />
<text  x="872.62" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12 samples, 0.01%)</title><rect x="986.6" y="181" width="0.1" height="15.0" fill="rgb(228,125,39)" rx="2" ry="2" />
<text  x="989.60" y="191.5" ></text>
</g>
<g >
<title>std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="533" width="789.5" height="15.0" fill="rgb(209,158,45)" rx="2" ry="2" />
<text  x="13.13" y="543.5" >std::__invoke&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1009.1" y="117" width="0.1" height="15.0" fill="rgb(225,226,4)" rx="2" ry="2" />
<text  x="1012.05" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (65 samples, 0.06%)</title><rect x="865.6" y="229" width="0.7" height="15.0" fill="rgb(249,138,16)" rx="2" ry="2" />
<text  x="868.60" y="239.5" ></text>
</g>
<g >
<title>palloc_exec_actions (155 samples, 0.14%)</title><rect x="829.1" y="565" width="1.6" height="15.0" fill="rgb(214,218,0)" rx="2" ry="2" />
<text  x="832.10" y="575.5" ></text>
</g>
<g >
<title>pmemobj_root (10 samples, 0.01%)</title><rect x="247.3" y="181" width="0.1" height="15.0" fill="rgb(225,55,15)" rx="2" ry="2" />
<text  x="250.25" y="191.5" ></text>
</g>
<g >
<title>__exp1_fma (82 samples, 0.07%)</title><rect x="1126.4" y="597" width="0.9" height="15.0" fill="rgb(213,173,54)" rx="2" ry="2" />
<text  x="1129.40" y="607.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (32 samples, 0.03%)</title><rect x="837.8" y="565" width="0.4" height="15.0" fill="rgb(234,144,54)" rx="2" ry="2" />
<text  x="840.83" y="575.5" ></text>
</g>
<g >
<title>pmemobj_root_construct (10 samples, 0.01%)</title><rect x="1098.6" y="581" width="0.1" height="15.0" fill="rgb(210,47,17)" rx="2" ry="2" />
<text  x="1101.63" y="591.5" ></text>
</g>
<g >
<title>__lll_lock_wait (186 samples, 0.17%)</title><rect x="1064.2" y="213" width="2.0" height="15.0" fill="rgb(230,99,33)" rx="2" ry="2" />
<text  x="1067.21" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (12 samples, 0.01%)</title><rect x="221.6" y="245" width="0.1" height="15.0" fill="rgb(244,177,29)" rx="2" ry="2" />
<text  x="224.62" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_check_len (69 samples, 0.06%)</title><rect x="232.1" y="277" width="0.7" height="15.0" fill="rgb(235,121,13)" rx="2" ry="2" />
<text  x="235.05" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (25 samples, 0.02%)</title><rect x="27.6" y="453" width="0.3" height="15.0" fill="rgb(224,132,36)" rx="2" ry="2" />
<text  x="30.59" y="463.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (169 samples, 0.15%)</title><rect x="474.9" y="261" width="1.8" height="15.0" fill="rgb(235,2,36)" rx="2" ry="2" />
<text  x="477.89" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (33 samples, 0.03%)</title><rect x="952.9" y="245" width="0.3" height="15.0" fill="rgb(236,52,44)" rx="2" ry="2" />
<text  x="955.89" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (47 samples, 0.04%)</title><rect x="854.8" y="213" width="0.5" height="15.0" fill="rgb(233,88,3)" rx="2" ry="2" />
<text  x="857.85" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (464 samples, 0.42%)</title><rect x="49.8" y="277" width="4.9" height="15.0" fill="rgb(231,150,12)" rx="2" ry="2" />
<text  x="52.75" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (13 samples, 0.01%)</title><rect x="860.5" y="213" width="0.2" height="15.0" fill="rgb(253,164,45)" rx="2" ry="2" />
<text  x="863.52" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (18 samples, 0.02%)</title><rect x="463.4" y="277" width="0.2" height="15.0" fill="rgb(254,144,9)" rx="2" ry="2" />
<text  x="466.41" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (41 samples, 0.04%)</title><rect x="954.6" y="261" width="0.5" height="15.0" fill="rgb(237,125,44)" rx="2" ry="2" />
<text  x="957.63" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (12 samples, 0.01%)</title><rect x="255.7" y="277" width="0.1" height="15.0" fill="rgb(227,73,46)" rx="2" ry="2" />
<text  x="258.71" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (84 samples, 0.08%)</title><rect x="1168.7" y="597" width="0.9" height="15.0" fill="rgb(249,101,11)" rx="2" ry="2" />
<text  x="1171.74" y="607.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="517" width="789.5" height="15.0" fill="rgb(226,17,23)" rx="2" ry="2" />
<text  x="13.13" y="527.5" >std::__invoke_impl&lt;void, scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (10 samples, 0.01%)</title><rect x="480.9" y="261" width="0.1" height="15.0" fill="rgb(251,140,26)" rx="2" ry="2" />
<text  x="483.86" y="271.5" ></text>
</g>
<g >
<title>operator new (19 samples, 0.02%)</title><rect x="482.8" y="229" width="0.2" height="15.0" fill="rgb(230,181,10)" rx="2" ry="2" />
<text  x="485.75" y="239.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (59 samples, 0.05%)</title><rect x="997.3" y="277" width="0.6" height="15.0" fill="rgb(211,68,25)" rx="2" ry="2" />
<text  x="1000.28" y="287.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (14 samples, 0.01%)</title><rect x="491.8" y="341" width="0.1" height="15.0" fill="rgb(207,122,2)" rx="2" ry="2" />
<text  x="494.77" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (14 samples, 0.01%)</title><rect x="1053.0" y="261" width="0.2" height="15.0" fill="rgb(237,223,27)" rx="2" ry="2" />
<text  x="1056.04" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator+= (32 samples, 0.03%)</title><rect x="469.7" y="181" width="0.3" height="15.0" fill="rgb(210,96,48)" rx="2" ry="2" />
<text  x="472.69" y="191.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (10 samples, 0.01%)</title><rect x="220.6" y="197" width="0.1" height="15.0" fill="rgb(229,129,51)" rx="2" ry="2" />
<text  x="223.63" y="207.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (15 samples, 0.01%)</title><rect x="267.8" y="229" width="0.2" height="15.0" fill="rgb(234,170,23)" rx="2" ry="2" />
<text  x="270.83" y="239.5" ></text>
</g>
<g >
<title>pmem::detail::type_num&lt;char&gt; (70 samples, 0.06%)</title><rect x="239.8" y="165" width="0.7" height="15.0" fill="rgb(221,200,1)" rx="2" ry="2" />
<text  x="242.78" y="175.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (11 samples, 0.01%)</title><rect x="25.3" y="437" width="0.1" height="15.0" fill="rgb(253,199,19)" rx="2" ry="2" />
<text  x="28.29" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (238 samples, 0.21%)</title><rect x="928.0" y="309" width="2.5" height="15.0" fill="rgb(242,158,5)" rx="2" ry="2" />
<text  x="930.99" y="319.5" ></text>
</g>
<g >
<title>operator new (23 samples, 0.02%)</title><rect x="1004.4" y="245" width="0.2" height="15.0" fill="rgb(235,69,3)" rx="2" ry="2" />
<text  x="1007.39" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (15 samples, 0.01%)</title><rect x="937.2" y="277" width="0.1" height="15.0" fill="rgb(233,17,32)" rx="2" ry="2" />
<text  x="940.18" y="287.5" ></text>
</g>
<g >
<title>operator delete (51 samples, 0.05%)</title><rect x="862.0" y="165" width="0.6" height="15.0" fill="rgb(217,31,9)" rx="2" ry="2" />
<text  x="865.02" y="175.5" ></text>
</g>
<g >
<title>ulog_clobber_data (19 samples, 0.02%)</title><rect x="1095.1" y="565" width="0.2" height="15.0" fill="rgb(254,49,45)" rx="2" ry="2" />
<text  x="1098.06" y="575.5" ></text>
</g>
<g >
<title>ulog_entry_apply (19 samples, 0.02%)</title><rect x="1117.0" y="581" width="0.2" height="15.0" fill="rgb(208,94,51)" rx="2" ry="2" />
<text  x="1120.02" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (30 samples, 0.03%)</title><rect x="923.9" y="261" width="0.3" height="15.0" fill="rgb(231,216,40)" rx="2" ry="2" />
<text  x="926.92" y="271.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (25 samples, 0.02%)</title><rect x="1056.9" y="261" width="0.2" height="15.0" fill="rgb(235,153,28)" rx="2" ry="2" />
<text  x="1059.86" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::push_back (12 samples, 0.01%)</title><rect x="470.7" y="149" width="0.1" height="15.0" fill="rgb(244,38,0)" rx="2" ry="2" />
<text  x="473.71" y="159.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::NewNode (907 samples, 0.82%)</title><rect x="463.6" y="277" width="9.7" height="15.0" fill="rgb(234,188,8)" rx="2" ry="2" />
<text  x="466.61" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (26 samples, 0.02%)</title><rect x="1060.7" y="181" width="0.2" height="15.0" fill="rgb(217,200,16)" rx="2" ry="2" />
<text  x="1063.67" y="191.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (64 samples, 0.06%)</title><rect x="1009.9" y="197" width="0.7" height="15.0" fill="rgb(249,109,26)" rx="2" ry="2" />
<text  x="1012.90" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (516 samples, 0.47%)</title><rect x="1169.6" y="597" width="5.5" height="15.0" fill="rgb(230,156,29)" rx="2" ry="2" />
<text  x="1172.65" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (20 samples, 0.02%)</title><rect x="954.8" y="229" width="0.2" height="15.0" fill="rgb(228,227,31)" rx="2" ry="2" />
<text  x="957.81" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24 samples, 0.02%)</title><rect x="986.2" y="197" width="0.3" height="15.0" fill="rgb(250,108,44)" rx="2" ry="2" />
<text  x="989.23" y="207.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 0.14%)</title><rect x="1117.8" y="533" width="1.7" height="15.0" fill="rgb(210,88,25)" rx="2" ry="2" />
<text  x="1120.85" y="543.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (180 samples, 0.16%)</title><rect x="469.0" y="213" width="1.9" height="15.0" fill="rgb(247,145,7)" rx="2" ry="2" />
<text  x="472.01" y="223.5" ></text>
</g>
<g >
<title>vfprintf (255 samples, 0.23%)</title><rect x="818.0" y="549" width="2.7" height="15.0" fill="rgb(215,196,20)" rx="2" ry="2" />
<text  x="820.96" y="559.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextOperation (991 samples, 0.89%)</title><rect x="1071.4" y="325" width="10.6" height="15.0" fill="rgb(213,214,35)" rx="2" ry="2" />
<text  x="1074.43" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (22 samples, 0.02%)</title><rect x="841.2" y="341" width="0.2" height="15.0" fill="rgb(216,76,34)" rx="2" ry="2" />
<text  x="844.19" y="351.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (22 samples, 0.02%)</title><rect x="203.7" y="293" width="0.2" height="15.0" fill="rgb(206,18,33)" rx="2" ry="2" />
<text  x="206.69" y="303.5" ></text>
</g>
<g >
<title>moodycamel::details::circular_less_than&lt;unsigned long&gt; (2,054 samples, 1.85%)</title><rect x="689.4" y="309" width="21.9" height="15.0" fill="rgb(208,144,11)" rx="2" ry="2" />
<text  x="692.42" y="319.5" >m..</text>
</g>
<g >
<title>scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="501" width="789.5" height="15.0" fill="rgb(236,216,29)" rx="2" ry="2" />
<text  x="13.13" y="511.5" >scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (87 samples, 0.08%)</title><rect x="741.9" y="341" width="0.9" height="15.0" fill="rgb(229,224,33)" rx="2" ry="2" />
<text  x="744.88" y="351.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Dequeue (22,750 samples, 20.53%)</title><rect x="496.7" y="357" width="242.3" height="15.0" fill="rgb(227,68,53)" rx="2" ry="2" />
<text  x="499.72" y="367.5" >scythedb::Queue&lt;std::shared_ptr&lt;..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (34 samples, 0.03%)</title><rect x="860.2" y="213" width="0.3" height="15.0" fill="rgb(222,177,28)" rx="2" ry="2" />
<text  x="863.16" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_destroy (16 samples, 0.01%)</title><rect x="850.3" y="293" width="0.2" height="15.0" fill="rgb(240,132,0)" rx="2" ry="2" />
<text  x="853.32" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (93 samples, 0.08%)</title><rect x="909.6" y="213" width="1.0" height="15.0" fill="rgb(232,150,10)" rx="2" ry="2" />
<text  x="912.63" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (447 samples, 0.40%)</title><rect x="950.9" y="293" width="4.7" height="15.0" fill="rgb(229,99,18)" rx="2" ry="2" />
<text  x="953.86" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (42 samples, 0.04%)</title><rect x="1055.8" y="213" width="0.5" height="15.0" fill="rgb(231,141,43)" rx="2" ry="2" />
<text  x="1058.81" y="223.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (54 samples, 0.05%)</title><rect x="911.0" y="309" width="0.6" height="15.0" fill="rgb(231,141,12)" rx="2" ry="2" />
<text  x="914.00" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="953.4" y="229" width="0.2" height="15.0" fill="rgb(250,61,24)" rx="2" ry="2" />
<text  x="956.40" y="239.5" ></text>
</g>
<g >
<title>run_block_size (699 samples, 0.63%)</title><rect x="1087.5" y="565" width="7.5" height="15.0" fill="rgb(206,48,25)" rx="2" ry="2" />
<text  x="1090.53" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (32 samples, 0.03%)</title><rect x="933.1" y="261" width="0.4" height="15.0" fill="rgb(241,37,28)" rx="2" ry="2" />
<text  x="936.11" y="271.5" ></text>
</g>
<g >
<title>vfprintf (13 samples, 0.01%)</title><rect x="813.0" y="485" width="0.1" height="15.0" fill="rgb(219,86,12)" rx="2" ry="2" />
<text  x="815.96" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11 samples, 0.01%)</title><rect x="953.9" y="213" width="0.1" height="15.0" fill="rgb(245,122,48)" rx="2" ry="2" />
<text  x="956.86" y="223.5" ></text>
</g>
<g >
<title>std::__allocate_guarded&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (103 samples, 0.09%)</title><rect x="892.4" y="213" width="1.1" height="15.0" fill="rgb(238,135,5)" rx="2" ry="2" />
<text  x="895.38" y="223.5" ></text>
</g>
<g >
<title>__gthread_active_p (27 samples, 0.02%)</title><rect x="897.5" y="213" width="0.3" height="15.0" fill="rgb(214,65,19)" rx="2" ry="2" />
<text  x="900.48" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (33 samples, 0.03%)</title><rect x="478.5" y="245" width="0.3" height="15.0" fill="rgb(233,53,44)" rx="2" ry="2" />
<text  x="481.48" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (31 samples, 0.03%)</title><rect x="204.5" y="261" width="0.4" height="15.0" fill="rgb(247,88,29)" rx="2" ry="2" />
<text  x="207.52" y="271.5" ></text>
</g>
<g >
<title>malloc (17 samples, 0.02%)</title><rect x="859.6" y="181" width="0.2" height="15.0" fill="rgb(216,163,24)" rx="2" ry="2" />
<text  x="862.59" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (17 samples, 0.02%)</title><rect x="866.0" y="213" width="0.2" height="15.0" fill="rgb(230,101,50)" rx="2" ry="2" />
<text  x="868.98" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (405 samples, 0.37%)</title><rect x="1158.6" y="581" width="4.3" height="15.0" fill="rgb(235,134,41)" rx="2" ry="2" />
<text  x="1161.55" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (30 samples, 0.03%)</title><rect x="1040.5" y="197" width="0.4" height="15.0" fill="rgb(217,147,44)" rx="2" ry="2" />
<text  x="1043.54" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (12 samples, 0.01%)</title><rect x="908.3" y="325" width="0.1" height="15.0" fill="rgb(244,6,17)" rx="2" ry="2" />
<text  x="911.26" y="335.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (23 samples, 0.02%)</title><rect x="1045.8" y="277" width="0.3" height="15.0" fill="rgb(212,167,22)" rx="2" ry="2" />
<text  x="1048.81" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (10 samples, 0.01%)</title><rect x="926.7" y="293" width="0.2" height="15.0" fill="rgb(214,155,39)" rx="2" ry="2" />
<text  x="929.74" y="303.5" ></text>
</g>
<g >
<title>ravl_find (64 samples, 0.06%)</title><rect x="1113.2" y="581" width="0.7" height="15.0" fill="rgb(224,45,23)" rx="2" ry="2" />
<text  x="1116.24" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (26 samples, 0.02%)</title><rect x="1035.1" y="261" width="0.2" height="15.0" fill="rgb(234,92,29)" rx="2" ry="2" />
<text  x="1038.06" y="271.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (38 samples, 0.03%)</title><rect x="867.9" y="261" width="0.4" height="15.0" fill="rgb(211,79,52)" rx="2" ry="2" />
<text  x="870.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (134 samples, 0.12%)</title><rect x="959.5" y="245" width="1.4" height="15.0" fill="rgb(253,176,36)" rx="2" ry="2" />
<text  x="962.52" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (121 samples, 0.11%)</title><rect x="1066.2" y="213" width="1.3" height="15.0" fill="rgb(209,109,23)" rx="2" ry="2" />
<text  x="1069.19" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::to_string (285 samples, 0.26%)</title><rect x="1058.7" y="277" width="3.0" height="15.0" fill="rgb(244,62,21)" rx="2" ry="2" />
<text  x="1061.67" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (31 samples, 0.03%)</title><rect x="210.3" y="341" width="0.3" height="15.0" fill="rgb(224,86,45)" rx="2" ry="2" />
<text  x="213.28" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~vector (46 samples, 0.04%)</title><rect x="224.5" y="341" width="0.5" height="15.0" fill="rgb(249,177,48)" rx="2" ry="2" />
<text  x="227.55" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="945.2" y="213" width="0.1" height="15.0" fill="rgb(242,106,40)" rx="2" ry="2" />
<text  x="948.21" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMBlock::NVMBlock (158 samples, 0.14%)</title><rect x="196.5" y="245" width="1.7" height="15.0" fill="rgb(223,156,45)" rx="2" ry="2" />
<text  x="199.51" y="255.5" ></text>
</g>
<g >
<title>util_checksum_compute (21 samples, 0.02%)</title><rect x="1189.8" y="597" width="0.2" height="15.0" fill="rgb(213,119,31)" rx="2" ry="2" />
<text  x="1192.78" y="607.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (87 samples, 0.08%)</title><rect x="902.5" y="149" width="0.9" height="15.0" fill="rgb(231,64,15)" rx="2" ry="2" />
<text  x="905.46" y="159.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::add_block_to_free_list (11 samples, 0.01%)</title><rect x="536.2" y="293" width="0.1" height="15.0" fill="rgb(206,6,41)" rx="2" ry="2" />
<text  x="539.21" y="303.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.01%)</title><rect x="937.8" y="245" width="0.2" height="15.0" fill="rgb(247,178,1)" rx="2" ry="2" />
<text  x="940.82" y="255.5" ></text>
</g>
<g >
<title>operator delete (12 samples, 0.01%)</title><rect x="496.5" y="277" width="0.1" height="15.0" fill="rgb(251,137,8)" rx="2" ry="2" />
<text  x="499.46" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (25 samples, 0.02%)</title><rect x="891.3" y="133" width="0.3" height="15.0" fill="rgb(231,188,26)" rx="2" ry="2" />
<text  x="894.30" y="143.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (25 samples, 0.02%)</title><rect x="1131.9" y="597" width="0.3" height="15.0" fill="rgb(219,54,39)" rx="2" ry="2" />
<text  x="1134.93" y="607.5" ></text>
</g>
<g >
<title>__GI___qsort_r (88 samples, 0.08%)</title><rect x="829.2" y="549" width="1.0" height="15.0" fill="rgb(225,182,21)" rx="2" ry="2" />
<text  x="832.25" y="559.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (11 samples, 0.01%)</title><rect x="964.5" y="261" width="0.2" height="15.0" fill="rgb(226,103,52)" rx="2" ry="2" />
<text  x="967.55" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (51 samples, 0.05%)</title><rect x="797.0" y="421" width="0.6" height="15.0" fill="rgb(232,226,9)" rx="2" ry="2" />
<text  x="800.04" y="431.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (11 samples, 0.01%)</title><rect x="1054.3" y="197" width="0.2" height="15.0" fill="rgb(222,57,19)" rx="2" ry="2" />
<text  x="1057.34" y="207.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (56 samples, 0.05%)</title><rect x="887.6" y="277" width="0.6" height="15.0" fill="rgb(235,120,6)" rx="2" ry="2" />
<text  x="890.63" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="933.7" y="245" width="0.1" height="15.0" fill="rgb(235,11,14)" rx="2" ry="2" />
<text  x="936.69" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;int  (10,019 samples, 9.04%)</title><rect x="352.3" y="245" width="106.7" height="15.0" fill="rgb(222,74,52)" rx="2" ry="2" />
<text  x="355.28" y="255.5" >std::function..</text>
</g>
<g >
<title>__memset_avx2_unaligned_erms (88 samples, 0.08%)</title><rect x="925.0" y="261" width="0.9" height="15.0" fill="rgb(215,151,23)" rx="2" ry="2" />
<text  x="927.97" y="271.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.01%)</title><rect x="472.2" y="213" width="0.1" height="15.0" fill="rgb(244,93,14)" rx="2" ry="2" />
<text  x="475.23" y="223.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (21 samples, 0.02%)</title><rect x="20.8" y="421" width="0.2" height="15.0" fill="rgb(251,78,39)" rx="2" ry="2" />
<text  x="23.78" y="431.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (159 samples, 0.14%)</title><rect x="1045.6" y="309" width="1.7" height="15.0" fill="rgb(226,206,46)" rx="2" ry="2" />
<text  x="1048.61" y="319.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (366 samples, 0.33%)</title><rect x="1029.0" y="181" width="3.9" height="15.0" fill="rgb(222,132,40)" rx="2" ry="2" />
<text  x="1032.04" y="191.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.01%)</title><rect x="1057.9" y="213" width="0.2" height="15.0" fill="rgb(250,216,27)" rx="2" ry="2" />
<text  x="1060.95" y="223.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (1,867 samples, 1.68%)</title><rect x="176.1" y="213" width="19.9" height="15.0" fill="rgb(253,170,6)" rx="2" ry="2" />
<text  x="179.09" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="1054.7" y="261" width="0.1" height="15.0" fill="rgb(210,177,31)" rx="2" ry="2" />
<text  x="1057.71" y="271.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (183 samples, 0.17%)</title><rect x="187.6" y="181" width="2.0" height="15.0" fill="rgb(218,204,11)" rx="2" ry="2" />
<text  x="190.63" y="191.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (374 samples, 0.34%)</title><rect x="536.9" y="261" width="4.0" height="15.0" fill="rgb(223,194,26)" rx="2" ry="2" />
<text  x="539.89" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (147 samples, 0.13%)</title><rect x="1059.5" y="213" width="1.6" height="15.0" fill="rgb(230,210,10)" rx="2" ry="2" />
<text  x="1062.54" y="223.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (126 samples, 0.11%)</title><rect x="985.8" y="245" width="1.3" height="15.0" fill="rgb(228,29,34)" rx="2" ry="2" />
<text  x="988.75" y="255.5" ></text>
</g>
<g >
<title>pthread_cond_init@@GLIBC_2.3.2 (25 samples, 0.02%)</title><rect x="852.8" y="293" width="0.3" height="15.0" fill="rgb(248,23,35)" rx="2" ry="2" />
<text  x="855.84" y="303.5" ></text>
</g>
<g >
<title>vfprintf (40 samples, 0.04%)</title><rect x="838.2" y="565" width="0.4" height="15.0" fill="rgb(247,148,46)" rx="2" ry="2" />
<text  x="841.17" y="575.5" ></text>
</g>
<g >
<title>__tls_get_addr (14 samples, 0.01%)</title><rect x="820.7" y="565" width="0.1" height="15.0" fill="rgb(210,136,8)" rx="2" ry="2" />
<text  x="823.68" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;scythedb::Slice*, scythedb::Slice*, std::allocator&lt;scythedb::Slice&gt; &gt; (75 samples, 0.07%)</title><rect x="43.7" y="277" width="0.8" height="15.0" fill="rgb(222,19,20)" rx="2" ry="2" />
<text  x="46.73" y="287.5" ></text>
</g>
<g >
<title>lane_hold (44 samples, 0.04%)</title><rect x="1083.7" y="581" width="0.5" height="15.0" fill="rgb(237,62,19)" rx="2" ry="2" />
<text  x="1086.70" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="856.7" y="213" width="0.1" height="15.0" fill="rgb(221,181,10)" rx="2" ry="2" />
<text  x="859.68" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (27 samples, 0.02%)</title><rect x="945.4" y="213" width="0.3" height="15.0" fill="rgb(247,136,2)" rx="2" ry="2" />
<text  x="948.38" y="223.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (38 samples, 0.03%)</title><rect x="464.7" y="229" width="0.4" height="15.0" fill="rgb(250,151,30)" rx="2" ry="2" />
<text  x="467.67" y="239.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (128 samples, 0.12%)</title><rect x="881.9" y="149" width="1.3" height="15.0" fill="rgb(242,150,20)" rx="2" ry="2" />
<text  x="884.87" y="159.5" ></text>
</g>
<g >
<title>_int_free (126 samples, 0.11%)</title><rect x="820.9" y="565" width="1.3" height="15.0" fill="rgb(254,76,47)" rx="2" ry="2" />
<text  x="823.87" y="575.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (49 samples, 0.04%)</title><rect x="926.9" y="293" width="0.5" height="15.0" fill="rgb(211,151,33)" rx="2" ry="2" />
<text  x="929.85" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (22 samples, 0.02%)</title><rect x="859.2" y="197" width="0.2" height="15.0" fill="rgb(243,175,25)" rx="2" ry="2" />
<text  x="862.15" y="207.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (16 samples, 0.01%)</title><rect x="243.0" y="53" width="0.2" height="15.0" fill="rgb(217,209,10)" rx="2" ry="2" />
<text  x="246.03" y="63.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (74,130 samples, 66.90%)</title><rect x="10.1" y="597" width="789.5" height="15.0" fill="rgb(247,171,33)" rx="2" ry="2" />
<text  x="13.13" y="607.5" >[libstdc++.so.6.0.25]</text>
</g>
<g >
<title>operator delete (13 samples, 0.01%)</title><rect x="933.3" y="229" width="0.1" height="15.0" fill="rgb(214,24,53)" rx="2" ry="2" />
<text  x="936.29" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (44 samples, 0.04%)</title><rect x="910.1" y="197" width="0.5" height="15.0" fill="rgb(252,42,6)" rx="2" ry="2" />
<text  x="913.12" y="207.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (10 samples, 0.01%)</title><rect x="116.8" y="277" width="0.2" height="15.0" fill="rgb(252,5,33)" rx="2" ry="2" />
<text  x="119.85" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (136 samples, 0.12%)</title><rect x="40.3" y="325" width="1.5" height="15.0" fill="rgb(250,105,18)" rx="2" ry="2" />
<text  x="43.32" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (11 samples, 0.01%)</title><rect x="1052.0" y="213" width="0.1" height="15.0" fill="rgb(247,28,51)" rx="2" ry="2" />
<text  x="1054.97" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Equal (85 samples, 0.08%)</title><rect x="256.0" y="277" width="0.9" height="15.0" fill="rgb(237,84,3)" rx="2" ry="2" />
<text  x="258.98" y="287.5" ></text>
</g>
<g >
<title>utils::RandomDouble (153 samples, 0.14%)</title><rect x="1069.7" y="245" width="1.6" height="15.0" fill="rgb(239,21,39)" rx="2" ry="2" />
<text  x="1072.66" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::size_approx (16,466 samples, 14.86%)</title><rect x="553.5" y="325" width="175.4" height="15.0" fill="rgb(239,138,36)" rx="2" ry="2" />
<text  x="556.52" y="335.5" >moodycamel::Concurrent..</text>
</g>
<g >
<title>XXH64_avalanche (10 samples, 0.01%)</title><rect x="995.5" y="181" width="0.1" height="15.0" fill="rgb(219,37,24)" rx="2" ry="2" />
<text  x="998.48" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (400 samples, 0.36%)</title><rect x="951.0" y="277" width="4.2" height="15.0" fill="rgb(246,89,40)" rx="2" ry="2" />
<text  x="953.96" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (30 samples, 0.03%)</title><rect x="355.7" y="197" width="0.4" height="15.0" fill="rgb(254,225,29)" rx="2" ry="2" />
<text  x="358.74" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (18 samples, 0.02%)</title><rect x="471.2" y="245" width="0.2" height="15.0" fill="rgb(254,138,45)" rx="2" ry="2" />
<text  x="474.22" y="255.5" ></text>
</g>
<g >
<title>scythedb::Status::OK (17 samples, 0.02%)</title><rect x="904.3" y="309" width="0.2" height="15.0" fill="rgb(229,206,0)" rx="2" ry="2" />
<text  x="907.34" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (11 samples, 0.01%)</title><rect x="120.4" y="245" width="0.1" height="15.0" fill="rgb(223,73,54)" rx="2" ry="2" />
<text  x="123.35" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="481.0" y="261" width="0.1" height="15.0" fill="rgb(222,158,37)" rx="2" ry="2" />
<text  x="483.98" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (1,193 samples, 1.08%)</title><rect x="235.0" y="277" width="12.7" height="15.0" fill="rgb(231,175,29)" rx="2" ry="2" />
<text  x="237.99" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (182 samples, 0.16%)</title><rect x="469.0" y="229" width="1.9" height="15.0" fill="rgb(208,161,31)" rx="2" ry="2" />
<text  x="471.98" y="239.5" ></text>
</g>
<g >
<title>std::mutex::lock (323 samples, 0.29%)</title><rect x="1064.0" y="229" width="3.5" height="15.0" fill="rgb(232,113,1)" rx="2" ry="2" />
<text  x="1067.04" y="239.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (22 samples, 0.02%)</title><rect x="991.7" y="229" width="0.3" height="15.0" fill="rgb(251,68,14)" rx="2" ry="2" />
<text  x="994.73" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (37 samples, 0.03%)</title><rect x="855.9" y="197" width="0.4" height="15.0" fill="rgb(226,33,8)" rx="2" ry="2" />
<text  x="858.89" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (11 samples, 0.01%)</title><rect x="929.4" y="197" width="0.1" height="15.0" fill="rgb(234,158,49)" rx="2" ry="2" />
<text  x="932.37" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (62 samples, 0.06%)</title><rect x="742.1" y="325" width="0.7" height="15.0" fill="rgb(222,154,26)" rx="2" ry="2" />
<text  x="745.14" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (325 samples, 0.29%)</title><rect x="941.7" y="197" width="3.5" height="15.0" fill="rgb(234,119,28)" rx="2" ry="2" />
<text  x="944.70" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (99 samples, 0.09%)</title><rect x="1167.5" y="597" width="1.0" height="15.0" fill="rgb(212,117,45)" rx="2" ry="2" />
<text  x="1170.47" y="607.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (11 samples, 0.01%)</title><rect x="253.1" y="181" width="0.1" height="15.0" fill="rgb(253,225,21)" rx="2" ry="2" />
<text  x="256.13" y="191.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (33 samples, 0.03%)</title><rect x="1073.9" y="277" width="0.3" height="15.0" fill="rgb(232,40,21)" rx="2" ry="2" />
<text  x="1076.86" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (5,507 samples, 4.97%)</title><rect x="845.3" y="309" width="58.7" height="15.0" fill="rgb(236,39,2)" rx="2" ry="2" />
<text  x="848.33" y="319.5" >scythe..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (38 samples, 0.03%)</title><rect x="204.4" y="277" width="0.5" height="15.0" fill="rgb(236,146,0)" rx="2" ry="2" />
<text  x="207.45" y="287.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;scythedb::Slice*, scythedb::Slice*, std::allocator&lt;scythedb::Slice&gt; &gt; (152 samples, 0.14%)</title><rect x="230.3" y="277" width="1.6" height="15.0" fill="rgb(206,55,46)" rx="2" ry="2" />
<text  x="233.27" y="287.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.04%)</title><rect x="812.7" y="549" width="0.4" height="15.0" fill="rgb(226,151,25)" rx="2" ry="2" />
<text  x="815.67" y="559.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (274 samples, 0.25%)</title><rect x="1042.7" y="309" width="2.9" height="15.0" fill="rgb(207,41,10)" rx="2" ry="2" />
<text  x="1045.67" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="921.5" y="261" width="0.1" height="15.0" fill="rgb(212,32,52)" rx="2" ry="2" />
<text  x="924.47" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (38 samples, 0.03%)</title><rect x="906.8" y="293" width="0.4" height="15.0" fill="rgb(230,175,4)" rx="2" ry="2" />
<text  x="909.82" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (63 samples, 0.06%)</title><rect x="898.3" y="213" width="0.6" height="15.0" fill="rgb(234,57,53)" rx="2" ry="2" />
<text  x="901.27" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (133 samples, 0.12%)</title><rect x="861.1" y="181" width="1.5" height="15.0" fill="rgb(240,156,29)" rx="2" ry="2" />
<text  x="864.14" y="191.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (537 samples, 0.48%)</title><rect x="888.4" y="293" width="5.7" height="15.0" fill="rgb(235,76,15)" rx="2" ry="2" />
<text  x="891.35" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (28 samples, 0.03%)</title><rect x="1060.1" y="165" width="0.3" height="15.0" fill="rgb(236,195,54)" rx="2" ry="2" />
<text  x="1063.11" y="175.5" ></text>
</g>
<g >
<title>std::make_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (446 samples, 0.40%)</title><rect x="1006.3" y="277" width="4.8" height="15.0" fill="rgb(230,110,38)" rx="2" ry="2" />
<text  x="1009.32" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (16 samples, 0.01%)</title><rect x="906.4" y="309" width="0.2" height="15.0" fill="rgb(243,79,35)" rx="2" ry="2" />
<text  x="909.43" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (15 samples, 0.01%)</title><rect x="1046.5" y="229" width="0.2" height="15.0" fill="rgb(233,169,30)" rx="2" ry="2" />
<text  x="1049.52" y="239.5" ></text>
</g>
<g >
<title>std::this_thread::yield (26 samples, 0.02%)</title><rect x="793.3" y="373" width="0.3" height="15.0" fill="rgb(208,205,37)" rx="2" ry="2" />
<text  x="796.29" y="383.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (150 samples, 0.14%)</title><rect x="1080.3" y="261" width="1.6" height="15.0" fill="rgb(228,177,7)" rx="2" ry="2" />
<text  x="1083.26" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (20 samples, 0.02%)</title><rect x="949.5" y="309" width="0.2" height="15.0" fill="rgb(235,170,18)" rx="2" ry="2" />
<text  x="952.49" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (175 samples, 0.16%)</title><rect x="1016.2" y="149" width="1.9" height="15.0" fill="rgb(237,139,36)" rx="2" ry="2" />
<text  x="1019.24" y="159.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (180 samples, 0.16%)</title><rect x="890.5" y="197" width="1.9" height="15.0" fill="rgb(230,38,25)" rx="2" ry="2" />
<text  x="893.46" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (27 samples, 0.02%)</title><rect x="1036.9" y="245" width="0.3" height="15.0" fill="rgb(250,200,27)" rx="2" ry="2" />
<text  x="1039.90" y="255.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (12 samples, 0.01%)</title><rect x="220.9" y="181" width="0.1" height="15.0" fill="rgb(227,150,0)" rx="2" ry="2" />
<text  x="223.85" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (10 samples, 0.01%)</title><rect x="894.8" y="245" width="0.1" height="15.0" fill="rgb(222,3,46)" rx="2" ry="2" />
<text  x="897.81" y="255.5" ></text>
</g>
<g >
<title>vfprintf (101 samples, 0.09%)</title><rect x="1118.4" y="501" width="1.1" height="15.0" fill="rgb(207,161,43)" rx="2" ry="2" />
<text  x="1121.39" y="511.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (13 samples, 0.01%)</title><rect x="864.6" y="197" width="0.2" height="15.0" fill="rgb(224,81,29)" rx="2" ry="2" />
<text  x="867.65" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string@plt (13 samples, 0.01%)</title><rect x="841.4" y="341" width="0.2" height="15.0" fill="rgb(211,229,7)" rx="2" ry="2" />
<text  x="844.42" y="351.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (1,680 samples, 1.52%)</title><rect x="853.4" y="293" width="17.9" height="15.0" fill="rgb(223,118,42)" rx="2" ry="2" />
<text  x="856.37" y="303.5" ></text>
</g>
<g >
<title>malloc (26 samples, 0.02%)</title><rect x="1028.0" y="181" width="0.3" height="15.0" fill="rgb(225,199,27)" rx="2" ry="2" />
<text  x="1030.99" y="191.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (32 samples, 0.03%)</title><rect x="457.1" y="197" width="0.3" height="15.0" fill="rgb(246,141,42)" rx="2" ry="2" />
<text  x="460.10" y="207.5" ></text>
</g>
<g >
<title>pthread_cond_wait@@GLIBC_2.3.2 (1,303 samples, 1.18%)</title><rect x="1175.1" y="597" width="13.9" height="15.0" fill="rgb(243,144,30)" rx="2" ry="2" />
<text  x="1178.14" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~vector (50 samples, 0.05%)</title><rect x="496.1" y="341" width="0.5" height="15.0" fill="rgb(244,75,50)" rx="2" ry="2" />
<text  x="499.09" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (63 samples, 0.06%)</title><rect x="1057.4" y="245" width="0.7" height="15.0" fill="rgb(241,193,20)" rx="2" ry="2" />
<text  x="1060.45" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (40 samples, 0.04%)</title><rect x="1025.2" y="277" width="0.4" height="15.0" fill="rgb(232,190,43)" rx="2" ry="2" />
<text  x="1028.17" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::key (49 samples, 0.04%)</title><rect x="203.4" y="325" width="0.5" height="15.0" fill="rgb(217,130,12)" rx="2" ry="2" />
<text  x="206.41" y="335.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (163 samples, 0.15%)</title><rect x="1000.4" y="213" width="1.8" height="15.0" fill="rgb(219,87,3)" rx="2" ry="2" />
<text  x="1003.44" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (273 samples, 0.25%)</title><rect x="951.3" y="261" width="3.0" height="15.0" fill="rgb(249,215,18)" rx="2" ry="2" />
<text  x="954.34" y="271.5" ></text>
</g>
<g >
<title>scythedb::PMMemcpy&lt;char&gt; (56 samples, 0.05%)</title><rect x="476.9" y="293" width="0.6" height="15.0" fill="rgb(212,34,53)" rx="2" ry="2" />
<text  x="479.95" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (12 samples, 0.01%)</title><rect x="27.5" y="453" width="0.1" height="15.0" fill="rgb(222,181,12)" rx="2" ry="2" />
<text  x="30.47" y="463.5" ></text>
</g>
<g >
<title>XXH64_round (34 samples, 0.03%)</title><rect x="875.8" y="197" width="0.3" height="15.0" fill="rgb(243,197,2)" rx="2" ry="2" />
<text  x="878.77" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (23 samples, 0.02%)</title><rect x="894.4" y="261" width="0.2" height="15.0" fill="rgb(230,131,42)" rx="2" ry="2" />
<text  x="897.40" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (17 samples, 0.02%)</title><rect x="1052.2" y="245" width="0.2" height="15.0" fill="rgb(218,75,46)" rx="2" ry="2" />
<text  x="1055.17" y="255.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (72,375 samples, 65.32%)</title><rect x="27.9" y="453" width="770.7" height="15.0" fill="rgb(219,56,52)" rx="2" ry="2" />
<text  x="30.86" y="463.5" >std::_Function_handler&lt;void </text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (21 samples, 0.02%)</title><rect x="211.8" y="341" width="0.3" height="15.0" fill="rgb(247,66,43)" rx="2" ry="2" />
<text  x="214.84" y="351.5" ></text>
</g>
<g >
<title>operator delete (22 samples, 0.02%)</title><rect x="1017.4" y="85" width="0.3" height="15.0" fill="rgb(227,11,51)" rx="2" ry="2" />
<text  x="1020.45" y="95.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (28 samples, 0.03%)</title><rect x="473.5" y="261" width="0.3" height="15.0" fill="rgb(231,0,6)" rx="2" ry="2" />
<text  x="476.50" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (22 samples, 0.02%)</title><rect x="973.6" y="229" width="0.2" height="15.0" fill="rgb(243,38,3)" rx="2" ry="2" />
<text  x="976.56" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (202 samples, 0.18%)</title><rect x="1007.7" y="197" width="2.2" height="15.0" fill="rgb(253,66,28)" rx="2" ry="2" />
<text  x="1010.74" y="207.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducerHash*&gt;::load (46 samples, 0.04%)</title><rect x="884.5" y="229" width="0.5" height="15.0" fill="rgb(213,201,15)" rx="2" ry="2" />
<text  x="887.48" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (15 samples, 0.01%)</title><rect x="1056.7" y="261" width="0.2" height="15.0" fill="rgb(219,50,34)" rx="2" ry="2" />
<text  x="1059.70" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (18 samples, 0.02%)</title><rect x="1051.9" y="229" width="0.2" height="15.0" fill="rgb(253,217,39)" rx="2" ry="2" />
<text  x="1054.94" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::construct_at_end&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (70 samples, 0.06%)</title><rect x="242.5" y="85" width="0.7" height="15.0" fill="rgb(212,113,7)" rx="2" ry="2" />
<text  x="245.50" y="95.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::InitMessage (614 samples, 0.55%)</title><rect x="985.6" y="277" width="6.5" height="15.0" fill="rgb(252,197,32)" rx="2" ry="2" />
<text  x="988.58" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13 samples, 0.01%)</title><rect x="1017.7" y="101" width="0.2" height="15.0" fill="rgb(212,155,3)" rx="2" ry="2" />
<text  x="1020.74" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (12 samples, 0.01%)</title><rect x="892.0" y="149" width="0.1" height="15.0" fill="rgb(247,189,51)" rx="2" ry="2" />
<text  x="894.98" y="159.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Node (15 samples, 0.01%)</title><rect x="473.0" y="261" width="0.2" height="15.0" fill="rgb(241,96,7)" rx="2" ry="2" />
<text  x="476.03" y="271.5" ></text>
</g>
<g >
<title>moodycamel::details::circular_less_than&lt;unsigned long&gt; (419 samples, 0.38%)</title><rect x="728.9" y="325" width="4.4" height="15.0" fill="rgb(245,63,26)" rx="2" ry="2" />
<text  x="731.88" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::deallocate (24 samples, 0.02%)</title><rect x="224.7" y="293" width="0.2" height="15.0" fill="rgb(240,43,30)" rx="2" ry="2" />
<text  x="227.67" y="303.5" ></text>
</g>
<g >
<title>alloc_class_by_alloc_size (30 samples, 0.03%)</title><rect x="1144.3" y="597" width="0.4" height="15.0" fill="rgb(230,114,39)" rx="2" ry="2" />
<text  x="1147.33" y="607.5" ></text>
</g>
<g >
<title>_IO_no_init (25 samples, 0.02%)</title><rect x="813.3" y="565" width="0.3" height="15.0" fill="rgb(218,20,29)" rx="2" ry="2" />
<text  x="816.32" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (183 samples, 0.17%)</title><rect x="972.5" y="309" width="2.0" height="15.0" fill="rgb(220,218,1)" rx="2" ry="2" />
<text  x="975.50" y="319.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (14 samples, 0.01%)</title><rect x="907.5" y="261" width="0.1" height="15.0" fill="rgb(250,36,45)" rx="2" ry="2" />
<text  x="910.48" y="271.5" ></text>
</g>
<g >
<title>std::move&lt;std::allocator&lt;char&gt;&amp;&gt; (10 samples, 0.01%)</title><rect x="1034.3" y="261" width="0.1" height="15.0" fill="rgb(230,145,50)" rx="2" ry="2" />
<text  x="1037.26" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (200 samples, 0.18%)</title><rect x="854.3" y="229" width="2.1" height="15.0" fill="rgb(216,18,20)" rx="2" ry="2" />
<text  x="857.29" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (138 samples, 0.12%)</title><rect x="1023.7" y="261" width="1.4" height="15.0" fill="rgb(242,197,13)" rx="2" ry="2" />
<text  x="1026.68" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::back (13 samples, 0.01%)</title><rect x="45.1" y="293" width="0.1" height="15.0" fill="rgb(212,229,54)" rx="2" ry="2" />
<text  x="48.10" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (71 samples, 0.06%)</title><rect x="256.1" y="213" width="0.7" height="15.0" fill="rgb(225,177,37)" rx="2" ry="2" />
<text  x="259.07" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (582 samples, 0.53%)</title><rect x="240.9" y="165" width="6.2" height="15.0" fill="rgb(246,207,28)" rx="2" ry="2" />
<text  x="243.89" y="175.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (16 samples, 0.01%)</title><rect x="1040.4" y="181" width="0.1" height="15.0" fill="rgb(246,158,25)" rx="2" ry="2" />
<text  x="1043.37" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (14 samples, 0.01%)</title><rect x="929.7" y="197" width="0.1" height="15.0" fill="rgb(233,13,53)" rx="2" ry="2" />
<text  x="932.65" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (313 samples, 0.28%)</title><rect x="966.0" y="213" width="3.3" height="15.0" fill="rgb(207,201,32)" rx="2" ry="2" />
<text  x="968.99" y="223.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (22,775 samples, 20.55%)</title><rect x="839.7" y="549" width="242.5" height="15.0" fill="rgb(228,46,36)" rx="2" ry="2" />
<text  x="842.69" y="559.5" >std::call_once&lt;void </text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (23 samples, 0.02%)</title><rect x="947.1" y="261" width="0.3" height="15.0" fill="rgb(241,168,31)" rx="2" ry="2" />
<text  x="950.12" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (260 samples, 0.23%)</title><rect x="908.8" y="325" width="2.8" height="15.0" fill="rgb(243,92,27)" rx="2" ry="2" />
<text  x="911.81" y="335.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (70 samples, 0.06%)</title><rect x="251.2" y="261" width="0.7" height="15.0" fill="rgb(225,55,2)" rx="2" ry="2" />
<text  x="254.19" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::allocate (34 samples, 0.03%)</title><rect x="43.3" y="261" width="0.4" height="15.0" fill="rgb(247,81,38)" rx="2" ry="2" />
<text  x="46.30" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace (553 samples, 0.50%)</title><rect x="204.0" y="309" width="5.9" height="15.0" fill="rgb(228,100,18)" rx="2" ry="2" />
<text  x="207.05" y="319.5" ></text>
</g>
<g >
<title>container_seglists_get_rm_block_bestfit (11 samples, 0.01%)</title><rect x="1083.4" y="581" width="0.1" height="15.0" fill="rgb(240,187,11)" rx="2" ry="2" />
<text  x="1086.36" y="591.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (406 samples, 0.37%)</title><rect x="1016.1" y="165" width="4.4" height="15.0" fill="rgb(215,75,52)" rx="2" ry="2" />
<text  x="1019.15" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (23 samples, 0.02%)</title><rect x="855.4" y="197" width="0.3" height="15.0" fill="rgb(229,47,2)" rx="2" ry="2" />
<text  x="858.43" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (11 samples, 0.01%)</title><rect x="1041.9" y="261" width="0.1" height="15.0" fill="rgb(219,192,4)" rx="2" ry="2" />
<text  x="1044.85" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (32 samples, 0.03%)</title><rect x="988.0" y="181" width="0.3" height="15.0" fill="rgb(220,161,52)" rx="2" ry="2" />
<text  x="990.99" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (13 samples, 0.01%)</title><rect x="988.4" y="197" width="0.1" height="15.0" fill="rgb(249,104,35)" rx="2" ry="2" />
<text  x="991.40" y="207.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (27 samples, 0.02%)</title><rect x="1037.5" y="245" width="0.3" height="15.0" fill="rgb(209,19,21)" rx="2" ry="2" />
<text  x="1040.53" y="255.5" ></text>
</g>
<g >
<title>__pthread_disable_asynccancel (107 samples, 0.10%)</title><rect x="1129.8" y="597" width="1.1" height="15.0" fill="rgb(234,33,37)" rx="2" ry="2" />
<text  x="1132.78" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (21 samples, 0.02%)</title><rect x="927.7" y="293" width="0.2" height="15.0" fill="rgb(232,70,16)" rx="2" ry="2" />
<text  x="930.71" y="303.5" ></text>
</g>
<g >
<title>std::mutex::unlock (190 samples, 0.17%)</title><rect x="1077.6" y="293" width="2.0" height="15.0" fill="rgb(209,129,17)" rx="2" ry="2" />
<text  x="1080.59" y="303.5" ></text>
</g>
<g >
<title>[unknown] (2,316 samples, 2.09%)</title><rect x="812.6" y="581" width="24.7" height="15.0" fill="rgb(235,212,10)" rx="2" ry="2" />
<text  x="815.62" y="591.5" >[..</text>
</g>
<g >
<title>std::operator&amp; (413 samples, 0.37%)</title><rect x="734.4" y="325" width="4.4" height="15.0" fill="rgb(236,11,45)" rx="2" ry="2" />
<text  x="737.45" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (25 samples, 0.02%)</title><rect x="253.4" y="181" width="0.3" height="15.0" fill="rgb(209,82,13)" rx="2" ry="2" />
<text  x="256.38" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (12 samples, 0.01%)</title><rect x="489.1" y="261" width="0.2" height="15.0" fill="rgb(243,204,6)" rx="2" ry="2" />
<text  x="492.13" y="271.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (11 samples, 0.01%)</title><rect x="856.1" y="165" width="0.1" height="15.0" fill="rgb(218,65,28)" rx="2" ry="2" />
<text  x="859.13" y="175.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (1,500 samples, 1.35%)</title><rect x="234.2" y="293" width="15.9" height="15.0" fill="rgb(225,185,40)" rx="2" ry="2" />
<text  x="237.15" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (250 samples, 0.23%)</title><rect x="1011.9" y="197" width="2.6" height="15.0" fill="rgb(247,88,36)" rx="2" ry="2" />
<text  x="1014.85" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::SetNext (60 samples, 0.05%)</title><rect x="473.8" y="277" width="0.6" height="15.0" fill="rgb(205,18,6)" rx="2" ry="2" />
<text  x="476.80" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::PutMsgHandle (25,502 samples, 23.02%)</title><rect x="225.0" y="357" width="271.6" height="15.0" fill="rgb(243,210,23)" rx="2" ry="2" />
<text  x="228.04" y="367.5" >scythedb::(anonymous namespace)::NVM..</text>
</g>
<g >
<title>scythedb::Arena::AllocateAligned (11 samples, 0.01%)</title><rect x="463.8" y="261" width="0.1" height="15.0" fill="rgb(231,88,52)" rx="2" ry="2" />
<text  x="466.81" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (13 samples, 0.01%)</title><rect x="743.0" y="341" width="0.2" height="15.0" fill="rgb(228,30,47)" rx="2" ry="2" />
<text  x="746.03" y="351.5" ></text>
</g>
<g >
<title>ycsbc::RunBench (11 samples, 0.01%)</title><rect x="838.6" y="549" width="0.1" height="15.0" fill="rgb(226,132,14)" rx="2" ry="2" />
<text  x="841.62" y="559.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (17 samples, 0.02%)</title><rect x="998.1" y="277" width="0.2" height="15.0" fill="rgb(218,73,1)" rx="2" ry="2" />
<text  x="1001.08" y="287.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (15 samples, 0.01%)</title><rect x="1010.6" y="197" width="0.1" height="15.0" fill="rgb(210,1,1)" rx="2" ry="2" />
<text  x="1013.58" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (16 samples, 0.01%)</title><rect x="1045.3" y="261" width="0.2" height="15.0" fill="rgb(211,186,1)" rx="2" ry="2" />
<text  x="1048.30" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (37 samples, 0.03%)</title><rect x="1039.8" y="197" width="0.4" height="15.0" fill="rgb(220,122,41)" rx="2" ry="2" />
<text  x="1042.81" y="207.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (19 samples, 0.02%)</title><rect x="117.0" y="277" width="0.2" height="15.0" fill="rgb(218,120,52)" rx="2" ry="2" />
<text  x="119.95" y="287.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (18 samples, 0.02%)</title><rect x="540.6" y="245" width="0.2" height="15.0" fill="rgb(223,45,16)" rx="2" ry="2" />
<text  x="543.56" y="255.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (57 samples, 0.05%)</title><rect x="246.5" y="101" width="0.6" height="15.0" fill="rgb(247,223,16)" rx="2" ry="2" />
<text  x="249.46" y="111.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (326 samples, 0.29%)</title><rect x="50.9" y="245" width="3.5" height="15.0" fill="rgb(233,145,46)" rx="2" ry="2" />
<text  x="53.93" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (10 samples, 0.01%)</title><rect x="955.1" y="261" width="0.1" height="15.0" fill="rgb(214,149,46)" rx="2" ry="2" />
<text  x="958.09" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (9,453 samples, 8.53%)</title><rect x="355.3" y="213" width="100.6" height="15.0" fill="rgb(215,106,22)" rx="2" ry="2" />
<text  x="358.26" y="223.5" >scythedb::NV..</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (18 samples, 0.02%)</title><rect x="957.0" y="213" width="0.2" height="15.0" fill="rgb(226,61,51)" rx="2" ry="2" />
<text  x="960.03" y="223.5" ></text>
</g>
<g >
<title>scythedb::EncodeVarint32 (20 samples, 0.02%)</title><rect x="854.0" y="245" width="0.2" height="15.0" fill="rgb(237,198,38)" rx="2" ry="2" />
<text  x="857.02" y="255.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (606 samples, 0.55%)</title><rect x="878.7" y="293" width="6.5" height="15.0" fill="rgb(205,53,45)" rx="2" ry="2" />
<text  x="881.75" y="303.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;std::_Bind&lt;void  (24 samples, 0.02%)</title><rect x="798.2" y="421" width="0.2" height="15.0" fill="rgb(244,119,23)" rx="2" ry="2" />
<text  x="801.17" y="431.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (9,866 samples, 8.90%)</title><rect x="353.5" y="229" width="105.1" height="15.0" fill="rgb(252,187,8)" rx="2" ry="2" />
<text  x="356.54" y="239.5" >std::_Functi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (97 samples, 0.09%)</title><rect x="963.1" y="261" width="1.0" height="15.0" fill="rgb(236,112,4)" rx="2" ry="2" />
<text  x="966.09" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (15 samples, 0.01%)</title><rect x="478.5" y="229" width="0.2" height="15.0" fill="rgb(218,49,17)" rx="2" ry="2" />
<text  x="481.50" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (412 samples, 0.37%)</title><rect x="205.0" y="277" width="4.4" height="15.0" fill="rgb(251,74,35)" rx="2" ry="2" />
<text  x="208.02" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (306 samples, 0.28%)</title><rect x="959.2" y="293" width="3.2" height="15.0" fill="rgb(226,178,12)" rx="2" ry="2" />
<text  x="962.18" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (2,019 samples, 1.82%)</title><rect x="330.0" y="213" width="21.5" height="15.0" fill="rgb(235,148,28)" rx="2" ry="2" />
<text  x="333.02" y="223.5" >p..</text>
</g>
<g >
<title>scythedb::Slice::Slice (20 samples, 0.02%)</title><rect x="454.6" y="165" width="0.2" height="15.0" fill="rgb(219,138,49)" rx="2" ry="2" />
<text  x="457.61" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (11 samples, 0.01%)</title><rect x="927.4" y="309" width="0.1" height="15.0" fill="rgb(228,188,54)" rx="2" ry="2" />
<text  x="930.37" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (19 samples, 0.02%)</title><rect x="867.3" y="229" width="0.2" height="15.0" fill="rgb(230,86,32)" rx="2" ry="2" />
<text  x="870.29" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (18 samples, 0.02%)</title><rect x="1054.1" y="213" width="0.2" height="15.0" fill="rgb(242,205,48)" rx="2" ry="2" />
<text  x="1057.09" y="223.5" ></text>
</g>
<g >
<title>std::distance&lt;char*&gt; (13 samples, 0.01%)</title><rect x="969.2" y="197" width="0.1" height="15.0" fill="rgb(232,78,28)" rx="2" ry="2" />
<text  x="972.18" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateNewChunk (815 samples, 0.74%)</title><rect x="238.9" y="197" width="8.7" height="15.0" fill="rgb(238,208,24)" rx="2" ry="2" />
<text  x="241.91" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (18 samples, 0.02%)</title><rect x="927.7" y="277" width="0.2" height="15.0" fill="rgb(251,47,21)" rx="2" ry="2" />
<text  x="930.72" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (10 samples, 0.01%)</title><rect x="921.6" y="277" width="0.1" height="15.0" fill="rgb(240,3,17)" rx="2" ry="2" />
<text  x="924.58" y="287.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (19 samples, 0.02%)</title><rect x="968.7" y="165" width="0.2" height="15.0" fill="rgb(218,199,49)" rx="2" ry="2" />
<text  x="971.71" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (101 samples, 0.09%)</title><rect x="986.0" y="229" width="1.1" height="15.0" fill="rgb(254,206,42)" rx="2" ry="2" />
<text  x="989.02" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;std::_Bind&lt;void  (79 samples, 0.07%)</title><rect x="797.6" y="437" width="0.8" height="15.0" fill="rgb(221,151,48)" rx="2" ry="2" />
<text  x="800.59" y="447.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (153 samples, 0.14%)</title><rect x="1117.8" y="581" width="1.7" height="15.0" fill="rgb(211,63,26)" rx="2" ry="2" />
<text  x="1120.85" y="591.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (19,356 samples, 17.47%)</title><rect x="256.9" y="277" width="206.1" height="15.0" fill="rgb(228,167,10)" rx="2" ry="2" />
<text  x="259.89" y="287.5" >scythedb::NVMSkipList::Find..</text>
</g>
<g >
<title>std::__invoke&lt;void  (22,775 samples, 20.55%)</title><rect x="839.7" y="517" width="242.5" height="15.0" fill="rgb(250,147,36)" rx="2" ry="2" />
<text  x="842.69" y="527.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (403 samples, 0.36%)</title><rect x="205.0" y="261" width="4.3" height="15.0" fill="rgb(227,18,18)" rx="2" ry="2" />
<text  x="208.05" y="271.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (18 samples, 0.02%)</title><rect x="792.5" y="373" width="0.2" height="15.0" fill="rgb(209,179,29)" rx="2" ry="2" />
<text  x="795.55" y="383.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::c_callback (10 samples, 0.01%)</title><rect x="468.8" y="245" width="0.1" height="15.0" fill="rgb(213,100,29)" rx="2" ry="2" />
<text  x="471.77" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (33 samples, 0.03%)</title><rect x="490.3" y="277" width="0.4" height="15.0" fill="rgb(250,20,25)" rx="2" ry="2" />
<text  x="493.34" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (19 samples, 0.02%)</title><rect x="865.1" y="181" width="0.2" height="15.0" fill="rgb(223,185,41)" rx="2" ry="2" />
<text  x="868.05" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13 samples, 0.01%)</title><rect x="961.2" y="277" width="0.2" height="15.0" fill="rgb(234,217,9)" rx="2" ry="2" />
<text  x="964.23" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::Allocate (1,146 samples, 1.03%)</title><rect x="235.4" y="229" width="12.2" height="15.0" fill="rgb(242,123,47)" rx="2" ry="2" />
<text  x="238.39" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (25 samples, 0.02%)</title><rect x="967.9" y="197" width="0.3" height="15.0" fill="rgb(224,222,22)" rx="2" ry="2" />
<text  x="970.93" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;scythedb::Slice*, std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt; &gt; (13 samples, 0.01%)</title><rect x="229.0" y="277" width="0.2" height="15.0" fill="rgb(207,30,32)" rx="2" ry="2" />
<text  x="232.04" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::get_pool (27 samples, 0.02%)</title><rect x="245.1" y="149" width="0.3" height="15.0" fill="rgb(236,46,44)" rx="2" ry="2" />
<text  x="248.07" y="159.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (141 samples, 0.13%)</title><rect x="1000.7" y="181" width="1.5" height="15.0" fill="rgb(248,152,12)" rx="2" ry="2" />
<text  x="1003.67" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_base (35 samples, 0.03%)</title><rect x="908.4" y="309" width="0.4" height="15.0" fill="rgb(231,88,47)" rx="2" ry="2" />
<text  x="911.43" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (23 samples, 0.02%)</title><rect x="473.5" y="245" width="0.3" height="15.0" fill="rgb(223,153,34)" rx="2" ry="2" />
<text  x="476.53" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (40 samples, 0.04%)</title><rect x="1010.2" y="181" width="0.4" height="15.0" fill="rgb(235,177,12)" rx="2" ry="2" />
<text  x="1013.15" y="191.5" ></text>
</g>
<g >
<title>unlink_chunk.isra.1 (11 samples, 0.01%)</title><rect x="1189.6" y="597" width="0.1" height="15.0" fill="rgb(211,77,27)" rx="2" ry="2" />
<text  x="1192.61" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (702 samples, 0.63%)</title><rect x="858.1" y="229" width="7.5" height="15.0" fill="rgb(234,74,19)" rx="2" ry="2" />
<text  x="861.13" y="239.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (14 samples, 0.01%)</title><rect x="868.3" y="277" width="0.2" height="15.0" fill="rgb(209,131,28)" rx="2" ry="2" />
<text  x="871.33" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::enqueue (602 samples, 0.54%)</title><rect x="878.8" y="277" width="6.4" height="15.0" fill="rgb(235,132,51)" rx="2" ry="2" />
<text  x="881.77" y="287.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (147 samples, 0.13%)</title><rect x="1067.6" y="213" width="1.6" height="15.0" fill="rgb(236,213,46)" rx="2" ry="2" />
<text  x="1070.64" y="223.5" ></text>
</g>
<g >
<title>operator delete (18 samples, 0.02%)</title><rect x="472.8" y="197" width="0.1" height="15.0" fill="rgb(206,192,29)" rx="2" ry="2" />
<text  x="475.75" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (14 samples, 0.01%)</title><rect x="231.9" y="277" width="0.2" height="15.0" fill="rgb(205,20,50)" rx="2" ry="2" />
<text  x="234.90" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::MessageID::AssignID (197 samples, 0.18%)</title><rect x="992.1" y="277" width="2.1" height="15.0" fill="rgb(228,140,47)" rx="2" ry="2" />
<text  x="995.12" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (34 samples, 0.03%)</title><rect x="1052.4" y="229" width="0.4" height="15.0" fill="rgb(242,181,22)" rx="2" ry="2" />
<text  x="1055.42" y="239.5" ></text>
</g>
<g >
<title>std::mutex::lock (359 samples, 0.32%)</title><rect x="1073.8" y="293" width="3.8" height="15.0" fill="rgb(236,122,38)" rx="2" ry="2" />
<text  x="1076.77" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="229.9" y="261" width="0.2" height="15.0" fill="rgb(236,53,33)" rx="2" ry="2" />
<text  x="232.93" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (136 samples, 0.12%)</title><rect x="932.5" y="309" width="1.5" height="15.0" fill="rgb(210,131,52)" rx="2" ry="2" />
<text  x="935.55" y="319.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (24 samples, 0.02%)</title><rect x="899.3" y="197" width="0.2" height="15.0" fill="rgb(248,155,28)" rx="2" ry="2" />
<text  x="902.29" y="207.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (16 samples, 0.01%)</title><rect x="878.2" y="293" width="0.2" height="15.0" fill="rgb(253,67,2)" rx="2" ry="2" />
<text  x="881.21" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (91 samples, 0.08%)</title><rect x="966.9" y="181" width="1.0" height="15.0" fill="rgb(206,152,48)" rx="2" ry="2" />
<text  x="969.92" y="191.5" ></text>
</g>
<g >
<title>std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="581" width="789.5" height="15.0" fill="rgb(229,148,51)" rx="2" ry="2" />
<text  x="13.13" y="591.5" >std::thread::_State_impl&lt;std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>lane_release (124 samples, 0.11%)</title><rect x="1084.2" y="581" width="1.3" height="15.0" fill="rgb(222,11,48)" rx="2" ry="2" />
<text  x="1087.16" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, true&gt;::_Sp_ebo_helper (10 samples, 0.01%)</title><rect x="890.3" y="181" width="0.1" height="15.0" fill="rgb(246,74,44)" rx="2" ry="2" />
<text  x="893.26" y="191.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (32 samples, 0.03%)</title><rect x="839.2" y="581" width="0.4" height="15.0" fill="rgb(211,31,23)" rx="2" ry="2" />
<text  x="842.25" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (13 samples, 0.01%)</title><rect x="741.7" y="341" width="0.2" height="15.0" fill="rgb(248,131,1)" rx="2" ry="2" />
<text  x="744.74" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (19 samples, 0.02%)</title><rect x="924.3" y="245" width="0.2" height="15.0" fill="rgb(223,17,4)" rx="2" ry="2" />
<text  x="927.32" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (69 samples, 0.06%)</title><rect x="859.4" y="197" width="0.7" height="15.0" fill="rgb(250,63,33)" rx="2" ry="2" />
<text  x="862.39" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (14 samples, 0.01%)</title><rect x="966.8" y="181" width="0.1" height="15.0" fill="rgb(218,93,21)" rx="2" ry="2" />
<text  x="969.78" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (35 samples, 0.03%)</title><rect x="864.9" y="197" width="0.4" height="15.0" fill="rgb(235,0,24)" rx="2" ry="2" />
<text  x="867.90" y="207.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoInsert (21 samples, 0.02%)</title><rect x="839.7" y="357" width="0.2" height="15.0" fill="rgb(209,66,4)" rx="2" ry="2" />
<text  x="842.69" y="367.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::operator++ (117 samples, 0.11%)</title><rect x="993.0" y="261" width="1.2" height="15.0" fill="rgb(242,63,11)" rx="2" ry="2" />
<text  x="995.97" y="271.5" ></text>
</g>
<g >
<title>operator new (32 samples, 0.03%)</title><rect x="859.8" y="181" width="0.3" height="15.0" fill="rgb(234,48,35)" rx="2" ry="2" />
<text  x="862.77" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (17 samples, 0.02%)</title><rect x="1039.9" y="181" width="0.2" height="15.0" fill="rgb(252,138,27)" rx="2" ry="2" />
<text  x="1042.91" y="191.5" ></text>
</g>
<g >
<title>std::_Head_base&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*, false&gt;::_M_head (43 samples, 0.04%)</title><rect x="796.1" y="357" width="0.4" height="15.0" fill="rgb(254,10,52)" rx="2" ry="2" />
<text  x="799.07" y="367.5" ></text>
</g>
<g >
<title>malloc (33 samples, 0.03%)</title><rect x="967.2" y="165" width="0.3" height="15.0" fill="rgb(214,190,36)" rx="2" ry="2" />
<text  x="970.19" y="175.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (61 samples, 0.06%)</title><rect x="852.2" y="293" width="0.6" height="15.0" fill="rgb(231,64,52)" rx="2" ry="2" />
<text  x="855.19" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (28 samples, 0.03%)</title><rect x="954.3" y="261" width="0.2" height="15.0" fill="rgb(237,155,14)" rx="2" ry="2" />
<text  x="957.25" y="271.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (10 samples, 0.01%)</title><rect x="902.0" y="117" width="0.1" height="15.0" fill="rgb(230,103,33)" rx="2" ry="2" />
<text  x="904.97" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (94 samples, 0.08%)</title><rect x="928.9" y="229" width="1.0" height="15.0" fill="rgb(207,2,52)" rx="2" ry="2" />
<text  x="931.92" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (201 samples, 0.18%)</title><rect x="22.6" y="437" width="2.2" height="15.0" fill="rgb(250,45,22)" rx="2" ry="2" />
<text  x="25.63" y="447.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Scramble (63 samples, 0.06%)</title><rect x="1062.2" y="277" width="0.7" height="15.0" fill="rgb(205,134,26)" rx="2" ry="2" />
<text  x="1065.18" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (11 samples, 0.01%)</title><rect x="1041.5" y="245" width="0.1" height="15.0" fill="rgb(254,204,18)" rx="2" ry="2" />
<text  x="1044.48" y="255.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildValues (3,399 samples, 3.07%)</title><rect x="911.8" y="325" width="36.2" height="15.0" fill="rgb(234,18,29)" rx="2" ry="2" />
<text  x="914.80" y="335.5" >ycs..</text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (220 samples, 0.20%)</title><rect x="744.5" y="293" width="2.3" height="15.0" fill="rgb(234,53,21)" rx="2" ry="2" />
<text  x="747.48" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (18 samples, 0.02%)</title><rect x="221.1" y="245" width="0.2" height="15.0" fill="rgb(213,159,49)" rx="2" ry="2" />
<text  x="224.07" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (658 samples, 0.59%)</title><rect x="442.8" y="165" width="7.0" height="15.0" fill="rgb(206,42,8)" rx="2" ry="2" />
<text  x="445.84" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (46 samples, 0.04%)</title><rect x="227.5" y="309" width="0.4" height="15.0" fill="rgb(231,17,47)" rx="2" ry="2" />
<text  x="230.45" y="319.5" ></text>
</g>
<g >
<title>std::_Mu&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*, false, false&gt;::operator (46 samples, 0.04%)</title><rect x="30.5" y="405" width="0.5" height="15.0" fill="rgb(242,214,53)" rx="2" ry="2" />
<text  x="33.53" y="415.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (411 samples, 0.37%)</title><rect x="985.7" y="261" width="4.4" height="15.0" fill="rgb(254,157,10)" rx="2" ry="2" />
<text  x="988.69" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (12 samples, 0.01%)</title><rect x="920.3" y="261" width="0.2" height="15.0" fill="rgb(237,51,1)" rx="2" ry="2" />
<text  x="923.34" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (10 samples, 0.01%)</title><rect x="934.9" y="293" width="0.1" height="15.0" fill="rgb(243,111,13)" rx="2" ry="2" />
<text  x="937.89" y="303.5" ></text>
</g>
<g >
<title>ycsbc::CounterGenerator::Next (90 samples, 0.08%)</title><rect x="971.4" y="309" width="1.0" height="15.0" fill="rgb(221,202,10)" rx="2" ry="2" />
<text  x="974.41" y="319.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.04%)</title><rect x="812.7" y="517" width="0.4" height="15.0" fill="rgb(254,161,31)" rx="2" ry="2" />
<text  x="815.67" y="527.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateNewChunk (18 samples, 0.02%)</title><rect x="470.7" y="165" width="0.1" height="15.0" fill="rgb(249,221,15)" rx="2" ry="2" />
<text  x="473.66" y="175.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (31 samples, 0.03%)</title><rect x="939.4" y="197" width="0.3" height="15.0" fill="rgb(212,218,20)" rx="2" ry="2" />
<text  x="942.38" y="207.5" ></text>
</g>
<g >
<title>std::addressof&lt;char&gt; (10 samples, 0.01%)</title><rect x="1040.4" y="165" width="0.1" height="15.0" fill="rgb(213,91,42)" rx="2" ry="2" />
<text  x="1043.44" y="175.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (453 samples, 0.41%)</title><rect x="483.6" y="245" width="4.8" height="15.0" fill="rgb(210,51,12)" rx="2" ry="2" />
<text  x="486.58" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (33 samples, 0.03%)</title><rect x="957.8" y="229" width="0.4" height="15.0" fill="rgb(213,199,4)" rx="2" ry="2" />
<text  x="960.83" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (40 samples, 0.04%)</title><rect x="866.5" y="213" width="0.4" height="15.0" fill="rgb(227,156,0)" rx="2" ry="2" />
<text  x="869.46" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (217 samples, 0.20%)</title><rect x="956.3" y="261" width="2.3" height="15.0" fill="rgb(226,130,21)" rx="2" ry="2" />
<text  x="959.26" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::push_back (1,284 samples, 1.16%)</title><rect x="934.3" y="309" width="13.6" height="15.0" fill="rgb(236,203,54)" rx="2" ry="2" />
<text  x="937.27" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (296 samples, 0.27%)</title><rect x="941.8" y="181" width="3.2" height="15.0" fill="rgb(225,168,10)" rx="2" ry="2" />
<text  x="944.80" y="191.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="549" width="789.5" height="15.0" fill="rgb(252,31,45)" rx="2" ry="2" />
<text  x="13.13" y="559.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>ravl_foreach_node (12 samples, 0.01%)</title><rect x="832.0" y="565" width="0.2" height="15.0" fill="rgb(208,222,21)" rx="2" ry="2" />
<text  x="835.05" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (23 samples, 0.02%)</title><rect x="490.4" y="261" width="0.3" height="15.0" fill="rgb(211,104,37)" rx="2" ry="2" />
<text  x="493.44" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (755 samples, 0.68%)</title><rect x="481.7" y="309" width="8.1" height="15.0" fill="rgb(252,60,49)" rx="2" ry="2" />
<text  x="484.72" y="319.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (32 samples, 0.03%)</title><rect x="946.8" y="261" width="0.3" height="15.0" fill="rgb(229,122,25)" rx="2" ry="2" />
<text  x="949.78" y="271.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::Next (866 samples, 0.78%)</title><rect x="1062.1" y="293" width="9.2" height="15.0" fill="rgb(205,224,42)" rx="2" ry="2" />
<text  x="1065.08" y="303.5" ></text>
</g>
<g >
<title>ravl_data (20 samples, 0.02%)</title><rect x="1112.5" y="581" width="0.2" height="15.0" fill="rgb(233,218,36)" rx="2" ry="2" />
<text  x="1115.48" y="591.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (24 samples, 0.02%)</title><rect x="249.3" y="261" width="0.2" height="15.0" fill="rgb(247,218,8)" rx="2" ry="2" />
<text  x="252.27" y="271.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (50 samples, 0.05%)</title><rect x="899.0" y="213" width="0.5" height="15.0" fill="rgb(251,154,0)" rx="2" ry="2" />
<text  x="902.01" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (12 samples, 0.01%)</title><rect x="256.5" y="165" width="0.1" height="15.0" fill="rgb(209,143,5)" rx="2" ry="2" />
<text  x="259.46" y="175.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (36 samples, 0.03%)</title><rect x="244.4" y="101" width="0.4" height="15.0" fill="rgb(240,208,5)" rx="2" ry="2" />
<text  x="247.45" y="111.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (5,313 samples, 4.79%)</title><rect x="269.2" y="213" width="56.6" height="15.0" fill="rgb(252,80,10)" rx="2" ry="2" />
<text  x="272.20" y="223.5" >pmem:..</text>
</g>
<g >
<title>scythedb::Slice::data (28 samples, 0.03%)</title><rect x="455.0" y="165" width="0.3" height="15.0" fill="rgb(221,217,41)" rx="2" ry="2" />
<text  x="458.02" y="175.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (179 samples, 0.16%)</title><rect x="908.9" y="293" width="1.9" height="15.0" fill="rgb(216,209,8)" rx="2" ry="2" />
<text  x="911.91" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::allocate (50 samples, 0.05%)</title><rect x="229.3" y="261" width="0.6" height="15.0" fill="rgb(210,89,40)" rx="2" ry="2" />
<text  x="232.35" y="271.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (18 samples, 0.02%)</title><rect x="202.9" y="293" width="0.2" height="15.0" fill="rgb(251,127,21)" rx="2" ry="2" />
<text  x="205.86" y="303.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (18 samples, 0.02%)</title><rect x="1026.2" y="245" width="0.2" height="15.0" fill="rgb(234,2,42)" rx="2" ry="2" />
<text  x="1029.24" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (125 samples, 0.11%)</title><rect x="1053.3" y="261" width="1.3" height="15.0" fill="rgb(243,149,21)" rx="2" ry="2" />
<text  x="1056.28" y="271.5" ></text>
</g>
<g >
<title>operator new (12 samples, 0.01%)</title><rect x="988.2" y="165" width="0.1" height="15.0" fill="rgb(223,81,22)" rx="2" ry="2" />
<text  x="991.20" y="175.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (50 samples, 0.05%)</title><rect x="792.0" y="373" width="0.5" height="15.0" fill="rgb(242,41,14)" rx="2" ry="2" />
<text  x="794.98" y="383.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (82 samples, 0.07%)</title><rect x="457.7" y="213" width="0.9" height="15.0" fill="rgb(226,183,12)" rx="2" ry="2" />
<text  x="460.74" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (72 samples, 0.06%)</title><rect x="246.3" y="117" width="0.8" height="15.0" fill="rgb(222,92,37)" rx="2" ry="2" />
<text  x="249.32" y="127.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (368 samples, 0.33%)</title><rect x="325.8" y="229" width="3.9" height="15.0" fill="rgb(241,161,40)" rx="2" ry="2" />
<text  x="328.78" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (235 samples, 0.21%)</title><rect x="1038.6" y="261" width="2.6" height="15.0" fill="rgb(233,110,23)" rx="2" ry="2" />
<text  x="1041.65" y="271.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (34 samples, 0.03%)</title><rect x="1062.5" y="261" width="0.4" height="15.0" fill="rgb(233,189,5)" rx="2" ry="2" />
<text  x="1065.49" y="271.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (79 samples, 0.07%)</title><rect x="970.6" y="277" width="0.8" height="15.0" fill="rgb(240,157,13)" rx="2" ry="2" />
<text  x="973.57" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (11 samples, 0.01%)</title><rect x="483.4" y="229" width="0.1" height="15.0" fill="rgb(237,192,33)" rx="2" ry="2" />
<text  x="486.39" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~allocator (15 samples, 0.01%)</title><rect x="1015.6" y="165" width="0.2" height="15.0" fill="rgb(216,97,2)" rx="2" ry="2" />
<text  x="1018.59" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::standard_alloc_policy&lt;char&gt;::allocate (100 samples, 0.09%)</title><rect x="239.8" y="181" width="1.0" height="15.0" fill="rgb(231,169,13)" rx="2" ry="2" />
<text  x="242.75" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (17 samples, 0.02%)</title><rect x="930.1" y="261" width="0.1" height="15.0" fill="rgb(226,138,21)" rx="2" ry="2" />
<text  x="933.07" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (39 samples, 0.04%)</title><rect x="887.8" y="261" width="0.4" height="15.0" fill="rgb(238,113,19)" rx="2" ry="2" />
<text  x="890.81" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (11 samples, 0.01%)</title><rect x="955.5" y="277" width="0.1" height="15.0" fill="rgb(252,90,10)" rx="2" ry="2" />
<text  x="958.51" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::get_block_index_index_for_index (133 samples, 0.12%)</title><rect x="534.8" y="277" width="1.4" height="15.0" fill="rgb(229,11,7)" rx="2" ry="2" />
<text  x="537.76" y="287.5" ></text>
</g>
<g >
<title>__random_r (120 samples, 0.11%)</title><rect x="917.4" y="309" width="1.3" height="15.0" fill="rgb(253,176,8)" rx="2" ry="2" />
<text  x="920.43" y="319.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (70 samples, 0.06%)</title><rect x="996.5" y="277" width="0.7" height="15.0" fill="rgb(220,219,51)" rx="2" ry="2" />
<text  x="999.48" y="287.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::end (21 samples, 0.02%)</title><rect x="947.7" y="293" width="0.2" height="15.0" fill="rgb(208,139,54)" rx="2" ry="2" />
<text  x="950.72" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (69 samples, 0.06%)</title><rect x="892.7" y="197" width="0.8" height="15.0" fill="rgb(253,77,44)" rx="2" ry="2" />
<text  x="895.74" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (119 samples, 0.11%)</title><rect x="477.9" y="261" width="1.3" height="15.0" fill="rgb(238,73,19)" rx="2" ry="2" />
<text  x="480.92" y="271.5" ></text>
</g>
<g >
<title>scythedb_bench (110,803 samples, 100.00%)</title><rect x="10.0" y="613" width="1180.0" height="15.0" fill="rgb(221,101,14)" rx="2" ry="2" />
<text  x="13.00" y="623.5" >scythedb_bench</text>
</g>
<g >
<title>std::function&lt;void  (89 samples, 0.08%)</title><rect x="472.1" y="245" width="0.9" height="15.0" fill="rgb(237,176,28)" rx="2" ry="2" />
<text  x="475.08" y="255.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (110 samples, 0.10%)</title><rect x="1080.4" y="245" width="1.2" height="15.0" fill="rgb(229,76,38)" rx="2" ry="2" />
<text  x="1083.42" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (560 samples, 0.51%)</title><rect x="940.2" y="245" width="6.0" height="15.0" fill="rgb(214,51,44)" rx="2" ry="2" />
<text  x="943.23" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (386 samples, 0.35%)</title><rect x="1029.0" y="197" width="4.1" height="15.0" fill="rgb(234,166,15)" rx="2" ry="2" />
<text  x="1032.01" y="207.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (13 samples, 0.01%)</title><rect x="932.0" y="277" width="0.2" height="15.0" fill="rgb(212,58,42)" rx="2" ry="2" />
<text  x="935.04" y="287.5" ></text>
</g>
<g >
<title>std::swap&lt;scythedb::(anonymous namespace)::ProcessorMessage*&gt; (10 samples, 0.01%)</title><rect x="540.8" y="245" width="0.1" height="15.0" fill="rgb(224,201,24)" rx="2" ry="2" />
<text  x="543.76" y="255.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;&amp;, unsigned long&amp;, true&gt; (10 samples, 0.01%)</title><rect x="247.5" y="165" width="0.1" height="15.0" fill="rgb(211,100,18)" rx="2" ry="2" />
<text  x="250.47" y="175.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (1,213 samples, 1.09%)</title><rect x="1049.2" y="293" width="12.9" height="15.0" fill="rgb(215,10,28)" rx="2" ry="2" />
<text  x="1052.16" y="303.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::FreeList&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block&gt;::try_get (12 samples, 0.01%)</title><rect x="881.0" y="197" width="0.1" height="15.0" fill="rgb(209,17,5)" rx="2" ry="2" />
<text  x="883.98" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::size (10 samples, 0.01%)</title><rect x="44.9" y="261" width="0.1" height="15.0" fill="rgb(238,220,26)" rx="2" ry="2" />
<text  x="47.91" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (14 samples, 0.01%)</title><rect x="1054.3" y="213" width="0.2" height="15.0" fill="rgb(218,214,30)" rx="2" ry="2" />
<text  x="1057.30" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (246 samples, 0.22%)</title><rect x="1023.1" y="309" width="2.6" height="15.0" fill="rgb(240,11,18)" rx="2" ry="2" />
<text  x="1026.06" y="319.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (55 samples, 0.05%)</title><rect x="20.4" y="437" width="0.6" height="15.0" fill="rgb(228,71,8)" rx="2" ry="2" />
<text  x="23.42" y="447.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (18 samples, 0.02%)</title><rect x="351.5" y="213" width="0.2" height="15.0" fill="rgb(225,170,38)" rx="2" ry="2" />
<text  x="354.52" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (20 samples, 0.02%)</title><rect x="935.1" y="293" width="0.3" height="15.0" fill="rgb(234,161,11)" rx="2" ry="2" />
<text  x="938.15" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (33 samples, 0.03%)</title><rect x="220.6" y="213" width="0.4" height="15.0" fill="rgb(207,229,6)" rx="2" ry="2" />
<text  x="223.63" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (81 samples, 0.07%)</title><rect x="210.7" y="309" width="0.9" height="15.0" fill="rgb(238,142,19)" rx="2" ry="2" />
<text  x="213.73" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (28 samples, 0.03%)</title><rect x="469.4" y="165" width="0.3" height="15.0" fill="rgb(241,83,34)" rx="2" ry="2" />
<text  x="472.37" y="175.5" ></text>
</g>
<g >
<title>std::function&lt;void  (156 samples, 0.14%)</title><rect x="990.5" y="261" width="1.6" height="15.0" fill="rgb(226,164,10)" rx="2" ry="2" />
<text  x="993.46" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (13 samples, 0.01%)</title><rect x="471.7" y="245" width="0.1" height="15.0" fill="rgb(250,50,15)" rx="2" ry="2" />
<text  x="474.67" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (151 samples, 0.14%)</title><rect x="448.2" y="149" width="1.6" height="15.0" fill="rgb(243,210,41)" rx="2" ry="2" />
<text  x="451.24" y="159.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (173 samples, 0.16%)</title><rect x="225.5" y="325" width="1.9" height="15.0" fill="rgb(218,133,3)" rx="2" ry="2" />
<text  x="228.55" y="335.5" ></text>
</g>
<g >
<title>scythedb::EncodeVarint32 (11 samples, 0.01%)</title><rect x="985.9" y="229" width="0.1" height="15.0" fill="rgb(229,162,8)" rx="2" ry="2" />
<text  x="988.86" y="239.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_snapshot.constprop.25 (13 samples, 0.01%)</title><rect x="1167.3" y="597" width="0.1" height="15.0" fill="rgb(234,73,2)" rx="2" ry="2" />
<text  x="1170.26" y="607.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (28 samples, 0.03%)</title><rect x="1026.2" y="261" width="0.3" height="15.0" fill="rgb(206,139,53)" rx="2" ry="2" />
<text  x="1029.21" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (22 samples, 0.02%)</title><rect x="239.2" y="165" width="0.3" height="15.0" fill="rgb(239,108,23)" rx="2" ry="2" />
<text  x="242.24" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char const*&gt; (173 samples, 0.16%)</title><rect x="959.4" y="277" width="1.8" height="15.0" fill="rgb(215,48,20)" rx="2" ry="2" />
<text  x="962.36" y="287.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (18 samples, 0.02%)</title><rect x="45.9" y="325" width="0.2" height="15.0" fill="rgb(205,129,36)" rx="2" ry="2" />
<text  x="48.87" y="335.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (192 samples, 0.17%)</title><rect x="1043.0" y="245" width="2.0" height="15.0" fill="rgb(220,48,25)" rx="2" ry="2" />
<text  x="1045.97" y="255.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (161 samples, 0.15%)</title><rect x="909.1" y="277" width="1.7" height="15.0" fill="rgb(239,45,38)" rx="2" ry="2" />
<text  x="912.05" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::data (68 samples, 0.06%)</title><rect x="41.8" y="325" width="0.7" height="15.0" fill="rgb(213,13,11)" rx="2" ry="2" />
<text  x="44.80" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (43 samples, 0.04%)</title><rect x="942.3" y="165" width="0.5" height="15.0" fill="rgb(227,82,33)" rx="2" ry="2" />
<text  x="945.31" y="175.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (15 samples, 0.01%)</title><rect x="905.2" y="309" width="0.2" height="15.0" fill="rgb(235,103,17)" rx="2" ry="2" />
<text  x="908.20" y="319.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::operator (97 samples, 0.09%)</title><rect x="1070.2" y="213" width="1.0" height="15.0" fill="rgb(238,62,43)" rx="2" ry="2" />
<text  x="1073.20" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12 samples, 0.01%)</title><rect x="1044.8" y="165" width="0.1" height="15.0" fill="rgb(220,151,14)" rx="2" ry="2" />
<text  x="1047.80" y="175.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (17 samples, 0.02%)</title><rect x="812.8" y="485" width="0.2" height="15.0" fill="rgb(213,91,37)" rx="2" ry="2" />
<text  x="815.78" y="495.5" ></text>
</g>
<g >
<title>ycsbc::ScrambledZipfianGenerator::ScrambledZipfianGenerator (11 samples, 0.01%)</title><rect x="838.6" y="501" width="0.1" height="15.0" fill="rgb(230,28,45)" rx="2" ry="2" />
<text  x="841.62" y="511.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::~ProcessorMessage (348 samples, 0.31%)</title><rect x="899.7" y="181" width="3.7" height="15.0" fill="rgb(221,101,11)" rx="2" ry="2" />
<text  x="902.68" y="191.5" ></text>
</g>
<g >
<title>tx_action_reserve.constprop.27 (13 samples, 0.01%)</title><rect x="1115.6" y="581" width="0.1" height="15.0" fill="rgb(209,19,32)" rx="2" ry="2" />
<text  x="1118.60" y="591.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (26 samples, 0.02%)</title><rect x="1015.5" y="181" width="0.3" height="15.0" fill="rgb(224,113,30)" rx="2" ry="2" />
<text  x="1018.48" y="191.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (48 samples, 0.04%)</title><rect x="455.3" y="165" width="0.5" height="15.0" fill="rgb(232,123,28)" rx="2" ry="2" />
<text  x="458.32" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (122 samples, 0.11%)</title><rect x="909.4" y="229" width="1.3" height="15.0" fill="rgb(211,89,28)" rx="2" ry="2" />
<text  x="912.38" y="239.5" ></text>
</g>
<g >
<title>find_le (40 samples, 0.04%)</title><rect x="1145.0" y="597" width="0.4" height="15.0" fill="rgb(228,161,52)" rx="2" ry="2" />
<text  x="1147.97" y="607.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (158 samples, 0.14%)</title><rect x="1000.5" y="197" width="1.7" height="15.0" fill="rgb(246,158,19)" rx="2" ry="2" />
<text  x="1003.49" y="207.5" ></text>
</g>
<g >
<title>XXH64_avalanche (22 samples, 0.02%)</title><rect x="875.5" y="197" width="0.3" height="15.0" fill="rgb(245,224,37)" rx="2" ry="2" />
<text  x="878.54" y="207.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (103 samples, 0.09%)</title><rect x="837.5" y="581" width="1.1" height="15.0" fill="rgb(240,117,1)" rx="2" ry="2" />
<text  x="840.50" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (97 samples, 0.09%)</title><rect x="479.8" y="277" width="1.0" height="15.0" fill="rgb(251,87,46)" rx="2" ry="2" />
<text  x="482.76" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (21 samples, 0.02%)</title><rect x="919.7" y="277" width="0.3" height="15.0" fill="rgb(211,22,27)" rx="2" ry="2" />
<text  x="922.75" y="287.5" ></text>
</g>
<g >
<title>std::operator==&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (19 samples, 0.02%)</title><rect x="1038.2" y="181" width="0.2" height="15.0" fill="rgb(254,156,54)" rx="2" ry="2" />
<text  x="1041.22" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (15 samples, 0.01%)</title><rect x="931.1" y="277" width="0.2" height="15.0" fill="rgb(224,188,6)" rx="2" ry="2" />
<text  x="934.13" y="287.5" ></text>
</g>
<g >
<title>_int_free (13 samples, 0.01%)</title><rect x="1083.0" y="581" width="0.2" height="15.0" fill="rgb(217,58,36)" rx="2" ry="2" />
<text  x="1086.04" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (10 samples, 0.01%)</title><rect x="926.6" y="293" width="0.1" height="15.0" fill="rgb(208,166,1)" rx="2" ry="2" />
<text  x="929.55" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (140 samples, 0.13%)</title><rect x="1016.5" y="133" width="1.5" height="15.0" fill="rgb(251,120,2)" rx="2" ry="2" />
<text  x="1019.49" y="143.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (38 samples, 0.03%)</title><rect x="477.1" y="261" width="0.4" height="15.0" fill="rgb(254,92,14)" rx="2" ry="2" />
<text  x="480.10" y="271.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::BuildKeyName[abi:cxx11] (2,010 samples, 1.81%)</title><rect x="950.0" y="309" width="21.4" height="15.0" fill="rgb(249,223,22)" rx="2" ry="2" />
<text  x="953.00" y="319.5" >y..</text>
</g>
<g >
<title>scythedb::NVMSkipList::Iterator::SeekGreaterOrEqual (14,755 samples, 13.32%)</title><rect x="46.2" y="325" width="157.2" height="15.0" fill="rgb(211,190,10)" rx="2" ry="2" />
<text  x="49.23" y="335.5" >scythedb::NVMSkipLis..</text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16 samples, 0.01%)</title><rect x="1047.1" y="277" width="0.1" height="15.0" fill="rgb(226,33,9)" rx="2" ry="2" />
<text  x="1050.05" y="287.5" ></text>
</g>
<g >
<title>operator delete (17 samples, 0.02%)</title><rect x="249.8" y="229" width="0.2" height="15.0" fill="rgb(235,92,16)" rx="2" ry="2" />
<text  x="252.81" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (15 samples, 0.01%)</title><rect x="45.7" y="325" width="0.2" height="15.0" fill="rgb(222,0,6)" rx="2" ry="2" />
<text  x="48.70" y="335.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::base (18 samples, 0.02%)</title><rect x="939.5" y="181" width="0.2" height="15.0" fill="rgb(240,205,21)" rx="2" ry="2" />
<text  x="942.52" y="191.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTransactionKey[abi:cxx11] (2,261 samples, 2.04%)</title><rect x="1047.3" y="309" width="24.1" height="15.0" fill="rgb(223,101,2)" rx="2" ry="2" />
<text  x="1050.31" y="319.5" >y..</text>
</g>
<g >
<title>scythedb::Slice::Slice (114 samples, 0.10%)</title><rect x="191.7" y="181" width="1.2" height="15.0" fill="rgb(229,160,8)" rx="2" ry="2" />
<text  x="194.72" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (103 samples, 0.09%)</title><rect x="1008.6" y="133" width="1.1" height="15.0" fill="rgb(213,142,24)" rx="2" ry="2" />
<text  x="1011.62" y="143.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (930 samples, 0.84%)</title><rect x="531.2" y="309" width="9.9" height="15.0" fill="rgb(213,138,10)" rx="2" ry="2" />
<text  x="534.22" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (387 samples, 0.35%)</title><rect x="536.8" y="277" width="4.1" height="15.0" fill="rgb(242,124,14)" rx="2" ry="2" />
<text  x="539.79" y="287.5" ></text>
</g>
<g >
<title>__gthread_active_p (11 samples, 0.01%)</title><rect x="1077.6" y="261" width="0.1" height="15.0" fill="rgb(231,72,38)" rx="2" ry="2" />
<text  x="1080.62" y="271.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (82 samples, 0.07%)</title><rect x="939.0" y="245" width="0.9" height="15.0" fill="rgb(213,49,51)" rx="2" ry="2" />
<text  x="941.98" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (14 samples, 0.01%)</title><rect x="1016.3" y="133" width="0.2" height="15.0" fill="rgb(244,78,31)" rx="2" ry="2" />
<text  x="1019.34" y="143.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (51 samples, 0.05%)</title><rect x="1129.2" y="597" width="0.6" height="15.0" fill="rgb(245,75,34)" rx="2" ry="2" />
<text  x="1132.23" y="607.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (20 samples, 0.02%)</title><rect x="245.1" y="133" width="0.2" height="15.0" fill="rgb(225,86,35)" rx="2" ry="2" />
<text  x="248.13" y="143.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; &gt; (44 samples, 0.04%)</title><rect x="938.4" y="261" width="0.5" height="15.0" fill="rgb(211,56,36)" rx="2" ry="2" />
<text  x="941.44" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (14 samples, 0.01%)</title><rect x="888.1" y="245" width="0.1" height="15.0" fill="rgb(252,192,48)" rx="2" ry="2" />
<text  x="891.08" y="255.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (68 samples, 0.06%)</title><rect x="1027.7" y="197" width="0.8" height="15.0" fill="rgb(207,225,14)" rx="2" ry="2" />
<text  x="1030.73" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::next_prod (808 samples, 0.73%)</title><rect x="497.1" y="341" width="8.6" height="15.0" fill="rgb(210,110,11)" rx="2" ry="2" />
<text  x="500.14" y="351.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::~MutexLock (406 samples, 0.37%)</title><rect x="21.1" y="453" width="4.3" height="15.0" fill="rgb(247,180,15)" rx="2" ry="2" />
<text  x="24.09" y="463.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (27 samples, 0.02%)</title><rect x="238.3" y="181" width="0.3" height="15.0" fill="rgb(212,163,24)" rx="2" ry="2" />
<text  x="241.35" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (18 samples, 0.02%)</title><rect x="910.2" y="181" width="0.2" height="15.0" fill="rgb(248,63,30)" rx="2" ry="2" />
<text  x="913.24" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (35 samples, 0.03%)</title><rect x="118.3" y="261" width="0.4" height="15.0" fill="rgb(226,204,9)" rx="2" ry="2" />
<text  x="121.33" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10 samples, 0.01%)</title><rect x="892.2" y="165" width="0.2" height="15.0" fill="rgb(245,52,32)" rx="2" ry="2" />
<text  x="895.25" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_allocate (58 samples, 0.05%)</title><rect x="229.3" y="277" width="0.6" height="15.0" fill="rgb(252,135,17)" rx="2" ry="2" />
<text  x="232.26" y="287.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, true&gt; (16 samples, 0.01%)</title><rect x="907.8" y="325" width="0.1" height="15.0" fill="rgb(228,151,17)" rx="2" ry="2" />
<text  x="910.78" y="335.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (12 samples, 0.01%)</title><rect x="904.2" y="309" width="0.1" height="15.0" fill="rgb(215,118,40)" rx="2" ry="2" />
<text  x="907.16" y="319.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (11 samples, 0.01%)</title><rect x="933.7" y="229" width="0.1" height="15.0" fill="rgb(243,117,7)" rx="2" ry="2" />
<text  x="936.73" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (19 samples, 0.02%)</title><rect x="909.9" y="181" width="0.2" height="15.0" fill="rgb(252,137,1)" rx="2" ry="2" />
<text  x="912.92" y="191.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (22 samples, 0.02%)</title><rect x="1045.2" y="277" width="0.3" height="15.0" fill="rgb(208,109,38)" rx="2" ry="2" />
<text  x="1048.24" y="287.5" ></text>
</g>
<g >
<title>pmemobj_mutex_lock (15 samples, 0.01%)</title><rect x="1098.4" y="581" width="0.2" height="15.0" fill="rgb(206,113,41)" rx="2" ry="2" />
<text  x="1101.39" y="591.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (11 samples, 0.01%)</title><rect x="837.7" y="565" width="0.1" height="15.0" fill="rgb(243,124,28)" rx="2" ry="2" />
<text  x="840.71" y="575.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Mutex (38 samples, 0.03%)</title><rect x="877.8" y="293" width="0.4" height="15.0" fill="rgb(206,10,37)" rx="2" ry="2" />
<text  x="880.81" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (30 samples, 0.03%)</title><rect x="920.6" y="277" width="0.3" height="15.0" fill="rgb(231,185,40)" rx="2" ry="2" />
<text  x="923.62" y="287.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (17 samples, 0.02%)</title><rect x="893.5" y="213" width="0.2" height="15.0" fill="rgb(214,191,14)" rx="2" ry="2" />
<text  x="896.47" y="223.5" ></text>
</g>
<g >
<title>__pthread_once_slow (22,775 samples, 20.55%)</title><rect x="839.7" y="581" width="242.5" height="15.0" fill="rgb(223,222,35)" rx="2" ry="2" />
<text  x="842.69" y="591.5" >__pthread_once_slow</text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (18 samples, 0.02%)</title><rect x="793.1" y="373" width="0.2" height="15.0" fill="rgb(208,85,14)" rx="2" ry="2" />
<text  x="796.10" y="383.5" ></text>
</g>
<g >
<title>scythedb::Slice::compare (19 samples, 0.02%)</title><rect x="454.8" y="165" width="0.2" height="15.0" fill="rgb(225,168,27)" rx="2" ry="2" />
<text  x="457.82" y="175.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~_Vector_base (38 samples, 0.03%)</title><rect x="496.2" y="325" width="0.4" height="15.0" fill="rgb(207,147,44)" rx="2" ry="2" />
<text  x="499.21" y="335.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (23 samples, 0.02%)</title><rect x="220.7" y="197" width="0.3" height="15.0" fill="rgb(226,126,8)" rx="2" ry="2" />
<text  x="223.73" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (67 samples, 0.06%)</title><rect x="1034.7" y="309" width="0.7" height="15.0" fill="rgb(236,133,1)" rx="2" ry="2" />
<text  x="1037.72" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_replace_aux (404 samples, 0.36%)</title><rect x="922.1" y="293" width="4.3" height="15.0" fill="rgb(223,200,10)" rx="2" ry="2" />
<text  x="925.06" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (13 samples, 0.01%)</title><rect x="921.3" y="229" width="0.1" height="15.0" fill="rgb(210,87,19)" rx="2" ry="2" />
<text  x="924.26" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::GetMsgHandle (17,421 samples, 15.72%)</title><rect x="39.5" y="357" width="185.5" height="15.0" fill="rgb(243,27,34)" rx="2" ry="2" />
<text  x="42.51" y="367.5" >scythedb::(anonymous nam..</text>
</g>
<g >
<title>__gthread_mutex_unlock (13 samples, 0.01%)</title><rect x="1077.6" y="277" width="0.1" height="15.0" fill="rgb(234,43,36)" rx="2" ry="2" />
<text  x="1080.59" y="287.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Put (5,817 samples, 5.25%)</title><rect x="843.4" y="325" width="62.0" height="15.0" fill="rgb(230,160,48)" rx="2" ry="2" />
<text  x="846.41" y="335.5" >scythe..</text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (84 samples, 0.08%)</title><rect x="983.5" y="277" width="0.9" height="15.0" fill="rgb(217,4,50)" rx="2" ry="2" />
<text  x="986.52" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (32 samples, 0.03%)</title><rect x="212.2" y="325" width="0.3" height="15.0" fill="rgb(209,106,27)" rx="2" ry="2" />
<text  x="215.16" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::swap (35 samples, 0.03%)</title><rect x="465.1" y="245" width="0.4" height="15.0" fill="rgb(230,39,49)" rx="2" ry="2" />
<text  x="468.13" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (14 samples, 0.01%)</title><rect x="243.4" y="53" width="0.1" height="15.0" fill="rgb(248,24,44)" rx="2" ry="2" />
<text  x="246.37" y="63.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (39 samples, 0.04%)</title><rect x="907.2" y="293" width="0.4" height="15.0" fill="rgb(248,129,29)" rx="2" ry="2" />
<text  x="910.22" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (21 samples, 0.02%)</title><rect x="462.8" y="261" width="0.2" height="15.0" fill="rgb(253,46,23)" rx="2" ry="2" />
<text  x="465.75" y="271.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (34 samples, 0.03%)</title><rect x="792.7" y="373" width="0.4" height="15.0" fill="rgb(236,177,13)" rx="2" ry="2" />
<text  x="795.74" y="383.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (14 samples, 0.01%)</title><rect x="204.1" y="293" width="0.2" height="15.0" fill="rgb(254,93,1)" rx="2" ry="2" />
<text  x="207.14" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (12 samples, 0.01%)</title><rect x="470.7" y="133" width="0.1" height="15.0" fill="rgb(206,206,47)" rx="2" ry="2" />
<text  x="473.71" y="143.5" ></text>
</g>
<g >
<title>__tls_get_addr@plt (16 samples, 0.01%)</title><rect x="1082.9" y="581" width="0.1" height="15.0" fill="rgb(219,6,52)" rx="2" ry="2" />
<text  x="1085.87" y="591.5" ></text>
</g>
<g >
<title>[unknown] (41 samples, 0.04%)</title><rect x="812.7" y="533" width="0.4" height="15.0" fill="rgb(215,66,6)" rx="2" ry="2" />
<text  x="815.67" y="543.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (17 samples, 0.02%)</title><rect x="868.9" y="245" width="0.2" height="15.0" fill="rgb(214,57,31)" rx="2" ry="2" />
<text  x="871.95" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (142 samples, 0.13%)</title><rect x="1057.2" y="277" width="1.5" height="15.0" fill="rgb(216,17,32)" rx="2" ry="2" />
<text  x="1060.16" y="287.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access (19 samples, 0.02%)</title><rect x="457.2" y="181" width="0.2" height="15.0" fill="rgb(246,50,12)" rx="2" ry="2" />
<text  x="460.24" y="191.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 0.14%)</title><rect x="1117.8" y="565" width="1.7" height="15.0" fill="rgb(211,70,26)" rx="2" ry="2" />
<text  x="1120.85" y="575.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (91 samples, 0.08%)</title><rect x="1043.7" y="149" width="0.9" height="15.0" fill="rgb(226,15,40)" rx="2" ry="2" />
<text  x="1046.68" y="159.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (56 samples, 0.05%)</title><rect x="1037.9" y="229" width="0.6" height="15.0" fill="rgb(238,115,33)" rx="2" ry="2" />
<text  x="1040.90" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (108 samples, 0.10%)</title><rect x="943.5" y="165" width="1.2" height="15.0" fill="rgb(230,93,15)" rx="2" ry="2" />
<text  x="946.52" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (60 samples, 0.05%)</title><rect x="920.9" y="277" width="0.7" height="15.0" fill="rgb(216,178,17)" rx="2" ry="2" />
<text  x="923.94" y="287.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (16 samples, 0.01%)</title><rect x="1022.0" y="309" width="0.2" height="15.0" fill="rgb(237,118,38)" rx="2" ry="2" />
<text  x="1024.99" y="319.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (27 samples, 0.02%)</title><rect x="1058.7" y="261" width="0.3" height="15.0" fill="rgb(210,143,43)" rx="2" ry="2" />
<text  x="1061.72" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (28 samples, 0.03%)</title><rect x="1114.8" y="565" width="0.3" height="15.0" fill="rgb(230,134,10)" rx="2" ry="2" />
<text  x="1117.77" y="575.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::deallocate (15 samples, 0.01%)</title><rect x="911.3" y="277" width="0.1" height="15.0" fill="rgb(252,68,32)" rx="2" ry="2" />
<text  x="914.26" y="287.5" ></text>
</g>
<g >
<title>pmem_memcpy (18 samples, 0.02%)</title><rect x="1098.0" y="581" width="0.2" height="15.0" fill="rgb(211,70,5)" rx="2" ry="2" />
<text  x="1100.97" y="591.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (10 samples, 0.01%)</title><rect x="541.0" y="277" width="0.1" height="15.0" fill="rgb(235,44,15)" rx="2" ry="2" />
<text  x="544.02" y="287.5" ></text>
</g>
<g >
<title>XXH_readLE64_align (12 samples, 0.01%)</title><rect x="996.0" y="181" width="0.1" height="15.0" fill="rgb(236,132,25)" rx="2" ry="2" />
<text  x="998.97" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (52 samples, 0.05%)</title><rect x="960.2" y="229" width="0.6" height="15.0" fill="rgb(248,26,3)" rx="2" ry="2" />
<text  x="963.20" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::get_rw (14 samples, 0.01%)</title><rect x="242.8" y="53" width="0.1" height="15.0" fill="rgb(254,40,30)" rx="2" ry="2" />
<text  x="245.79" y="63.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (455 samples, 0.41%)</title><rect x="189.7" y="197" width="4.8" height="15.0" fill="rgb(233,177,2)" rx="2" ry="2" />
<text  x="192.70" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (28 samples, 0.03%)</title><rect x="253.4" y="197" width="0.3" height="15.0" fill="rgb(247,61,45)" rx="2" ry="2" />
<text  x="256.37" y="207.5" ></text>
</g>
<g >
<title>__gthread_yield (17 samples, 0.02%)</title><rect x="746.9" y="341" width="0.2" height="15.0" fill="rgb(253,151,22)" rx="2" ry="2" />
<text  x="749.93" y="351.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len@plt (11 samples, 0.01%)</title><rect x="935.8" y="293" width="0.2" height="15.0" fill="rgb(205,210,47)" rx="2" ry="2" />
<text  x="938.85" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (144 samples, 0.13%)</title><rect x="1008.4" y="165" width="1.5" height="15.0" fill="rgb(223,164,54)" rx="2" ry="2" />
<text  x="1011.35" y="175.5" ></text>
</g>
<g >
<title>operator new (35 samples, 0.03%)</title><rect x="229.5" y="245" width="0.4" height="15.0" fill="rgb(245,197,14)" rx="2" ry="2" />
<text  x="232.51" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (279 samples, 0.25%)</title><rect x="241.3" y="133" width="2.9" height="15.0" fill="rgb(254,163,39)" rx="2" ry="2" />
<text  x="244.27" y="143.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (25 samples, 0.02%)</title><rect x="468.4" y="229" width="0.3" height="15.0" fill="rgb(240,220,47)" rx="2" ry="2" />
<text  x="471.41" y="239.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_common.constprop.20 (415 samples, 0.37%)</title><rect x="1098.8" y="581" width="4.4" height="15.0" fill="rgb(243,165,4)" rx="2" ry="2" />
<text  x="1101.77" y="591.5" ></text>
</g>
<g >
<title>__pthread_mutex_cond_lock (63 samples, 0.06%)</title><rect x="1131.2" y="597" width="0.7" height="15.0" fill="rgb(218,202,37)" rx="2" ry="2" />
<text  x="1134.18" y="607.5" ></text>
</g>
<g >
<title>std::__addressof&lt;char const&gt; (10 samples, 0.01%)</title><rect x="220.7" y="181" width="0.2" height="15.0" fill="rgb(206,117,46)" rx="2" ry="2" />
<text  x="223.74" y="191.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (21 samples, 0.02%)</title><rect x="220.2" y="229" width="0.3" height="15.0" fill="rgb(227,154,25)" rx="2" ry="2" />
<text  x="223.23" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (22 samples, 0.02%)</title><rect x="924.0" y="245" width="0.2" height="15.0" fill="rgb(237,189,11)" rx="2" ry="2" />
<text  x="926.96" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::operator+&lt;char&gt; (12 samples, 0.01%)</title><rect x="469.2" y="181" width="0.2" height="15.0" fill="rgb(223,144,42)" rx="2" ry="2" />
<text  x="472.24" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (66 samples, 0.06%)</title><rect x="482.3" y="261" width="0.7" height="15.0" fill="rgb(245,49,37)" rx="2" ry="2" />
<text  x="485.30" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_deallocate (24 samples, 0.02%)</title><rect x="229.9" y="277" width="0.2" height="15.0" fill="rgb(218,225,32)" rx="2" ry="2" />
<text  x="232.88" y="287.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (11 samples, 0.01%)</title><rect x="903.7" y="229" width="0.1" height="15.0" fill="rgb(254,36,34)" rx="2" ry="2" />
<text  x="906.69" y="239.5" ></text>
</g>
<g >
<title>std::__detail::_Mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul, true, true&gt;::__calc (20 samples, 0.02%)</title><rect x="1081.3" y="181" width="0.2" height="15.0" fill="rgb(205,218,9)" rx="2" ry="2" />
<text  x="1084.30" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (27 samples, 0.02%)</title><rect x="988.5" y="197" width="0.3" height="15.0" fill="rgb(225,70,45)" rx="2" ry="2" />
<text  x="991.54" y="207.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (18 samples, 0.02%)</title><rect x="255.5" y="277" width="0.2" height="15.0" fill="rgb(232,64,46)" rx="2" ry="2" />
<text  x="258.51" y="287.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (792 samples, 0.71%)</title><rect x="1062.9" y="277" width="8.4" height="15.0" fill="rgb(231,82,25)" rx="2" ry="2" />
<text  x="1065.86" y="287.5" ></text>
</g>
<g >
<title>scythedb::LookupKey::LookupKey (16 samples, 0.01%)</title><rect x="45.3" y="341" width="0.1" height="15.0" fill="rgb(221,81,36)" rx="2" ry="2" />
<text  x="48.27" y="351.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (14 samples, 0.01%)</title><rect x="246.1" y="117" width="0.1" height="15.0" fill="rgb(252,227,17)" rx="2" ry="2" />
<text  x="249.10" y="127.5" ></text>
</g>
<g >
<title>std::function&lt;void  (111 samples, 0.10%)</title><rect x="245.9" y="149" width="1.2" height="15.0" fill="rgb(221,87,37)" rx="2" ry="2" />
<text  x="248.91" y="159.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::Allocate (40 samples, 0.04%)</title><rect x="249.6" y="245" width="0.4" height="15.0" fill="rgb(211,42,52)" rx="2" ry="2" />
<text  x="252.61" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (24 samples, 0.02%)</title><rect x="890.1" y="197" width="0.3" height="15.0" fill="rgb(245,151,52)" rx="2" ry="2" />
<text  x="893.12" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (12 samples, 0.01%)</title><rect x="1021.7" y="293" width="0.2" height="15.0" fill="rgb(216,165,32)" rx="2" ry="2" />
<text  x="1024.73" y="303.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (14 samples, 0.01%)</title><rect x="253.5" y="165" width="0.1" height="15.0" fill="rgb(225,79,29)" rx="2" ry="2" />
<text  x="256.49" y="175.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (33 samples, 0.03%)</title><rect x="1033.9" y="261" width="0.4" height="15.0" fill="rgb(232,26,48)" rx="2" ry="2" />
<text  x="1036.90" y="271.5" ></text>
</g>
<g >
<title>operation_start (38 samples, 0.03%)</title><rect x="828.7" y="565" width="0.4" height="15.0" fill="rgb(211,136,39)" rx="2" ry="2" />
<text  x="831.69" y="575.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (16 samples, 0.01%)</title><rect x="991.4" y="229" width="0.1" height="15.0" fill="rgb(208,190,45)" rx="2" ry="2" />
<text  x="994.38" y="239.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (11 samples, 0.01%)</title><rect x="891.2" y="117" width="0.1" height="15.0" fill="rgb(210,134,7)" rx="2" ry="2" />
<text  x="894.18" y="127.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,155 samples, 1.04%)</title><rect x="212.2" y="341" width="12.3" height="15.0" fill="rgb(250,167,6)" rx="2" ry="2" />
<text  x="215.16" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (31 samples, 0.03%)</title><rect x="968.2" y="197" width="0.4" height="15.0" fill="rgb(208,222,26)" rx="2" ry="2" />
<text  x="971.22" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistNext (76 samples, 0.07%)</title><rect x="252.5" y="213" width="0.8" height="15.0" fill="rgb(239,141,53)" rx="2" ry="2" />
<text  x="255.49" y="223.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::~shared_ptr (906 samples, 0.82%)</title><rect x="1011.1" y="277" width="9.7" height="15.0" fill="rgb(217,43,28)" rx="2" ry="2" />
<text  x="1014.11" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (26 samples, 0.02%)</title><rect x="1051.7" y="229" width="0.2" height="15.0" fill="rgb(249,156,3)" rx="2" ry="2" />
<text  x="1054.66" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (15 samples, 0.01%)</title><rect x="907.0" y="261" width="0.2" height="15.0" fill="rgb(252,109,50)" rx="2" ry="2" />
<text  x="910.04" y="271.5" ></text>
</g>
<g >
<title>ulog_foreach_entry (10 samples, 0.01%)</title><rect x="1117.5" y="581" width="0.1" height="15.0" fill="rgb(216,184,48)" rx="2" ry="2" />
<text  x="1120.53" y="591.5" ></text>
</g>
<g >
<title>_int_free (68 samples, 0.06%)</title><rect x="861.3" y="165" width="0.7" height="15.0" fill="rgb(251,58,22)" rx="2" ry="2" />
<text  x="864.26" y="175.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::emplace_back&lt;scythedb::Slice&gt; (481 samples, 0.43%)</title><rect x="228.1" y="309" width="5.1" height="15.0" fill="rgb(206,3,27)" rx="2" ry="2" />
<text  x="231.10" y="319.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::base (11 samples, 0.01%)</title><rect x="1038.3" y="165" width="0.1" height="15.0" fill="rgb(214,28,33)" rx="2" ry="2" />
<text  x="1041.31" y="175.5" ></text>
</g>
<g >
<title>scythedb::Status::Status (102 samples, 0.09%)</title><rect x="739.0" y="357" width="1.1" height="15.0" fill="rgb(244,212,30)" rx="2" ry="2" />
<text  x="742.05" y="367.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (10 samples, 0.01%)</title><rect x="933.6" y="245" width="0.1" height="15.0" fill="rgb(205,152,54)" rx="2" ry="2" />
<text  x="936.58" y="255.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned long&gt;::operator++ (39 samples, 0.04%)</title><rect x="904.5" y="309" width="0.5" height="15.0" fill="rgb(223,1,9)" rx="2" ry="2" />
<text  x="907.54" y="319.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (13 samples, 0.01%)</title><rect x="970.3" y="293" width="0.1" height="15.0" fill="rgb(210,185,6)" rx="2" ry="2" />
<text  x="973.27" y="303.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.01%)</title><rect x="923.5" y="229" width="0.1" height="15.0" fill="rgb(206,187,16)" rx="2" ry="2" />
<text  x="926.51" y="239.5" ></text>
</g>
<g >
<title>memblock_run_bitmap (17 samples, 0.02%)</title><rect x="1154.0" y="597" width="0.1" height="15.0" fill="rgb(213,220,10)" rx="2" ry="2" />
<text  x="1156.95" y="607.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::operator[]&lt;std::enable_if&lt;true, void&gt; &gt; (48 samples, 0.04%)</title><rect x="244.4" y="133" width="0.5" height="15.0" fill="rgb(223,46,45)" rx="2" ry="2" />
<text  x="247.35" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (31 samples, 0.03%)</title><rect x="954.7" y="245" width="0.3" height="15.0" fill="rgb(216,23,8)" rx="2" ry="2" />
<text  x="957.70" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (41 samples, 0.04%)</title><rect x="39.8" y="341" width="0.5" height="15.0" fill="rgb(240,185,52)" rx="2" ry="2" />
<text  x="42.82" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (71 samples, 0.06%)</title><rect x="987.6" y="197" width="0.8" height="15.0" fill="rgb(205,102,17)" rx="2" ry="2" />
<text  x="990.62" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (169 samples, 0.15%)</title><rect x="477.8" y="293" width="1.8" height="15.0" fill="rgb(213,95,37)" rx="2" ry="2" />
<text  x="480.79" y="303.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (136 samples, 0.12%)</title><rect x="909.2" y="261" width="1.5" height="15.0" fill="rgb(229,128,31)" rx="2" ry="2" />
<text  x="912.24" y="271.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (60 samples, 0.05%)</title><rect x="223.7" y="309" width="0.6" height="15.0" fill="rgb(214,202,47)" rx="2" ry="2" />
<text  x="226.70" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (24 samples, 0.02%)</title><rect x="489.3" y="293" width="0.3" height="15.0" fill="rgb(239,65,39)" rx="2" ry="2" />
<text  x="492.35" y="303.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::MutexLock (588 samples, 0.53%)</title><rect x="14.8" y="453" width="6.3" height="15.0" fill="rgb(205,138,32)" rx="2" ry="2" />
<text  x="17.82" y="463.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::wait (16 samples, 0.01%)</title><rect x="798.6" y="485" width="0.2" height="15.0" fill="rgb(242,120,17)" rx="2" ry="2" />
<text  x="801.62" y="495.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_allocate (40 samples, 0.04%)</title><rect x="43.2" y="277" width="0.5" height="15.0" fill="rgb(220,156,17)" rx="2" ry="2" />
<text  x="46.24" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (16 samples, 0.01%)</title><rect x="491.2" y="309" width="0.2" height="15.0" fill="rgb(215,20,41)" rx="2" ry="2" />
<text  x="494.19" y="319.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (54 samples, 0.05%)</title><rect x="1080.9" y="213" width="0.6" height="15.0" fill="rgb(227,122,51)" rx="2" ry="2" />
<text  x="1083.94" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::size (24 samples, 0.02%)</title><rect x="1041.6" y="245" width="0.3" height="15.0" fill="rgb(219,51,17)" rx="2" ry="2" />
<text  x="1044.60" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (417 samples, 0.38%)</title><rect x="1006.6" y="229" width="4.4" height="15.0" fill="rgb(220,138,3)" rx="2" ry="2" />
<text  x="1009.57" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (76 samples, 0.07%)</title><rect x="231.0" y="229" width="0.8" height="15.0" fill="rgb(249,118,19)" rx="2" ry="2" />
<text  x="234.02" y="239.5" ></text>
</g>
<g >
<title>palloc_heap_action_on_process (124 samples, 0.11%)</title><rect x="1086.2" y="565" width="1.3" height="15.0" fill="rgb(206,167,43)" rx="2" ry="2" />
<text  x="1089.21" y="575.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;int, int  (22,775 samples, 20.55%)</title><rect x="839.7" y="373" width="242.5" height="15.0" fill="rgb(207,19,26)" rx="2" ry="2" />
<text  x="842.69" y="383.5" >std::__invoke_impl&lt;int, int </text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (641 samples, 0.58%)</title><rect x="482.0" y="277" width="6.8" height="15.0" fill="rgb(240,206,31)" rx="2" ry="2" />
<text  x="484.99" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (147 samples, 0.13%)</title><rect x="881.8" y="165" width="1.5" height="15.0" fill="rgb(227,178,33)" rx="2" ry="2" />
<text  x="884.77" y="175.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (29 samples, 0.03%)</title><rect x="878.4" y="293" width="0.3" height="15.0" fill="rgb(222,175,27)" rx="2" ry="2" />
<text  x="881.44" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (336 samples, 0.30%)</title><rect x="965.9" y="229" width="3.6" height="15.0" fill="rgb(228,228,45)" rx="2" ry="2" />
<text  x="968.90" y="239.5" ></text>
</g>
<g >
<title>XXH64 (10 samples, 0.01%)</title><rect x="994.5" y="245" width="0.1" height="15.0" fill="rgb(234,88,30)" rx="2" ry="2" />
<text  x="997.45" y="255.5" ></text>
</g>
<g >
<title>std::function&lt;void  (132 samples, 0.12%)</title><rect x="990.6" y="245" width="1.4" height="15.0" fill="rgb(211,10,28)" rx="2" ry="2" />
<text  x="993.56" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (229 samples, 0.21%)</title><rect x="744.4" y="309" width="2.4" height="15.0" fill="rgb(223,192,0)" rx="2" ry="2" />
<text  x="747.40" y="319.5" ></text>
</g>
<g >
<title>std::__detail::_Adaptor&lt;std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;, double&gt;::operator (64 samples, 0.06%)</title><rect x="1070.3" y="197" width="0.7" height="15.0" fill="rgb(212,104,9)" rx="2" ry="2" />
<text  x="1073.29" y="207.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (14 samples, 0.01%)</title><rect x="256.1" y="197" width="0.2" height="15.0" fill="rgb(222,194,30)" rx="2" ry="2" />
<text  x="259.14" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (562 samples, 0.51%)</title><rect x="204.0" y="325" width="6.0" height="15.0" fill="rgb(210,33,39)" rx="2" ry="2" />
<text  x="206.99" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (13 samples, 0.01%)</title><rect x="899.9" y="165" width="0.2" height="15.0" fill="rgb(232,225,39)" rx="2" ry="2" />
<text  x="902.94" y="175.5" ></text>
</g>
<g >
<title>utils::RandomPrintChar (18 samples, 0.02%)</title><rect x="911.6" y="325" width="0.2" height="15.0" fill="rgb(207,86,26)" rx="2" ry="2" />
<text  x="914.58" y="335.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (15 samples, 0.01%)</title><rect x="902.2" y="149" width="0.2" height="15.0" fill="rgb(227,0,23)" rx="2" ry="2" />
<text  x="905.24" y="159.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (97 samples, 0.09%)</title><rect x="1077.7" y="277" width="1.1" height="15.0" fill="rgb(248,160,39)" rx="2" ry="2" />
<text  x="1080.73" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (219 samples, 0.20%)</title><rect x="962.5" y="293" width="2.3" height="15.0" fill="rgb(253,151,26)" rx="2" ry="2" />
<text  x="965.47" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (25 samples, 0.02%)</title><rect x="478.1" y="245" width="0.3" height="15.0" fill="rgb(208,27,20)" rx="2" ry="2" />
<text  x="481.12" y="255.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (109 samples, 0.10%)</title><rect x="1023.8" y="245" width="1.2" height="15.0" fill="rgb(228,2,48)" rx="2" ry="2" />
<text  x="1026.85" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::allocate (15 samples, 0.01%)</title><rect x="937.6" y="245" width="0.1" height="15.0" fill="rgb(210,103,3)" rx="2" ry="2" />
<text  x="940.56" y="255.5" ></text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul&gt; (21 samples, 0.02%)</title><rect x="1081.3" y="197" width="0.2" height="15.0" fill="rgb(221,57,1)" rx="2" ry="2" />
<text  x="1084.29" y="207.5" ></text>
</g>
<g >
<title>heap_get_bestfit_block (14 samples, 0.01%)</title><rect x="1083.5" y="581" width="0.2" height="15.0" fill="rgb(242,69,33)" rx="2" ry="2" />
<text  x="1086.53" y="591.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (13 samples, 0.01%)</title><rect x="963.8" y="229" width="0.1" height="15.0" fill="rgb(250,13,5)" rx="2" ry="2" />
<text  x="966.75" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (42 samples, 0.04%)</title><rect x="241.7" y="69" width="0.5" height="15.0" fill="rgb(236,96,30)" rx="2" ry="2" />
<text  x="244.71" y="79.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread (74,129 samples, 66.90%)</title><rect x="10.1" y="565" width="789.5" height="15.0" fill="rgb(247,139,6)" rx="2" ry="2" />
<text  x="13.13" y="575.5" >std::thread::_Invoker&lt;std::tuple&lt;scythedb::RepeatableThread::RepeatableThread</text>
</g>
<g >
<title>pmemobj_tx_xadd_range_direct (21 samples, 0.02%)</title><rect x="469.8" y="165" width="0.2" height="15.0" fill="rgb(223,87,10)" rx="2" ry="2" />
<text  x="472.79" y="175.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (11 samples, 0.01%)</title><rect x="1005.1" y="261" width="0.1" height="15.0" fill="rgb(226,67,33)" rx="2" ry="2" />
<text  x="1008.07" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (78 samples, 0.07%)</title><rect x="973.1" y="261" width="0.8" height="15.0" fill="rgb(217,76,5)" rx="2" ry="2" />
<text  x="976.06" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (13 samples, 0.01%)</title><rect x="1006.1" y="261" width="0.1" height="15.0" fill="rgb(215,181,22)" rx="2" ry="2" />
<text  x="1009.07" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (18 samples, 0.02%)</title><rect x="866.6" y="197" width="0.2" height="15.0" fill="rgb(250,89,32)" rx="2" ry="2" />
<text  x="869.63" y="207.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (554 samples, 0.50%)</title><rect x="345.5" y="197" width="5.9" height="15.0" fill="rgb(239,129,31)" rx="2" ry="2" />
<text  x="348.52" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (164 samples, 0.15%)</title><rect x="1043.2" y="197" width="1.8" height="15.0" fill="rgb(239,80,33)" rx="2" ry="2" />
<text  x="1046.24" y="207.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (21 samples, 0.02%)</title><rect x="877.9" y="277" width="0.2" height="15.0" fill="rgb(214,12,33)" rx="2" ry="2" />
<text  x="880.86" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (10 samples, 0.01%)</title><rect x="351.9" y="245" width="0.1" height="15.0" fill="rgb(250,42,27)" rx="2" ry="2" />
<text  x="354.90" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (20 samples, 0.02%)</title><rect x="489.1" y="277" width="0.2" height="15.0" fill="rgb(231,79,22)" rx="2" ry="2" />
<text  x="492.08" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (115 samples, 0.10%)</title><rect x="1043.5" y="165" width="1.3" height="15.0" fill="rgb(229,175,46)" rx="2" ry="2" />
<text  x="1046.53" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator= (55 samples, 0.05%)</title><rect x="238.1" y="213" width="0.6" height="15.0" fill="rgb(238,159,51)" rx="2" ry="2" />
<text  x="241.14" y="223.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (276 samples, 0.25%)</title><rect x="241.3" y="117" width="2.9" height="15.0" fill="rgb(253,79,44)" rx="2" ry="2" />
<text  x="244.30" y="127.5" ></text>
</g>
<g >
<title>std::function&lt;void  (200 samples, 0.18%)</title><rect x="869.1" y="277" width="2.2" height="15.0" fill="rgb(215,73,6)" rx="2" ry="2" />
<text  x="872.13" y="287.5" ></text>
</g>
<g >
<title>std::operator!=&lt;scythedb::Slice*&gt; (19 samples, 0.02%)</title><rect x="44.2" y="213" width="0.2" height="15.0" fill="rgb(250,15,46)" rx="2" ry="2" />
<text  x="47.20" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (120 samples, 0.11%)</title><rect x="1053.3" y="245" width="1.3" height="15.0" fill="rgb(223,205,28)" rx="2" ry="2" />
<text  x="1056.33" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (78 samples, 0.07%)</title><rect x="490.3" y="309" width="0.8" height="15.0" fill="rgb(245,63,27)" rx="2" ry="2" />
<text  x="493.26" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (20 samples, 0.02%)</title><rect x="243.0" y="69" width="0.2" height="15.0" fill="rgb(206,2,23)" rx="2" ry="2" />
<text  x="245.99" y="79.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (21 samples, 0.02%)</title><rect x="54.5" y="261" width="0.2" height="15.0" fill="rgb(240,18,21)" rx="2" ry="2" />
<text  x="57.45" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (33 samples, 0.03%)</title><rect x="953.7" y="245" width="0.4" height="15.0" fill="rgb(251,97,43)" rx="2" ry="2" />
<text  x="956.71" y="255.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (31 samples, 0.03%)</title><rect x="241.8" y="53" width="0.3" height="15.0" fill="rgb(226,18,42)" rx="2" ry="2" />
<text  x="244.82" y="63.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (78 samples, 0.07%)</title><rect x="210.8" y="293" width="0.8" height="15.0" fill="rgb(231,107,39)" rx="2" ry="2" />
<text  x="213.76" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;std::allocator&lt;char&gt; &gt; (208 samples, 0.19%)</title><rect x="1054.9" y="277" width="2.2" height="15.0" fill="rgb(227,143,29)" rx="2" ry="2" />
<text  x="1057.92" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (22 samples, 0.02%)</title><rect x="1042.4" y="277" width="0.2" height="15.0" fill="rgb(219,57,45)" rx="2" ry="2" />
<text  x="1045.35" y="287.5" ></text>
</g>
<g >
<title>obj_norep_flush (889 samples, 0.80%)</title><rect x="1085.8" y="581" width="9.5" height="15.0" fill="rgb(225,93,3)" rx="2" ry="2" />
<text  x="1088.83" y="591.5" ></text>
</g>
<g >
<title>scythedb::DBImpl::Get (4,068 samples, 3.67%)</title><rect x="978.5" y="309" width="43.4" height="15.0" fill="rgb(208,69,29)" rx="2" ry="2" />
<text  x="981.53" y="319.5" >scyt..</text>
</g>
<g >
<title>moodycamel::details::_hash_32_or_64&lt;true&gt;::hash (21 samples, 0.02%)</title><rect x="884.2" y="213" width="0.2" height="15.0" fill="rgb(240,225,0)" rx="2" ry="2" />
<text  x="887.18" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (12 samples, 0.01%)</title><rect x="928.6" y="261" width="0.2" height="15.0" fill="rgb(210,156,5)" rx="2" ry="2" />
<text  x="931.63" y="271.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (15 samples, 0.01%)</title><rect x="1034.4" y="277" width="0.2" height="15.0" fill="rgb(228,85,48)" rx="2" ry="2" />
<text  x="1037.42" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_init (48 samples, 0.04%)</title><rect x="997.3" y="261" width="0.5" height="15.0" fill="rgb(235,102,0)" rx="2" ry="2" />
<text  x="1000.33" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (35 samples, 0.03%)</title><rect x="929.2" y="213" width="0.4" height="15.0" fill="rgb(223,78,25)" rx="2" ry="2" />
<text  x="932.20" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (334 samples, 0.30%)</title><rect x="955.6" y="293" width="3.6" height="15.0" fill="rgb(209,217,39)" rx="2" ry="2" />
<text  x="958.63" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (18 samples, 0.02%)</title><rect x="483.2" y="245" width="0.2" height="15.0" fill="rgb(239,36,32)" rx="2" ry="2" />
<text  x="486.17" y="255.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (29 samples, 0.03%)</title><rect x="814.6" y="549" width="0.3" height="15.0" fill="rgb(235,43,19)" rx="2" ry="2" />
<text  x="817.60" y="559.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (12 samples, 0.01%)</title><rect x="47.7" y="293" width="0.1" height="15.0" fill="rgb(242,207,28)" rx="2" ry="2" />
<text  x="50.66" y="303.5" ></text>
</g>
<g >
<title>std::type_info::hash_code (39 samples, 0.04%)</title><rect x="240.1" y="149" width="0.4" height="15.0" fill="rgb(229,200,15)" rx="2" ry="2" />
<text  x="243.10" y="159.5" ></text>
</g>
<g >
<title>__ieee754_pow_fma.localalias.0 (14 samples, 0.01%)</title><rect x="1063.0" y="261" width="0.1" height="15.0" fill="rgb(210,91,24)" rx="2" ry="2" />
<text  x="1065.95" y="271.5" ></text>
</g>
<g >
<title>std::get&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (178 samples, 0.16%)</title><rect x="794.6" y="405" width="1.9" height="15.0" fill="rgb(205,21,51)" rx="2" ry="2" />
<text  x="797.64" y="415.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (10 samples, 0.01%)</title><rect x="476.7" y="261" width="0.1" height="15.0" fill="rgb(237,130,13)" rx="2" ry="2" />
<text  x="479.69" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (21 samples, 0.02%)</title><rect x="1168.5" y="597" width="0.2" height="15.0" fill="rgb(247,21,7)" rx="2" ry="2" />
<text  x="1171.52" y="607.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (19 samples, 0.02%)</title><rect x="239.5" y="181" width="0.2" height="15.0" fill="rgb(242,27,34)" rx="2" ry="2" />
<text  x="242.53" y="191.5" ></text>
</g>
<g >
<title>operator new (14 samples, 0.01%)</title><rect x="893.3" y="181" width="0.1" height="15.0" fill="rgb(220,124,9)" rx="2" ry="2" />
<text  x="896.29" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (20 samples, 0.02%)</title><rect x="973.3" y="245" width="0.2" height="15.0" fill="rgb(221,150,10)" rx="2" ry="2" />
<text  x="976.30" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add (123 samples, 0.11%)</title><rect x="1000.8" y="133" width="1.3" height="15.0" fill="rgb(209,51,0)" rx="2" ry="2" />
<text  x="1003.79" y="143.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (192 samples, 0.17%)</title><rect x="468.9" y="245" width="2.0" height="15.0" fill="rgb(223,170,11)" rx="2" ry="2" />
<text  x="471.88" y="255.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (22 samples, 0.02%)</title><rect x="248.8" y="277" width="0.2" height="15.0" fill="rgb(214,39,18)" rx="2" ry="2" />
<text  x="251.79" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (13 samples, 0.01%)</title><rect x="480.5" y="245" width="0.1" height="15.0" fill="rgb(245,76,46)" rx="2" ry="2" />
<text  x="483.50" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (7,113 samples, 6.42%)</title><rect x="120.5" y="245" width="75.7" height="15.0" fill="rgb(233,69,39)" rx="2" ry="2" />
<text  x="123.47" y="255.5" >scythedb..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (15 samples, 0.01%)</title><rect x="920.7" y="261" width="0.2" height="15.0" fill="rgb(225,201,46)" rx="2" ry="2" />
<text  x="923.74" y="271.5" ></text>
</g>
<g >
<title>pmem::detail::create&lt;scythedb::InternalNode, pmem::obj::persistent_ptr&lt;char&gt; const&amp;, decltype (44 samples, 0.04%)</title><rect x="464.1" y="245" width="0.5" height="15.0" fill="rgb(223,52,31)" rx="2" ry="2" />
<text  x="467.14" y="255.5" ></text>
</g>
<g >
<title>malloc (780 samples, 0.70%)</title><rect x="1145.6" y="597" width="8.4" height="15.0" fill="rgb(206,82,20)" rx="2" ry="2" />
<text  x="1148.64" y="607.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Add (24,255 samples, 21.89%)</title><rect x="233.3" y="341" width="258.3" height="15.0" fill="rgb(205,95,52)" rx="2" ry="2" />
<text  x="236.26" y="351.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>std::__addressof&lt;scythedb::NVMBlock::NVMBlock (13 samples, 0.01%)</title><rect x="198.2" y="245" width="0.1" height="15.0" fill="rgb(244,173,43)" rx="2" ry="2" />
<text  x="201.19" y="255.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_deallocate (24 samples, 0.02%)</title><rect x="911.2" y="293" width="0.2" height="15.0" fill="rgb(247,177,15)" rx="2" ry="2" />
<text  x="914.16" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (46 samples, 0.04%)</title><rect x="1017.0" y="85" width="0.4" height="15.0" fill="rgb(234,143,52)" rx="2" ry="2" />
<text  x="1019.96" y="95.5" ></text>
</g>
<g >
<title>pmem_memset (18 samples, 0.02%)</title><rect x="1098.2" y="581" width="0.2" height="15.0" fill="rgb(227,165,31)" rx="2" ry="2" />
<text  x="1101.16" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="478.7" y="229" width="0.1" height="15.0" fill="rgb(243,105,7)" rx="2" ry="2" />
<text  x="481.66" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (10 samples, 0.01%)</title><rect x="891.7" y="133" width="0.1" height="15.0" fill="rgb(206,216,1)" rx="2" ry="2" />
<text  x="894.65" y="143.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (56 samples, 0.05%)</title><rect x="937.4" y="277" width="0.6" height="15.0" fill="rgb(212,81,41)" rx="2" ry="2" />
<text  x="940.37" y="287.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (41 samples, 0.04%)</title><rect x="939.3" y="213" width="0.4" height="15.0" fill="rgb(247,110,8)" rx="2" ry="2" />
<text  x="942.28" y="223.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (382 samples, 0.34%)</title><rect x="899.6" y="213" width="4.1" height="15.0" fill="rgb(248,128,36)" rx="2" ry="2" />
<text  x="902.61" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (1,691 samples, 1.53%)</title><rect x="98.2" y="245" width="18.0" height="15.0" fill="rgb(238,61,46)" rx="2" ry="2" />
<text  x="101.18" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__atomic_add_dispatch (131 samples, 0.12%)</title><rect x="1000.8" y="149" width="1.4" height="15.0" fill="rgb(237,228,31)" rx="2" ry="2" />
<text  x="1003.78" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (53 samples, 0.05%)</title><rect x="856.4" y="229" width="0.6" height="15.0" fill="rgb(253,135,13)" rx="2" ry="2" />
<text  x="859.42" y="239.5" ></text>
</g>
<g >
<title>_IO_setb (31 samples, 0.03%)</title><rect x="813.6" y="565" width="0.3" height="15.0" fill="rgb(238,119,17)" rx="2" ry="2" />
<text  x="816.61" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (618 samples, 0.56%)</title><rect x="1026.8" y="229" width="6.6" height="15.0" fill="rgb(237,176,42)" rx="2" ry="2" />
<text  x="1029.81" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (28 samples, 0.03%)</title><rect x="990.7" y="229" width="0.3" height="15.0" fill="rgb(254,111,54)" rx="2" ry="2" />
<text  x="993.74" y="239.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (25 samples, 0.02%)</title><rect x="44.1" y="229" width="0.3" height="15.0" fill="rgb(219,203,6)" rx="2" ry="2" />
<text  x="47.14" y="239.5" ></text>
</g>
<g >
<title>operator new (17 samples, 0.02%)</title><rect x="952.5" y="213" width="0.2" height="15.0" fill="rgb(223,7,0)" rx="2" ry="2" />
<text  x="955.55" y="223.5" ></text>
</g>
<g >
<title>std::call_once&lt;void  (22,775 samples, 20.55%)</title><rect x="839.7" y="533" width="242.5" height="15.0" fill="rgb(244,88,32)" rx="2" ry="2" />
<text  x="842.69" y="543.5" >std::call_once&lt;void </text>
</g>
<g >
<title>scythedb::(anonymous namespace)::MessageID::AssignID (246 samples, 0.22%)</title><rect x="871.3" y="293" width="2.6" height="15.0" fill="rgb(249,149,32)" rx="2" ry="2" />
<text  x="874.26" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_deallocate (26 samples, 0.02%)</title><rect x="224.7" y="309" width="0.2" height="15.0" fill="rgb(209,212,13)" rx="2" ry="2" />
<text  x="227.65" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (11 samples, 0.01%)</title><rect x="1057.2" y="261" width="0.1" height="15.0" fill="rgb(246,128,23)" rx="2" ry="2" />
<text  x="1060.19" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (375 samples, 0.34%)</title><rect x="1006.9" y="213" width="4.0" height="15.0" fill="rgb(221,183,50)" rx="2" ry="2" />
<text  x="1009.88" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (386 samples, 0.35%)</title><rect x="965.6" y="261" width="4.1" height="15.0" fill="rgb(251,66,52)" rx="2" ry="2" />
<text  x="968.63" y="271.5" ></text>
</g>
<g >
<title>operator new (11 samples, 0.01%)</title><rect x="887.1" y="245" width="0.1" height="15.0" fill="rgb(220,176,9)" rx="2" ry="2" />
<text  x="890.06" y="255.5" ></text>
</g>
<g >
<title>operation_add_typed_entry (16 samples, 0.01%)</title><rect x="1095.5" y="581" width="0.1" height="15.0" fill="rgb(240,126,28)" rx="2" ry="2" />
<text  x="1098.46" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (28 samples, 0.03%)</title><rect x="906.9" y="277" width="0.3" height="15.0" fill="rgb(229,200,47)" rx="2" ry="2" />
<text  x="909.92" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_get_user_data (15 samples, 0.01%)</title><rect x="471.5" y="229" width="0.2" height="15.0" fill="rgb(247,110,37)" rx="2" ry="2" />
<text  x="474.51" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="974.1" y="293" width="0.2" height="15.0" fill="rgb(231,80,40)" rx="2" ry="2" />
<text  x="977.10" y="303.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (88 samples, 0.08%)</title><rect x="830.8" y="565" width="1.0" height="15.0" fill="rgb(219,54,14)" rx="2" ry="2" />
<text  x="833.83" y="575.5" ></text>
</g>
<g >
<title>std::uninitialized_copy&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*&gt; (87 samples, 0.08%)</title><rect x="230.9" y="245" width="1.0" height="15.0" fill="rgb(206,31,32)" rx="2" ry="2" />
<text  x="233.92" y="255.5" ></text>
</g>
<g >
<title>XXH_readLE64_align (15 samples, 0.01%)</title><rect x="876.3" y="197" width="0.2" height="15.0" fill="rgb(239,159,1)" rx="2" ry="2" />
<text  x="879.33" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (15 samples, 0.01%)</title><rect x="990.3" y="229" width="0.2" height="15.0" fill="rgb(205,118,41)" rx="2" ry="2" />
<text  x="993.30" y="239.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (17 samples, 0.02%)</title><rect x="239.5" y="149" width="0.2" height="15.0" fill="rgb(215,57,33)" rx="2" ry="2" />
<text  x="242.54" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (10 samples, 0.01%)</title><rect x="923.2" y="245" width="0.1" height="15.0" fill="rgb(210,171,20)" rx="2" ry="2" />
<text  x="926.24" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (13 samples, 0.01%)</title><rect x="858.7" y="213" width="0.1" height="15.0" fill="rgb(224,57,43)" rx="2" ry="2" />
<text  x="861.65" y="223.5" ></text>
</g>
<g >
<title>scythedb::CondVar::Wait (43 samples, 0.04%)</title><rect x="1020.8" y="293" width="0.4" height="15.0" fill="rgb(238,133,48)" rx="2" ry="2" />
<text  x="1023.79" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_capacity (12 samples, 0.01%)</title><rect x="1027.2" y="213" width="0.2" height="15.0" fill="rgb(252,159,47)" rx="2" ry="2" />
<text  x="1030.24" y="223.5" ></text>
</g>
<g >
<title>utils::RandomDouble (203 samples, 0.18%)</title><rect x="1079.8" y="293" width="2.2" height="15.0" fill="rgb(223,160,51)" rx="2" ry="2" />
<text  x="1082.82" y="303.5" ></text>
</g>
<g >
<title>pmemobj_root (10 samples, 0.01%)</title><rect x="247.7" y="277" width="0.1" height="15.0" fill="rgb(213,82,31)" rx="2" ry="2" />
<text  x="250.70" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (81 samples, 0.07%)</title><rect x="251.1" y="277" width="0.8" height="15.0" fill="rgb(212,56,45)" rx="2" ry="2" />
<text  x="254.07" y="287.5" ></text>
</g>
<g >
<title>scythedb::ExtractUserKey (447 samples, 0.40%)</title><rect x="449.8" y="165" width="4.8" height="15.0" fill="rgb(254,196,20)" rx="2" ry="2" />
<text  x="452.85" y="175.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair (220 samples, 0.20%)</title><rect x="1038.8" y="229" width="2.3" height="15.0" fill="rgb(206,176,25)" rx="2" ry="2" />
<text  x="1041.78" y="239.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (64 samples, 0.06%)</title><rect x="1005.4" y="245" width="0.7" height="15.0" fill="rgb(217,51,28)" rx="2" ry="2" />
<text  x="1008.39" y="255.5" ></text>
</g>
<g >
<title>std::move&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;&amp;&gt; (10 samples, 0.01%)</title><rect x="1034.6" y="309" width="0.1" height="15.0" fill="rgb(235,88,30)" rx="2" ry="2" />
<text  x="1037.61" y="319.5" ></text>
</g>
<g >
<title>std::function&lt;void  (380 samples, 0.34%)</title><rect x="491.9" y="341" width="4.1" height="15.0" fill="rgb(216,88,3)" rx="2" ry="2" />
<text  x="494.92" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (259 samples, 0.23%)</title><rect x="1050.1" y="261" width="2.8" height="15.0" fill="rgb(226,197,44)" rx="2" ry="2" />
<text  x="1053.13" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (23 samples, 0.02%)</title><rect x="989.2" y="213" width="0.3" height="15.0" fill="rgb(209,104,6)" rx="2" ry="2" />
<text  x="992.25" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_ebo_helper&lt;0, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, true&gt;::~_Sp_ebo_helper (11 samples, 0.01%)</title><rect x="898.6" y="181" width="0.1" height="15.0" fill="rgb(249,25,22)" rx="2" ry="2" />
<text  x="901.61" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (10 samples, 0.01%)</title><rect x="473.1" y="245" width="0.1" height="15.0" fill="rgb(207,46,51)" rx="2" ry="2" />
<text  x="476.06" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (94 samples, 0.08%)</title><rect x="946.4" y="277" width="1.0" height="15.0" fill="rgb(243,7,36)" rx="2" ry="2" />
<text  x="949.36" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (19 samples, 0.02%)</title><rect x="1045.8" y="261" width="0.2" height="15.0" fill="rgb(251,100,37)" rx="2" ry="2" />
<text  x="1048.82" y="271.5" ></text>
</g>
<g >
<title>std::forward_as_tuple&lt;&gt; (18 samples, 0.02%)</title><rect x="798.4" y="437" width="0.2" height="15.0" fill="rgb(208,138,35)" rx="2" ry="2" />
<text  x="801.43" y="447.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (100 samples, 0.09%)</title><rect x="886.3" y="277" width="1.1" height="15.0" fill="rgb(224,226,35)" rx="2" ry="2" />
<text  x="889.33" y="287.5" ></text>
</g>
<g >
<title>msort_with_tmp.part.0 (351 samples, 0.32%)</title><rect x="1154.2" y="597" width="3.7" height="15.0" fill="rgb(230,197,34)" rx="2" ry="2" />
<text  x="1157.21" y="607.5" ></text>
</g>
<g >
<title>__libc_start_main (11 samples, 0.01%)</title><rect x="838.6" y="581" width="0.1" height="15.0" fill="rgb(227,121,14)" rx="2" ry="2" />
<text  x="841.62" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (54 samples, 0.05%)</title><rect x="920.0" y="277" width="0.6" height="15.0" fill="rgb(237,214,6)" rx="2" ry="2" />
<text  x="923.05" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::_Vector_impl (27 samples, 0.02%)</title><rect x="908.5" y="293" width="0.3" height="15.0" fill="rgb(209,147,53)" rx="2" ry="2" />
<text  x="911.47" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::allocate (39 samples, 0.04%)</title><rect x="952.3" y="229" width="0.4" height="15.0" fill="rgb(248,182,15)" rx="2" ry="2" />
<text  x="955.32" y="239.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (272 samples, 0.25%)</title><rect x="979.7" y="277" width="2.8" height="15.0" fill="rgb(248,75,1)" rx="2" ry="2" />
<text  x="982.65" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (226 samples, 0.20%)</title><rect x="956.2" y="277" width="2.4" height="15.0" fill="rgb(222,79,51)" rx="2" ry="2" />
<text  x="959.17" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (17 samples, 0.02%)</title><rect x="931.9" y="261" width="0.1" height="15.0" fill="rgb(216,48,24)" rx="2" ry="2" />
<text  x="934.86" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (229 samples, 0.21%)</title><rect x="1038.7" y="245" width="2.4" height="15.0" fill="rgb(205,20,21)" rx="2" ry="2" />
<text  x="1041.68" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (14,247 samples, 12.86%)</title><rect x="47.8" y="293" width="151.7" height="15.0" fill="rgb(251,41,37)" rx="2" ry="2" />
<text  x="50.82" y="303.5" >scythedb::NVMSkipLi..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (14 samples, 0.01%)</title><rect x="968.4" y="181" width="0.1" height="15.0" fill="rgb(214,37,46)" rx="2" ry="2" />
<text  x="971.35" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (179 samples, 0.16%)</title><rect x="1059.4" y="245" width="1.9" height="15.0" fill="rgb(205,142,9)" rx="2" ry="2" />
<text  x="1062.42" y="255.5" ></text>
</g>
<g >
<title>XXH64 (150 samples, 0.14%)</title><rect x="994.6" y="229" width="1.6" height="15.0" fill="rgb(243,145,23)" rx="2" ry="2" />
<text  x="997.61" y="239.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (30 samples, 0.03%)</title><rect x="857.2" y="261" width="0.4" height="15.0" fill="rgb(215,7,25)" rx="2" ry="2" />
<text  x="860.23" y="271.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (51 samples, 0.05%)</title><rect x="1057.6" y="229" width="0.5" height="15.0" fill="rgb(222,87,20)" rx="2" ry="2" />
<text  x="1060.57" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (201 samples, 0.18%)</title><rect x="474.7" y="277" width="2.1" height="15.0" fill="rgb(217,109,8)" rx="2" ry="2" />
<text  x="477.69" y="287.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (358 samples, 0.32%)</title><rect x="492.1" y="325" width="3.8" height="15.0" fill="rgb(226,224,4)" rx="2" ry="2" />
<text  x="495.14" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::construct_at_end&lt;std::move_iterator&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;*&gt;,  (44 samples, 0.04%)</title><rect x="243.5" y="69" width="0.5" height="15.0" fill="rgb(206,156,31)" rx="2" ry="2" />
<text  x="246.52" y="79.5" ></text>
</g>
<g >
<title>scythedb::InternalKeyComparator::Compare (48 samples, 0.04%)</title><rect x="256.3" y="197" width="0.5" height="15.0" fill="rgb(223,229,7)" rx="2" ry="2" />
<text  x="259.30" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::operator+=&lt;unsigned long, unsigned long&gt; (16 samples, 0.01%)</title><rect x="242.8" y="69" width="0.1" height="15.0" fill="rgb(245,168,5)" rx="2" ry="2" />
<text  x="245.77" y="79.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::emplace_back&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt; (25 samples, 0.02%)</title><rect x="246.0" y="133" width="0.3" height="15.0" fill="rgb(242,13,5)" rx="2" ry="2" />
<text  x="249.01" y="143.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (23 samples, 0.02%)</title><rect x="268.0" y="245" width="0.2" height="15.0" fill="rgb(220,68,43)" rx="2" ry="2" />
<text  x="270.98" y="255.5" ></text>
</g>
<g >
<title>pmemobj_pool_by_ptr (21 samples, 0.02%)</title><rect x="470.3" y="149" width="0.2" height="15.0" fill="rgb(225,120,32)" rx="2" ry="2" />
<text  x="473.26" y="159.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (470 samples, 0.42%)</title><rect x="263.0" y="245" width="5.0" height="15.0" fill="rgb(251,137,18)" rx="2" ry="2" />
<text  x="265.98" y="255.5" ></text>
</g>
<g >
<title>_int_malloc (48 samples, 0.04%)</title><rect x="1143.7" y="597" width="0.5" height="15.0" fill="rgb(225,37,46)" rx="2" ry="2" />
<text  x="1146.69" y="607.5" ></text>
</g>
<g >
<title>std::operator&amp; (13 samples, 0.01%)</title><rect x="734.3" y="309" width="0.1" height="15.0" fill="rgb(223,19,47)" rx="2" ry="2" />
<text  x="737.31" y="319.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (35 samples, 0.03%)</title><rect x="903.0" y="133" width="0.4" height="15.0" fill="rgb(244,25,6)" rx="2" ry="2" />
<text  x="906.02" y="143.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Get (3,929 samples, 3.55%)</title><rect x="978.9" y="293" width="41.9" height="15.0" fill="rgb(205,128,50)" rx="2" ry="2" />
<text  x="981.92" y="303.5" >scy..</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (75 samples, 0.07%)</title><rect x="943.8" y="133" width="0.7" height="15.0" fill="rgb(247,37,12)" rx="2" ry="2" />
<text  x="946.75" y="143.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (88 samples, 0.08%)</title><rect x="890.9" y="149" width="0.9" height="15.0" fill="rgb(238,59,1)" rx="2" ry="2" />
<text  x="893.88" y="159.5" ></text>
</g>
<g >
<title>ycsbc::Client::TransactionRead (8,975 samples, 8.10%)</title><rect x="975.8" y="325" width="95.6" height="15.0" fill="rgb(227,176,6)" rx="2" ry="2" />
<text  x="978.85" y="335.5" >ycsbc::Clie..</text>
</g>
<g >
<title>std::__detail::__mod&lt;unsigned long, 2147483647ul, 16807ul, 0ul&gt; (11 samples, 0.01%)</title><rect x="1070.8" y="149" width="0.1" height="15.0" fill="rgb(220,154,18)" rx="2" ry="2" />
<text  x="1073.82" y="159.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::Process (71,012 samples, 64.09%)</title><rect x="35.4" y="373" width="756.2" height="15.0" fill="rgb(214,182,5)" rx="2" ry="2" />
<text  x="38.37" y="383.5" >scythedb::(anonymous namespace)::NVMBlockProcessor::Process</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (108 samples, 0.10%)</title><rect x="222.5" y="277" width="1.1" height="15.0" fill="rgb(245,58,11)" rx="2" ry="2" />
<text  x="225.49" y="287.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (41 samples, 0.04%)</title><rect x="252.6" y="165" width="0.5" height="15.0" fill="rgb(227,116,18)" rx="2" ry="2" />
<text  x="255.62" y="175.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (10 samples, 0.01%)</title><rect x="1017.8" y="85" width="0.1" height="15.0" fill="rgb(247,125,32)" rx="2" ry="2" />
<text  x="1020.78" y="95.5" ></text>
</g>
<g >
<title>std::function&lt;void  (13 samples, 0.01%)</title><rect x="892.1" y="149" width="0.1" height="15.0" fill="rgb(219,173,29)" rx="2" ry="2" />
<text  x="895.11" y="159.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::EncodeMessageField (1,394 samples, 1.26%)</title><rect x="853.5" y="277" width="14.8" height="15.0" fill="rgb(234,50,15)" rx="2" ry="2" />
<text  x="856.49" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (11 samples, 0.01%)</title><rect x="952.8" y="245" width="0.1" height="15.0" fill="rgb(226,27,6)" rx="2" ry="2" />
<text  x="955.77" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (11 samples, 0.01%)</title><rect x="930.7" y="293" width="0.2" height="15.0" fill="rgb(226,116,16)" rx="2" ry="2" />
<text  x="933.75" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (22 samples, 0.02%)</title><rect x="924.7" y="277" width="0.2" height="15.0" fill="rgb(242,133,25)" rx="2" ry="2" />
<text  x="927.71" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (63 samples, 0.06%)</title><rect x="490.3" y="293" width="0.7" height="15.0" fill="rgb(213,11,40)" rx="2" ry="2" />
<text  x="493.30" y="303.5" ></text>
</g>
<g >
<title>__pthread_enable_asynccancel (25 samples, 0.02%)</title><rect x="1130.9" y="597" width="0.3" height="15.0" fill="rgb(248,204,0)" rx="2" ry="2" />
<text  x="1133.92" y="607.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (72,224 samples, 65.18%)</title><rect x="28.4" y="437" width="769.2" height="15.0" fill="rgb(209,25,52)" rx="2" ry="2" />
<text  x="31.43" y="447.5" >std::_Bind&lt;void </text>
</g>
<g >
<title>std::forward&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (29 samples, 0.03%)</title><rect x="935.4" y="293" width="0.3" height="15.0" fill="rgb(225,130,11)" rx="2" ry="2" />
<text  x="938.37" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::add_data_to_tx (91 samples, 0.08%)</title><rect x="241.5" y="85" width="1.0" height="15.0" fill="rgb(243,90,43)" rx="2" ry="2" />
<text  x="244.50" y="95.5" ></text>
</g>
<g >
<title>moodycamel::details::_hash_32_or_64&lt;true&gt;::hash (10 samples, 0.01%)</title><rect x="1002.6" y="197" width="0.1" height="15.0" fill="rgb(241,223,16)" rx="2" ry="2" />
<text  x="1005.61" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;void  (174 samples, 0.16%)</title><rect x="869.3" y="261" width="1.8" height="15.0" fill="rgb(209,205,48)" rx="2" ry="2" />
<text  x="872.26" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (133 samples, 0.12%)</title><rect x="1019.1" y="117" width="1.4" height="15.0" fill="rgb(248,212,20)" rx="2" ry="2" />
<text  x="1022.05" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (13 samples, 0.01%)</title><rect x="1055.6" y="213" width="0.2" height="15.0" fill="rgb(237,81,16)" rx="2" ry="2" />
<text  x="1058.62" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (35 samples, 0.03%)</title><rect x="957.4" y="229" width="0.4" height="15.0" fill="rgb(221,221,25)" rx="2" ry="2" />
<text  x="960.42" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (167 samples, 0.15%)</title><rect x="959.4" y="261" width="1.8" height="15.0" fill="rgb(210,27,33)" rx="2" ry="2" />
<text  x="962.43" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_end (10 samples, 0.01%)</title><rect x="248.7" y="277" width="0.1" height="15.0" fill="rgb(242,140,12)" rx="2" ry="2" />
<text  x="251.68" y="287.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (464 samples, 0.42%)</title><rect x="998.3" y="245" width="5.0" height="15.0" fill="rgb(247,206,14)" rx="2" ry="2" />
<text  x="1001.32" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (16 samples, 0.01%)</title><rect x="222.2" y="261" width="0.2" height="15.0" fill="rgb(223,96,34)" rx="2" ry="2" />
<text  x="225.25" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (15 samples, 0.01%)</title><rect x="1008.7" y="117" width="0.2" height="15.0" fill="rgb(245,30,0)" rx="2" ry="2" />
<text  x="1011.74" y="127.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase*&gt;::load (104 samples, 0.09%)</title><rect x="733.3" y="325" width="1.1" height="15.0" fill="rgb(232,22,22)" rx="2" ry="2" />
<text  x="736.34" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10 samples, 0.01%)</title><rect x="958.4" y="245" width="0.1" height="15.0" fill="rgb(208,156,16)" rx="2" ry="2" />
<text  x="961.40" y="255.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (41 samples, 0.04%)</title><rect x="812.7" y="501" width="0.4" height="15.0" fill="rgb(211,97,2)" rx="2" ry="2" />
<text  x="815.67" y="511.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (52 samples, 0.05%)</title><rect x="1059.9" y="181" width="0.5" height="15.0" fill="rgb(242,156,41)" rx="2" ry="2" />
<text  x="1062.86" y="191.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (19 samples, 0.02%)</title><rect x="352.1" y="245" width="0.2" height="15.0" fill="rgb(229,130,19)" rx="2" ry="2" />
<text  x="355.07" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (39 samples, 0.04%)</title><rect x="1069.2" y="213" width="0.4" height="15.0" fill="rgb(234,117,46)" rx="2" ry="2" />
<text  x="1072.21" y="223.5" ></text>
</g>
<g >
<title>std::__invoke_impl&lt;void, void  (14 samples, 0.01%)</title><rect x="794.2" y="405" width="0.2" height="15.0" fill="rgb(235,220,44)" rx="2" ry="2" />
<text  x="797.21" y="415.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (28 samples, 0.03%)</title><rect x="234.6" y="245" width="0.3" height="15.0" fill="rgb(232,14,44)" rx="2" ry="2" />
<text  x="237.56" y="255.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (844 samples, 0.76%)</title><rect x="894.9" y="245" width="9.0" height="15.0" fill="rgb(237,157,34)" rx="2" ry="2" />
<text  x="897.91" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::FindGreaterOrEqual (14,725 samples, 13.29%)</title><rect x="46.3" y="309" width="156.8" height="15.0" fill="rgb(232,36,18)" rx="2" ry="2" />
<text  x="49.28" y="319.5" >scythedb::NVMSkipLis..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (134 samples, 0.12%)</title><rect x="906.3" y="325" width="1.4" height="15.0" fill="rgb(218,96,15)" rx="2" ry="2" />
<text  x="909.26" y="335.5" ></text>
</g>
<g >
<title>ulog_entry_size (10 samples, 0.01%)</title><rect x="1117.3" y="581" width="0.1" height="15.0" fill="rgb(249,12,19)" rx="2" ry="2" />
<text  x="1120.27" y="591.5" ></text>
</g>
<g >
<title>ulog_free_next (447 samples, 0.40%)</title><rect x="832.2" y="565" width="4.8" height="15.0" fill="rgb(228,92,50)" rx="2" ry="2" />
<text  x="835.24" y="575.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (14 samples, 0.01%)</title><rect x="492.0" y="325" width="0.1" height="15.0" fill="rgb(237,126,49)" rx="2" ry="2" />
<text  x="494.99" y="335.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::enqueue&lt; (360 samples, 0.32%)</title><rect x="998.3" y="229" width="3.9" height="15.0" fill="rgb(234,150,50)" rx="2" ry="2" />
<text  x="1001.34" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (31 samples, 0.03%)</title><rect x="961.4" y="277" width="0.3" height="15.0" fill="rgb(254,0,36)" rx="2" ry="2" />
<text  x="964.37" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (21 samples, 0.02%)</title><rect x="942.8" y="165" width="0.2" height="15.0" fill="rgb(219,192,41)" rx="2" ry="2" />
<text  x="945.77" y="175.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (122 samples, 0.11%)</title><rect x="1037.3" y="261" width="1.3" height="15.0" fill="rgb(236,21,23)" rx="2" ry="2" />
<text  x="1040.33" y="271.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (22 samples, 0.02%)</title><rect x="471.8" y="245" width="0.2" height="15.0" fill="rgb(236,190,29)" rx="2" ry="2" />
<text  x="474.81" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (12 samples, 0.01%)</title><rect x="950.7" y="293" width="0.1" height="15.0" fill="rgb(246,85,49)" rx="2" ry="2" />
<text  x="953.65" y="303.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoTransaction (17 samples, 0.02%)</title><rect x="839.9" y="357" width="0.2" height="15.0" fill="rgb(242,183,40)" rx="2" ry="2" />
<text  x="842.93" y="367.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::get (42 samples, 0.04%)</title><rect x="244.4" y="117" width="0.4" height="15.0" fill="rgb(216,155,18)" rx="2" ry="2" />
<text  x="247.40" y="127.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (15 samples, 0.01%)</title><rect x="990.9" y="213" width="0.1" height="15.0" fill="rgb(230,59,53)" rx="2" ry="2" />
<text  x="993.88" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (71 samples, 0.06%)</title><rect x="986.0" y="213" width="0.8" height="15.0" fill="rgb(220,157,41)" rx="2" ry="2" />
<text  x="989.03" y="223.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::inner_enqueue&lt; (596 samples, 0.54%)</title><rect x="878.8" y="261" width="6.4" height="15.0" fill="rgb(230,225,8)" rx="2" ry="2" />
<text  x="881.81" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (51 samples, 0.05%)</title><rect x="238.2" y="197" width="0.5" height="15.0" fill="rgb(242,178,24)" rx="2" ry="2" />
<text  x="241.19" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (61 samples, 0.06%)</title><rect x="1046.2" y="245" width="0.6" height="15.0" fill="rgb(232,3,43)" rx="2" ry="2" />
<text  x="1049.16" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::SetPersistNext (175 samples, 0.16%)</title><rect x="253.3" y="213" width="1.9" height="15.0" fill="rgb(223,116,1)" rx="2" ry="2" />
<text  x="256.30" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (185 samples, 0.17%)</title><rect x="962.7" y="277" width="2.0" height="15.0" fill="rgb(231,217,34)" rx="2" ry="2" />
<text  x="965.70" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (263 samples, 0.24%)</title><rect x="492.2" y="293" width="2.8" height="15.0" fill="rgb(210,19,30)" rx="2" ry="2" />
<text  x="495.23" y="303.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (425 samples, 0.38%)</title><rect x="1006.5" y="245" width="4.5" height="15.0" fill="rgb(230,109,31)" rx="2" ry="2" />
<text  x="1009.49" y="255.5" ></text>
</g>
<g >
<title>_IO_vsnprintf (31 samples, 0.03%)</title><rect x="964.8" y="277" width="0.4" height="15.0" fill="rgb(242,92,34)" rx="2" ry="2" />
<text  x="967.83" y="287.5" ></text>
</g>
<g >
<title>std::atomic&lt;ycsbc::Operation&gt;::store (65 samples, 0.06%)</title><rect x="1073.0" y="277" width="0.7" height="15.0" fill="rgb(218,106,2)" rx="2" ry="2" />
<text  x="1076.05" y="287.5" ></text>
</g>
<g >
<title>malloc (10 samples, 0.01%)</title><rect x="893.2" y="181" width="0.1" height="15.0" fill="rgb(238,39,51)" rx="2" ry="2" />
<text  x="896.19" y="191.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMSkipList::Insert (10 samples, 0.01%)</title><rect x="476.7" y="245" width="0.1" height="15.0" fill="rgb(210,70,14)" rx="2" ry="2" />
<text  x="479.69" y="255.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (7,275 samples, 6.57%)</title><rect x="359.2" y="165" width="77.5" height="15.0" fill="rgb(231,56,28)" rx="2" ry="2" />
<text  x="362.19" y="175.5" >scythedb..</text>
</g>
<g >
<title>__sched_yield (4,167 samples, 3.76%)</title><rect x="747.1" y="341" width="44.4" height="15.0" fill="rgb(228,99,23)" rx="2" ry="2" />
<text  x="750.11" y="351.5" >__sc..</text>
</g>
<g >
<title>std::function&lt;void  (73 samples, 0.07%)</title><rect x="798.8" y="485" width="0.8" height="15.0" fill="rgb(235,10,39)" rx="2" ry="2" />
<text  x="801.79" y="495.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (142 samples, 0.13%)</title><rect x="1045.7" y="293" width="1.5" height="15.0" fill="rgb(247,43,17)" rx="2" ry="2" />
<text  x="1048.73" y="303.5" ></text>
</g>
<g >
<title>scythedb::Hash64 (166 samples, 0.15%)</title><rect x="994.6" y="245" width="1.7" height="15.0" fill="rgb(209,42,47)" rx="2" ry="2" />
<text  x="997.56" y="255.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="974.3" y="293" width="0.1" height="15.0" fill="rgb(223,103,50)" rx="2" ry="2" />
<text  x="977.27" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (13 samples, 0.01%)</title><rect x="1048.8" y="293" width="0.2" height="15.0" fill="rgb(207,201,49)" rx="2" ry="2" />
<text  x="1051.82" y="303.5" ></text>
</g>
<g >
<title>std::__future_base::_Task_setter&lt;std::unique_ptr&lt;std::__future_base::_Result&lt;int&gt;, std::__future_base::_Result_base::_Deleter&gt;, std::thread::_Invoker&lt;std::tuple&lt;int  (22,775 samples, 20.55%)</title><rect x="839.7" y="437" width="242.5" height="15.0" fill="rgb(238,20,34)" rx="2" ry="2" />
<text  x="842.69" y="447.5" >std::__future_base::_Task_setter..</text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (14 samples, 0.01%)</title><rect x="353.0" y="229" width="0.1" height="15.0" fill="rgb(215,165,40)" rx="2" ry="2" />
<text  x="355.99" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (708 samples, 0.64%)</title><rect x="481.8" y="293" width="7.5" height="15.0" fill="rgb(206,127,19)" rx="2" ry="2" />
<text  x="484.81" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (19 samples, 0.02%)</title><rect x="929.6" y="213" width="0.2" height="15.0" fill="rgb(254,13,0)" rx="2" ry="2" />
<text  x="932.61" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (14 samples, 0.01%)</title><rect x="483.4" y="245" width="0.1" height="15.0" fill="rgb(215,77,33)" rx="2" ry="2" />
<text  x="486.36" y="255.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (91 samples, 0.08%)</title><rect x="1004.1" y="261" width="1.0" height="15.0" fill="rgb(207,213,37)" rx="2" ry="2" />
<text  x="1007.10" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (15 samples, 0.01%)</title><rect x="854.6" y="213" width="0.2" height="15.0" fill="rgb(217,219,35)" rx="2" ry="2" />
<text  x="857.65" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::back (13 samples, 0.01%)</title><rect x="1042.0" y="277" width="0.2" height="15.0" fill="rgb(216,58,43)" rx="2" ry="2" />
<text  x="1045.04" y="287.5" ></text>
</g>
<g >
<title>vfprintf (25 samples, 0.02%)</title><rect x="837.0" y="565" width="0.3" height="15.0" fill="rgb(215,23,42)" rx="2" ry="2" />
<text  x="840.02" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (265 samples, 0.24%)</title><rect x="860.7" y="213" width="2.8" height="15.0" fill="rgb(225,112,13)" rx="2" ry="2" />
<text  x="863.66" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (11 samples, 0.01%)</title><rect x="956.1" y="277" width="0.1" height="15.0" fill="rgb(226,48,52)" rx="2" ry="2" />
<text  x="959.05" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (47 samples, 0.04%)</title><rect x="249.5" y="261" width="0.5" height="15.0" fill="rgb(238,186,19)" rx="2" ry="2" />
<text  x="252.54" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23 samples, 0.02%)</title><rect x="1017.7" y="117" width="0.2" height="15.0" fill="rgb(240,226,19)" rx="2" ry="2" />
<text  x="1020.68" y="127.5" ></text>
</g>
<g >
<title>std::_Function_base::_Function_base (13 samples, 0.01%)</title><rect x="885.4" y="293" width="0.1" height="15.0" fill="rgb(239,209,17)" rx="2" ry="2" />
<text  x="888.36" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::vector&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; &gt;::back (78 samples, 0.07%)</title><rect x="244.2" y="149" width="0.9" height="15.0" fill="rgb(252,97,30)" rx="2" ry="2" />
<text  x="247.24" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_length (13 samples, 0.01%)</title><rect x="957.6" y="213" width="0.1" height="15.0" fill="rgb(221,179,3)" rx="2" ry="2" />
<text  x="960.60" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (139 samples, 0.13%)</title><rect x="219.9" y="261" width="1.5" height="15.0" fill="rgb(237,82,46)" rx="2" ry="2" />
<text  x="222.90" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (18 samples, 0.02%)</title><rect x="907.4" y="277" width="0.2" height="15.0" fill="rgb(227,152,34)" rx="2" ry="2" />
<text  x="910.44" y="287.5" ></text>
</g>
<g >
<title>[unknown] (153 samples, 0.14%)</title><rect x="1117.8" y="549" width="1.7" height="15.0" fill="rgb(205,215,38)" rx="2" ry="2" />
<text  x="1120.85" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (120 samples, 0.11%)</title><rect x="932.7" y="293" width="1.3" height="15.0" fill="rgb(213,183,27)" rx="2" ry="2" />
<text  x="935.72" y="303.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (13 samples, 0.01%)</title><rect x="957.9" y="197" width="0.2" height="15.0" fill="rgb(212,46,19)" rx="2" ry="2" />
<text  x="960.93" y="207.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (14 samples, 0.01%)</title><rect x="483.2" y="229" width="0.2" height="15.0" fill="rgb(253,28,18)" rx="2" ry="2" />
<text  x="486.21" y="239.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (16 samples, 0.01%)</title><rect x="955.8" y="261" width="0.2" height="15.0" fill="rgb(244,102,19)" rx="2" ry="2" />
<text  x="958.80" y="271.5" ></text>
</g>
<g >
<title>scythedb::InternalNode::InternalNode (16 samples, 0.01%)</title><rect x="464.4" y="229" width="0.2" height="15.0" fill="rgb(226,135,34)" rx="2" ry="2" />
<text  x="467.43" y="239.5" ></text>
</g>
<g >
<title>std::swap&lt;void  (36 samples, 0.03%)</title><rect x="870.7" y="245" width="0.4" height="15.0" fill="rgb(245,10,27)" rx="2" ry="2" />
<text  x="873.73" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (106 samples, 0.10%)</title><rect x="1027.4" y="213" width="1.1" height="15.0" fill="rgb(218,172,24)" rx="2" ry="2" />
<text  x="1030.37" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::NVMBlock (14 samples, 0.01%)</title><rect x="118.1" y="261" width="0.2" height="15.0" fill="rgb(220,8,25)" rx="2" ry="2" />
<text  x="121.12" y="271.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (11 samples, 0.01%)</title><rect x="866.7" y="165" width="0.1" height="15.0" fill="rgb(253,213,25)" rx="2" ry="2" />
<text  x="869.70" y="175.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (18 samples, 0.02%)</title><rect x="224.7" y="277" width="0.2" height="15.0" fill="rgb(229,67,48)" rx="2" ry="2" />
<text  x="227.73" y="287.5" ></text>
</g>
<g >
<title>run_get_data_start (16 samples, 0.01%)</title><rect x="1115.3" y="581" width="0.1" height="15.0" fill="rgb(250,96,44)" rx="2" ry="2" />
<text  x="1118.25" y="591.5" ></text>
</g>
<g >
<title>palloc_exec_actions (19 samples, 0.02%)</title><rect x="1166.7" y="597" width="0.2" height="15.0" fill="rgb(243,104,38)" rx="2" ry="2" />
<text  x="1169.67" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (218 samples, 0.20%)</title><rect x="900.1" y="165" width="2.3" height="15.0" fill="rgb(205,194,21)" rx="2" ry="2" />
<text  x="903.08" y="175.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (39 samples, 0.04%)</title><rect x="793.6" y="389" width="0.4" height="15.0" fill="rgb(229,172,9)" rx="2" ry="2" />
<text  x="796.57" y="399.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (216 samples, 0.19%)</title><rect x="1023.3" y="293" width="2.3" height="15.0" fill="rgb(232,164,18)" rx="2" ry="2" />
<text  x="1026.33" y="303.5" ></text>
</g>
<g >
<title>std::_Tuple_impl&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt;::_M_head (16 samples, 0.01%)</title><rect x="795.1" y="389" width="0.2" height="15.0" fill="rgb(235,203,21)" rx="2" ry="2" />
<text  x="798.10" y="399.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (11 samples, 0.01%)</title><rect x="1007.6" y="197" width="0.1" height="15.0" fill="rgb(233,85,7)" rx="2" ry="2" />
<text  x="1010.63" y="207.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (10 samples, 0.01%)</title><rect x="497.0" y="341" width="0.1" height="15.0" fill="rgb(207,78,5)" rx="2" ry="2" />
<text  x="500.04" y="351.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::param_type::b (14 samples, 0.01%)</title><rect x="1081.7" y="245" width="0.2" height="15.0" fill="rgb(236,74,29)" rx="2" ry="2" />
<text  x="1084.70" y="255.5" ></text>
</g>
<g >
<title>std::operator==&lt;scythedb::Slice*&gt; (17 samples, 0.02%)</title><rect x="44.2" y="197" width="0.2" height="15.0" fill="rgb(214,37,40)" rx="2" ry="2" />
<text  x="47.22" y="207.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (312 samples, 0.28%)</title><rect x="199.5" y="293" width="3.4" height="15.0" fill="rgb(242,207,14)" rx="2" ry="2" />
<text  x="202.54" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (17 samples, 0.02%)</title><rect x="478.8" y="245" width="0.2" height="15.0" fill="rgb(240,100,5)" rx="2" ry="2" />
<text  x="481.83" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (217 samples, 0.20%)</title><rect x="1059.0" y="261" width="2.3" height="15.0" fill="rgb(246,52,40)" rx="2" ry="2" />
<text  x="1062.01" y="271.5" ></text>
</g>
<g >
<title>moodycamel::details::hash_thread_id (15 samples, 0.01%)</title><rect x="1002.6" y="213" width="0.2" height="15.0" fill="rgb(221,149,17)" rx="2" ry="2" />
<text  x="1005.60" y="223.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Add (17 samples, 0.02%)</title><rect x="869.5" y="245" width="0.2" height="15.0" fill="rgb(222,9,15)" rx="2" ry="2" />
<text  x="872.54" y="255.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Next (747 samples, 0.67%)</title><rect x="1063.3" y="261" width="8.0" height="15.0" fill="rgb(231,2,37)" rx="2" ry="2" />
<text  x="1066.33" y="271.5" ></text>
</g>
<g >
<title>operation_finish (20 samples, 0.02%)</title><rect x="825.7" y="565" width="0.2" height="15.0" fill="rgb(215,188,23)" rx="2" ry="2" />
<text  x="828.69" y="575.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy_a&lt;std::move_iterator&lt;scythedb::Slice*&gt;, scythedb::Slice*, scythedb::Slice&gt; (34 samples, 0.03%)</title><rect x="44.0" y="261" width="0.4" height="15.0" fill="rgb(209,89,21)" rx="2" ry="2" />
<text  x="47.05" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::AllocateAligned (38 samples, 0.03%)</title><rect x="472.2" y="229" width="0.4" height="15.0" fill="rgb(247,54,45)" rx="2" ry="2" />
<text  x="475.19" y="239.5" ></text>
</g>
<g >
<title>std::function&lt;void  (244 samples, 0.22%)</title><rect x="885.8" y="293" width="2.6" height="15.0" fill="rgb(213,199,34)" rx="2" ry="2" />
<text  x="888.75" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (14 samples, 0.01%)</title><rect x="958.6" y="277" width="0.2" height="15.0" fill="rgb(228,128,35)" rx="2" ry="2" />
<text  x="961.63" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (33 samples, 0.03%)</title><rect x="1035.0" y="277" width="0.4" height="15.0" fill="rgb(224,75,53)" rx="2" ry="2" />
<text  x="1038.03" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (75 samples, 0.07%)</title><rect x="1078.8" y="277" width="0.8" height="15.0" fill="rgb(217,69,19)" rx="2" ry="2" />
<text  x="1081.81" y="287.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (139 samples, 0.13%)</title><rect x="451.9" y="149" width="1.5" height="15.0" fill="rgb(231,51,13)" rx="2" ry="2" />
<text  x="454.94" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (53 samples, 0.05%)</title><rect x="1022.5" y="309" width="0.5" height="15.0" fill="rgb(216,72,30)" rx="2" ry="2" />
<text  x="1025.48" y="319.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (20 samples, 0.02%)</title><rect x="990.2" y="245" width="0.3" height="15.0" fill="rgb(241,114,16)" rx="2" ry="2" />
<text  x="993.25" y="255.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (266 samples, 0.24%)</title><rect x="252.3" y="229" width="2.9" height="15.0" fill="rgb(241,0,8)" rx="2" ry="2" />
<text  x="255.33" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (273 samples, 0.25%)</title><rect x="889.5" y="213" width="2.9" height="15.0" fill="rgb(207,81,35)" rx="2" ry="2" />
<text  x="892.47" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (337 samples, 0.30%)</title><rect x="941.6" y="213" width="3.6" height="15.0" fill="rgb(215,46,47)" rx="2" ry="2" />
<text  x="944.57" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (10 samples, 0.01%)</title><rect x="479.4" y="277" width="0.1" height="15.0" fill="rgb(242,6,28)" rx="2" ry="2" />
<text  x="482.44" y="287.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator@plt (27 samples, 0.02%)</title><rect x="1009.4" y="117" width="0.3" height="15.0" fill="rgb(249,16,20)" rx="2" ry="2" />
<text  x="1012.38" y="127.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (155 samples, 0.14%)</title><rect x="883.4" y="245" width="1.6" height="15.0" fill="rgb(244,116,15)" rx="2" ry="2" />
<text  x="886.38" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (10 samples, 0.01%)</title><rect x="839.6" y="581" width="0.1" height="15.0" fill="rgb(232,79,47)" rx="2" ry="2" />
<text  x="842.59" y="591.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (221 samples, 0.20%)</title><rect x="1042.8" y="277" width="2.3" height="15.0" fill="rgb(236,73,41)" rx="2" ry="2" />
<text  x="1045.76" y="287.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (547 samples, 0.49%)</title><rect x="897.9" y="229" width="5.8" height="15.0" fill="rgb(225,122,52)" rx="2" ry="2" />
<text  x="900.86" y="239.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block::set_empty&lt; (173 samples, 0.16%)</title><rect x="532.9" y="293" width="1.8" height="15.0" fill="rgb(244,48,47)" rx="2" ry="2" />
<text  x="535.87" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (16 samples, 0.01%)</title><rect x="901.8" y="101" width="0.2" height="15.0" fill="rgb(217,145,54)" rx="2" ry="2" />
<text  x="904.80" y="111.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (29 samples, 0.03%)</title><rect x="175.8" y="213" width="0.3" height="15.0" fill="rgb(237,135,19)" rx="2" ry="2" />
<text  x="178.78" y="223.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (22,775 samples, 20.55%)</title><rect x="839.7" y="405" width="242.5" height="15.0" fill="rgb(218,59,23)" rx="2" ry="2" />
<text  x="842.69" y="415.5" >std::thread::_Invoker&lt;std::tuple..</text>
</g>
<g >
<title>_IO_str_init_static_internal (12 samples, 0.01%)</title><rect x="1117.9" y="517" width="0.1" height="15.0" fill="rgb(205,147,20)" rx="2" ry="2" />
<text  x="1120.90" y="527.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::Slice&gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="496.3" y="293" width="0.3" height="15.0" fill="rgb(250,87,37)" rx="2" ry="2" />
<text  x="499.33" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::operator (28 samples, 0.03%)</title><rect x="468.4" y="245" width="0.3" height="15.0" fill="rgb(229,153,29)" rx="2" ry="2" />
<text  x="471.40" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_get_block_from_free_list (12 samples, 0.01%)</title><rect x="881.0" y="213" width="0.1" height="15.0" fill="rgb(209,63,25)" rx="2" ry="2" />
<text  x="883.98" y="223.5" ></text>
</g>
<g >
<title>scythedb::Hash64 (235 samples, 0.21%)</title><rect x="874.4" y="261" width="2.5" height="15.0" fill="rgb(229,153,45)" rx="2" ry="2" />
<text  x="877.39" y="271.5" ></text>
</g>
<g >
<title>operator delete (25 samples, 0.02%)</title><rect x="211.3" y="277" width="0.3" height="15.0" fill="rgb(227,25,40)" rx="2" ry="2" />
<text  x="214.33" y="287.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::NextTable[abi:cxx11] (207 samples, 0.19%)</title><rect x="972.4" y="325" width="2.2" height="15.0" fill="rgb(245,114,12)" rx="2" ry="2" />
<text  x="975.37" y="335.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (652 samples, 0.59%)</title><rect x="182.6" y="197" width="7.0" height="15.0" fill="rgb(232,76,52)" rx="2" ry="2" />
<text  x="185.64" y="207.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (10 samples, 0.01%)</title><rect x="958.9" y="261" width="0.1" height="15.0" fill="rgb(239,133,29)" rx="2" ry="2" />
<text  x="961.88" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (19 samples, 0.02%)</title><rect x="891.1" y="133" width="0.2" height="15.0" fill="rgb(234,98,48)" rx="2" ry="2" />
<text  x="894.10" y="143.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (57 samples, 0.05%)</title><rect x="436.7" y="165" width="0.6" height="15.0" fill="rgb(236,194,2)" rx="2" ry="2" />
<text  x="439.66" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (343 samples, 0.31%)</title><rect x="965.8" y="245" width="3.7" height="15.0" fill="rgb(250,165,43)" rx="2" ry="2" />
<text  x="968.83" y="255.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (26 samples, 0.02%)</title><rect x="1015.8" y="197" width="0.2" height="15.0" fill="rgb(245,142,43)" rx="2" ry="2" />
<text  x="1018.76" y="207.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (132 samples, 0.12%)</title><rect x="21.2" y="437" width="1.4" height="15.0" fill="rgb(218,202,6)" rx="2" ry="2" />
<text  x="24.22" y="447.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (10 samples, 0.01%)</title><rect x="932.8" y="277" width="0.1" height="15.0" fill="rgb(215,201,43)" rx="2" ry="2" />
<text  x="935.80" y="287.5" ></text>
</g>
<g >
<title>std::__addressof&lt;scythedb::NVMBlock::NVMBlock (22 samples, 0.02%)</title><rect x="198.0" y="229" width="0.2" height="15.0" fill="rgb(227,28,19)" rx="2" ry="2" />
<text  x="200.95" y="239.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::~pair (187 samples, 0.17%)</title><rect x="1043.0" y="229" width="2.0" height="15.0" fill="rgb(211,156,18)" rx="2" ry="2" />
<text  x="1046.03" y="239.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (134 samples, 0.12%)</title><rect x="1000.7" y="165" width="1.5" height="15.0" fill="rgb(205,188,16)" rx="2" ry="2" />
<text  x="1003.75" y="175.5" ></text>
</g>
<g >
<title>__lll_unlock_wake (396 samples, 0.36%)</title><rect x="846.1" y="293" width="4.2" height="15.0" fill="rgb(249,125,15)" rx="2" ry="2" />
<text  x="849.11" y="303.5" ></text>
</g>
<g >
<title>std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt;::operator (20 samples, 0.02%)</title><rect x="1070.7" y="165" width="0.2" height="15.0" fill="rgb(229,86,36)" rx="2" ry="2" />
<text  x="1073.73" y="175.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (22 samples, 0.02%)</title><rect x="54.7" y="277" width="0.2" height="15.0" fill="rgb(241,68,52)" rx="2" ry="2" />
<text  x="57.70" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (107 samples, 0.10%)</title><rect x="972.9" y="293" width="1.1" height="15.0" fill="rgb(218,91,46)" rx="2" ry="2" />
<text  x="975.90" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_deallocate (32 samples, 0.03%)</title><rect x="496.3" y="309" width="0.3" height="15.0" fill="rgb(209,167,10)" rx="2" ry="2" />
<text  x="499.26" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy_chars (393 samples, 0.35%)</title><rect x="1029.0" y="213" width="4.2" height="15.0" fill="rgb(217,54,54)" rx="2" ry="2" />
<text  x="1031.97" y="223.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase*&gt;::load (14 samples, 0.01%)</title><rect x="738.8" y="341" width="0.2" height="15.0" fill="rgb(206,187,49)" rx="2" ry="2" />
<text  x="741.84" y="351.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (75 samples, 0.07%)</title><rect x="862.6" y="197" width="0.8" height="15.0" fill="rgb(224,213,20)" rx="2" ry="2" />
<text  x="865.58" y="207.5" ></text>
</g>
<g >
<title>__gnu_cxx::__normal_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt;::base (19 samples, 0.02%)</title><rect x="934.5" y="293" width="0.2" height="15.0" fill="rgb(215,105,34)" rx="2" ry="2" />
<text  x="937.51" y="303.5" ></text>
</g>
<g >
<title>std::_Function_base::~_Function_base (214 samples, 0.19%)</title><rect x="1018.2" y="133" width="2.3" height="15.0" fill="rgb(234,101,48)" rx="2" ry="2" />
<text  x="1021.19" y="143.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::lock_guard (328 samples, 0.30%)</title><rect x="1064.0" y="245" width="3.5" height="15.0" fill="rgb(229,127,19)" rx="2" ry="2" />
<text  x="1066.98" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (21 samples, 0.02%)</title><rect x="921.2" y="245" width="0.2" height="15.0" fill="rgb(220,142,51)" rx="2" ry="2" />
<text  x="924.17" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::_M_realloc_insert&lt;scythedb::Slice&gt; (214 samples, 0.19%)</title><rect x="42.8" y="293" width="2.3" height="15.0" fill="rgb(212,92,8)" rx="2" ry="2" />
<text  x="45.82" y="303.5" ></text>
</g>
<g >
<title>_int_free (972 samples, 0.88%)</title><rect x="1133.3" y="597" width="10.4" height="15.0" fill="rgb(211,31,36)" rx="2" ry="2" />
<text  x="1136.33" y="607.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::requisition_block&lt; (15 samples, 0.01%)</title><rect x="1000.2" y="213" width="0.2" height="15.0" fill="rgb(226,33,3)" rx="2" ry="2" />
<text  x="1003.21" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateAligned (684 samples, 0.62%)</title><rect x="465.7" y="261" width="7.3" height="15.0" fill="rgb(218,17,19)" rx="2" ry="2" />
<text  x="468.75" y="271.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (14 samples, 0.01%)</title><rect x="796.9" y="421" width="0.1" height="15.0" fill="rgb(240,139,0)" rx="2" ry="2" />
<text  x="799.86" y="431.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (69 samples, 0.06%)</title><rect x="912.1" y="309" width="0.7" height="15.0" fill="rgb(243,144,31)" rx="2" ry="2" />
<text  x="915.06" y="319.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~_Vector_base (39 samples, 0.04%)</title><rect x="1045.2" y="293" width="0.4" height="15.0" fill="rgb(217,119,37)" rx="2" ry="2" />
<text  x="1048.18" y="303.5" ></text>
</g>
<g >
<title>pmem_memcpy (10 samples, 0.01%)</title><rect x="1163.0" y="581" width="0.1" height="15.0" fill="rgb(253,162,39)" rx="2" ry="2" />
<text  x="1166.04" y="591.5" ></text>
</g>
<g >
<title>_IO_default_xsputn (111 samples, 0.10%)</title><rect x="1119.5" y="597" width="1.2" height="15.0" fill="rgb(224,16,8)" rx="2" ry="2" />
<text  x="1122.48" y="607.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::DecodeMessageField (471 samples, 0.43%)</title><rect x="40.3" y="341" width="5.0" height="15.0" fill="rgb(210,193,14)" rx="2" ry="2" />
<text  x="43.26" y="351.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (28 samples, 0.03%)</title><rect x="30.7" y="389" width="0.3" height="15.0" fill="rgb(231,24,44)" rx="2" ry="2" />
<text  x="33.72" y="399.5" ></text>
</g>
<g >
<title>std::operator==&lt;scythedb::Slice*&gt; (25 samples, 0.02%)</title><rect x="231.5" y="197" width="0.2" height="15.0" fill="rgb(233,65,31)" rx="2" ry="2" />
<text  x="234.48" y="207.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::~_Vector_base (41 samples, 0.04%)</title><rect x="224.6" y="325" width="0.4" height="15.0" fill="rgb(222,13,48)" rx="2" ry="2" />
<text  x="227.60" y="335.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (97 samples, 0.09%)</title><rect x="1016.6" y="101" width="1.1" height="15.0" fill="rgb(234,167,12)" rx="2" ry="2" />
<text  x="1019.65" y="111.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (18 samples, 0.02%)</title><rect x="1009.2" y="117" width="0.2" height="15.0" fill="rgb(251,35,19)" rx="2" ry="2" />
<text  x="1012.19" y="127.5" ></text>
</g>
<g >
<title>util_checksum_seq (103 samples, 0.09%)</title><rect x="1164.3" y="581" width="1.1" height="15.0" fill="rgb(208,164,34)" rx="2" ry="2" />
<text  x="1167.27" y="591.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;scythedb::Slice, std::move_iterator&lt;scythedb::Slice*&gt; &gt; (22 samples, 0.02%)</title><rect x="43.8" y="261" width="0.2" height="15.0" fill="rgb(216,146,17)" rx="2" ry="2" />
<text  x="46.81" y="271.5" ></text>
</g>
<g >
<title>operation_add_buffer (687 samples, 0.62%)</title><rect x="1158.1" y="597" width="7.3" height="15.0" fill="rgb(254,5,42)" rx="2" ry="2" />
<text  x="1161.05" y="607.5" ></text>
</g>
<g >
<title>std::_Bind&lt;void  (36 samples, 0.03%)</title><rect x="27.1" y="453" width="0.4" height="15.0" fill="rgb(221,113,1)" rx="2" ry="2" />
<text  x="30.08" y="463.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::get_or_add_implicit_producer (94 samples, 0.08%)</title><rect x="1002.2" y="229" width="1.0" height="15.0" fill="rgb(226,218,13)" rx="2" ry="2" />
<text  x="1005.17" y="239.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (21 samples, 0.02%)</title><rect x="825.3" y="565" width="0.3" height="15.0" fill="rgb(222,12,50)" rx="2" ry="2" />
<text  x="828.33" y="575.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (355 samples, 0.32%)</title><rect x="459.0" y="261" width="3.8" height="15.0" fill="rgb(222,189,21)" rx="2" ry="2" />
<text  x="461.97" y="271.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (16 samples, 0.01%)</title><rect x="894.2" y="277" width="0.1" height="15.0" fill="rgb(207,77,33)" rx="2" ry="2" />
<text  x="897.18" y="287.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (14 samples, 0.01%)</title><rect x="866.7" y="181" width="0.1" height="15.0" fill="rgb(234,34,49)" rx="2" ry="2" />
<text  x="869.67" y="191.5" ></text>
</g>
<g >
<title>ulog_clobber (81 samples, 0.07%)</title><rect x="1116.1" y="581" width="0.8" height="15.0" fill="rgb(236,220,12)" rx="2" ry="2" />
<text  x="1119.07" y="591.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (18 samples, 0.02%)</title><rect x="1015.8" y="181" width="0.2" height="15.0" fill="rgb(210,201,47)" rx="2" ry="2" />
<text  x="1018.85" y="191.5" ></text>
</g>
<g >
<title>XXH64 (14 samples, 0.01%)</title><rect x="874.2" y="261" width="0.2" height="15.0" fill="rgb(213,126,27)" rx="2" ry="2" />
<text  x="877.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (113 samples, 0.10%)</title><rect x="1053.4" y="229" width="1.2" height="15.0" fill="rgb(240,173,13)" rx="2" ry="2" />
<text  x="1056.36" y="239.5" ></text>
</g>
<g >
<title>std::move&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (10 samples, 0.01%)</title><rect x="1006.2" y="261" width="0.1" height="15.0" fill="rgb(248,190,33)" rx="2" ry="2" />
<text  x="1009.21" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (418 samples, 0.38%)</title><rect x="50.0" y="261" width="4.5" height="15.0" fill="rgb(252,91,6)" rx="2" ry="2" />
<text  x="53.00" y="271.5" ></text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (16 samples, 0.01%)</title><rect x="960.8" y="229" width="0.1" height="15.0" fill="rgb(221,63,43)" rx="2" ry="2" />
<text  x="963.78" y="239.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (31 samples, 0.03%)</title><rect x="495.3" y="293" width="0.4" height="15.0" fill="rgb(234,107,18)" rx="2" ry="2" />
<text  x="498.33" y="303.5" ></text>
</g>
<g >
<title>scythedb::NVMArena::AllocateAligned (165 samples, 0.15%)</title><rect x="469.1" y="197" width="1.7" height="15.0" fill="rgb(210,129,28)" rx="2" ry="2" />
<text  x="472.09" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (14 samples, 0.01%)</title><rect x="901.6" y="117" width="0.1" height="15.0" fill="rgb(245,75,54)" rx="2" ry="2" />
<text  x="904.57" y="127.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_assign (97 samples, 0.09%)</title><rect x="924.9" y="277" width="1.1" height="15.0" fill="rgb(226,111,26)" rx="2" ry="2" />
<text  x="927.94" y="287.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (94 samples, 0.08%)</title><rect x="193.5" y="181" width="1.0" height="15.0" fill="rgb(248,154,41)" rx="2" ry="2" />
<text  x="196.54" y="191.5" ></text>
</g>
<g >
<title>std::_Destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (224 samples, 0.20%)</title><rect x="1042.7" y="293" width="2.4" height="15.0" fill="rgb(233,135,9)" rx="2" ry="2" />
<text  x="1045.74" y="303.5" ></text>
</g>
<g >
<title>XXH64_finalize (127 samples, 0.11%)</title><rect x="994.7" y="197" width="1.4" height="15.0" fill="rgb(243,114,52)" rx="2" ry="2" />
<text  x="997.74" y="207.5" ></text>
</g>
<g >
<title>__gthread_active_p (35 samples, 0.03%)</title><rect x="1014.5" y="197" width="0.4" height="15.0" fill="rgb(248,54,11)" rx="2" ry="2" />
<text  x="1017.52" y="207.5" ></text>
</g>
<g >
<title>std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::shared_ptr (204 samples, 0.18%)</title><rect x="881.2" y="229" width="2.2" height="15.0" fill="rgb(208,167,33)" rx="2" ry="2" />
<text  x="884.21" y="239.5" ></text>
</g>
<g >
<title>__tls_get_addr (59 samples, 0.05%)</title><rect x="1082.2" y="581" width="0.7" height="15.0" fill="rgb(223,61,47)" rx="2" ry="2" />
<text  x="1085.24" y="591.5" ></text>
</g>
<g >
<title>palloc_reservation_create (140 samples, 0.13%)</title><rect x="1096.0" y="581" width="1.5" height="15.0" fill="rgb(232,1,31)" rx="2" ry="2" />
<text  x="1098.98" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13 samples, 0.01%)</title><rect x="1008.9" y="117" width="0.2" height="15.0" fill="rgb(238,223,4)" rx="2" ry="2" />
<text  x="1011.92" y="127.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_get_block_from_free_list (13 samples, 0.01%)</title><rect x="1000.2" y="197" width="0.2" height="15.0" fill="rgb(219,227,39)" rx="2" ry="2" />
<text  x="1003.21" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (107 samples, 0.10%)</title><rect x="210.6" y="341" width="1.2" height="15.0" fill="rgb(220,4,42)" rx="2" ry="2" />
<text  x="213.62" y="351.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (104 samples, 0.09%)</title><rect x="814.9" y="549" width="1.1" height="15.0" fill="rgb(220,218,54)" rx="2" ry="2" />
<text  x="817.91" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (179 samples, 0.16%)</title><rect x="1053.0" y="277" width="1.9" height="15.0" fill="rgb(222,198,14)" rx="2" ry="2" />
<text  x="1056.02" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (43 samples, 0.04%)</title><rect x="943.0" y="165" width="0.5" height="15.0" fill="rgb(251,199,7)" rx="2" ry="2" />
<text  x="946.03" y="175.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (32 samples, 0.03%)</title><rect x="892.8" y="181" width="0.4" height="15.0" fill="rgb(236,223,31)" rx="2" ry="2" />
<text  x="895.85" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add (166 samples, 0.15%)</title><rect x="744.6" y="277" width="1.7" height="15.0" fill="rgb(210,85,24)" rx="2" ry="2" />
<text  x="747.57" y="287.5" ></text>
</g>
<g >
<title>[unknown] (30,039 samples, 27.11%)</title><rect x="799.6" y="597" width="319.9" height="15.0" fill="rgb(245,2,34)" rx="2" ry="2" />
<text  x="802.58" y="607.5" >[unknown]</text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (22 samples, 0.02%)</title><rect x="830.2" y="549" width="0.2" height="15.0" fill="rgb(211,159,22)" rx="2" ry="2" />
<text  x="833.18" y="559.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (18 samples, 0.02%)</title><rect x="862.7" y="181" width="0.2" height="15.0" fill="rgb(245,95,21)" rx="2" ry="2" />
<text  x="865.74" y="191.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (18 samples, 0.02%)</title><rect x="240.6" y="133" width="0.1" height="15.0" fill="rgb(210,189,24)" rx="2" ry="2" />
<text  x="243.55" y="143.5" ></text>
</g>
<g >
<title>pmemobj_tx_add_snapshot.constprop.25 (812 samples, 0.73%)</title><rect x="1103.2" y="581" width="8.6" height="15.0" fill="rgb(219,202,47)" rx="2" ry="2" />
<text  x="1106.19" y="591.5" ></text>
</g>
<g >
<title>scythedb::Slice::size (78 samples, 0.07%)</title><rect x="453.8" y="149" width="0.8" height="15.0" fill="rgb(218,24,16)" rx="2" ry="2" />
<text  x="456.78" y="159.5" ></text>
</g>
<g >
<title>std::_Destroy_aux&lt;false&gt;::__destroy&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (209 samples, 0.19%)</title><rect x="1042.9" y="261" width="2.2" height="15.0" fill="rgb(248,209,7)" rx="2" ry="2" />
<text  x="1045.86" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (44 samples, 0.04%)</title><rect x="960.3" y="213" width="0.4" height="15.0" fill="rgb(210,85,6)" rx="2" ry="2" />
<text  x="963.26" y="223.5" ></text>
</g>
<g >
<title>scythedb::RepeatableThread::wait (1,098 samples, 0.99%)</title><rect x="13.7" y="469" width="11.7" height="15.0" fill="rgb(238,171,1)" rx="2" ry="2" />
<text  x="16.72" y="479.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorMessage::ProcessorMessage (131 samples, 0.12%)</title><rect x="1008.5" y="149" width="1.4" height="15.0" fill="rgb(231,152,18)" rx="2" ry="2" />
<text  x="1011.48" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (26 samples, 0.02%)</title><rect x="953.7" y="229" width="0.3" height="15.0" fill="rgb(226,91,28)" rx="2" ry="2" />
<text  x="956.74" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::persistent_ptr (5,351 samples, 4.83%)</title><rect x="268.8" y="229" width="57.0" height="15.0" fill="rgb(235,151,49)" rx="2" ry="2" />
<text  x="271.79" y="239.5" >pmem::..</text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::AssignQueue (289 samples, 0.26%)</title><rect x="873.9" y="293" width="3.1" height="15.0" fill="rgb(243,84,6)" rx="2" ry="2" />
<text  x="876.88" y="303.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (12 samples, 0.01%)</title><rect x="1011.3" y="245" width="0.2" height="15.0" fill="rgb(212,16,52)" rx="2" ry="2" />
<text  x="1014.33" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (884 samples, 0.80%)</title><rect x="857.7" y="245" width="9.4" height="15.0" fill="rgb(247,40,35)" rx="2" ry="2" />
<text  x="860.68" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (13 samples, 0.01%)</title><rect x="1058.3" y="229" width="0.1" height="15.0" fill="rgb(219,117,22)" rx="2" ry="2" />
<text  x="1061.30" y="239.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::RecordPersist (22,911 samples, 20.68%)</title><rect x="233.7" y="309" width="244.0" height="15.0" fill="rgb(245,203,43)" rx="2" ry="2" />
<text  x="236.69" y="319.5" >scythedb::NVMBlock::RecordPersist</text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (422 samples, 0.38%)</title><rect x="1016.1" y="197" width="4.5" height="15.0" fill="rgb(252,120,27)" rx="2" ry="2" />
<text  x="1019.11" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="1033.8" y="261" width="0.1" height="15.0" fill="rgb(213,81,18)" rx="2" ry="2" />
<text  x="1036.75" y="271.5" ></text>
</g>
<g >
<title>scythedb::GetLengthPrefixedSlice (7,501 samples, 6.77%)</title><rect x="357.4" y="181" width="79.9" height="15.0" fill="rgb(219,164,19)" rx="2" ry="2" />
<text  x="360.39" y="191.5" >scythedb:..</text>
</g>
<g >
<title>scythedb::NVMSkipList::KeyIsAfterNode (18,681 samples, 16.86%)</title><rect x="260.0" y="261" width="199.0" height="15.0" fill="rgb(228,110,38)" rx="2" ry="2" />
<text  x="263.03" y="271.5" >scythedb::NVMSkipList::Key..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (73 samples, 0.07%)</title><rect x="221.4" y="261" width="0.8" height="15.0" fill="rgb(234,87,25)" rx="2" ry="2" />
<text  x="224.38" y="271.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::emplace_back&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (624 samples, 0.56%)</title><rect x="1035.6" y="293" width="6.7" height="15.0" fill="rgb(250,6,8)" rx="2" ry="2" />
<text  x="1038.64" y="303.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (154 samples, 0.14%)</title><rect x="479.6" y="309" width="1.6" height="15.0" fill="rgb(251,180,29)" rx="2" ry="2" />
<text  x="482.59" y="319.5" ></text>
</g>
<g >
<title>operator new (24 samples, 0.02%)</title><rect x="204.6" y="245" width="0.3" height="15.0" fill="rgb(225,181,51)" rx="2" ry="2" />
<text  x="207.60" y="255.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::length (60 samples, 0.05%)</title><rect x="961.7" y="277" width="0.6" height="15.0" fill="rgb(239,196,33)" rx="2" ry="2" />
<text  x="964.70" y="287.5" ></text>
</g>
<g >
<title>__gthread_active_p (10 samples, 0.01%)</title><rect x="883.2" y="149" width="0.1" height="15.0" fill="rgb(247,79,49)" rx="2" ry="2" />
<text  x="886.23" y="159.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (10 samples, 0.01%)</title><rect x="934.8" y="293" width="0.1" height="15.0" fill="rgb(222,19,51)" rx="2" ry="2" />
<text  x="937.78" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (24 samples, 0.02%)</title><rect x="959.9" y="229" width="0.2" height="15.0" fill="rgb(240,28,26)" rx="2" ry="2" />
<text  x="962.87" y="239.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (10 samples, 0.01%)</title><rect x="962.3" y="277" width="0.1" height="15.0" fill="rgb(212,78,42)" rx="2" ry="2" />
<text  x="965.33" y="287.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::construct&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (146 samples, 0.13%)</title><rect x="1008.3" y="181" width="1.6" height="15.0" fill="rgb(211,149,43)" rx="2" ry="2" />
<text  x="1011.34" y="191.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (33 samples, 0.03%)</title><rect x="197.6" y="229" width="0.4" height="15.0" fill="rgb(218,140,44)" rx="2" ry="2" />
<text  x="200.60" y="239.5" ></text>
</g>
<g >
<title>operator delete (16 samples, 0.01%)</title><rect x="1005.8" y="229" width="0.1" height="15.0" fill="rgb(221,119,45)" rx="2" ry="2" />
<text  x="1008.75" y="239.5" ></text>
</g>
<g >
<title>operator new (15 samples, 0.01%)</title><rect x="472.3" y="213" width="0.2" height="15.0" fill="rgb(251,229,35)" rx="2" ry="2" />
<text  x="475.34" y="223.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (15 samples, 0.01%)</title><rect x="954.9" y="213" width="0.1" height="15.0" fill="rgb(211,55,23)" rx="2" ry="2" />
<text  x="957.86" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::get (19 samples, 0.02%)</title><rect x="240.5" y="149" width="0.2" height="15.0" fill="rgb(244,192,54)" rx="2" ry="2" />
<text  x="243.54" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (16 samples, 0.01%)</title><rect x="488.5" y="245" width="0.1" height="15.0" fill="rgb(233,219,36)" rx="2" ry="2" />
<text  x="491.46" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::operator==&lt;char&gt; (21 samples, 0.02%)</title><rect x="240.5" y="165" width="0.3" height="15.0" fill="rgb(232,117,34)" rx="2" ry="2" />
<text  x="243.53" y="175.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (39 samples, 0.04%)</title><rect x="221.7" y="245" width="0.5" height="15.0" fill="rgb(243,127,0)" rx="2" ry="2" />
<text  x="224.74" y="255.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator!=&lt;std::pair&lt;ycsbc::Operation, double&gt; const*, std::vector&lt;std::pair&lt;ycsbc::Operation, double&gt;, std::allocator&lt;std::pair&lt;ycsbc::Operation, double&gt; &gt; &gt; &gt; (14 samples, 0.01%)</title><rect x="1072.8" y="293" width="0.2" height="15.0" fill="rgb(240,19,46)" rx="2" ry="2" />
<text  x="1075.80" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (10 samples, 0.01%)</title><rect x="974.2" y="277" width="0.1" height="15.0" fill="rgb(207,168,21)" rx="2" ry="2" />
<text  x="977.16" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::Slice&gt;::construct&lt;scythedb::Slice, scythedb::Slice&gt; (11 samples, 0.01%)</title><rect x="231.9" y="261" width="0.1" height="15.0" fill="rgb(209,86,1)" rx="2" ry="2" />
<text  x="234.91" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (637 samples, 0.57%)</title><rect x="1026.8" y="245" width="6.7" height="15.0" fill="rgb(207,202,36)" rx="2" ry="2" />
<text  x="1029.75" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_get_allocator (10 samples, 0.01%)</title><rect x="867.3" y="213" width="0.1" height="15.0" fill="rgb(244,75,12)" rx="2" ry="2" />
<text  x="870.33" y="223.5" ></text>
</g>
<g >
<title>std::type_info::name (18 samples, 0.02%)</title><rect x="240.3" y="133" width="0.2" height="15.0" fill="rgb(215,193,31)" rx="2" ry="2" />
<text  x="243.33" y="143.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::(anonymous namespace)::ProcessorSetImpl::Get (11 samples, 0.01%)</title><rect x="1020.4" y="101" width="0.1" height="15.0" fill="rgb(249,175,17)" rx="2" ry="2" />
<text  x="1023.35" y="111.5" ></text>
</g>
<g >
<title>std::atomic&lt;ycsbc::Operation&gt;::operator= (72 samples, 0.06%)</title><rect x="1073.0" y="293" width="0.7" height="15.0" fill="rgb(213,110,16)" rx="2" ry="2" />
<text  x="1075.97" y="303.5" ></text>
</g>
<g >
<title>pmemobj_oid (16 samples, 0.01%)</title><rect x="465.5" y="245" width="0.2" height="15.0" fill="rgb(253,224,48)" rx="2" ry="2" />
<text  x="468.50" y="255.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (12 samples, 0.01%)</title><rect x="1011.1" y="261" width="0.2" height="15.0" fill="rgb(252,166,36)" rx="2" ry="2" />
<text  x="1014.13" y="271.5" ></text>
</g>
<g >
<title>scythedb::MutexLock::MutexLock (13 samples, 0.01%)</title><rect x="13.5" y="469" width="0.1" height="15.0" fill="rgb(228,166,33)" rx="2" ry="2" />
<text  x="16.49" y="479.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (55 samples, 0.05%)</title><rect x="864.8" y="213" width="0.6" height="15.0" fill="rgb(209,227,27)" rx="2" ry="2" />
<text  x="867.78" y="223.5" ></text>
</g>
<g >
<title>pmemobj_tx_begin (17 samples, 0.02%)</title><rect x="245.4" y="149" width="0.2" height="15.0" fill="rgb(208,121,21)" rx="2" ry="2" />
<text  x="248.38" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="490.8" y="261" width="0.1" height="15.0" fill="rgb(212,22,6)" rx="2" ry="2" />
<text  x="493.79" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_move_if_noexcept_a&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; (164 samples, 0.15%)</title><rect x="938.2" y="277" width="1.7" height="15.0" fill="rgb(219,112,10)" rx="2" ry="2" />
<text  x="941.19" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;scythedb::(anonymous namespace)::NVMBlockProcessor*&amp;&gt; (15 samples, 0.01%)</title><rect x="794.4" y="405" width="0.1" height="15.0" fill="rgb(254,12,35)" rx="2" ry="2" />
<text  x="797.36" y="415.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (21 samples, 0.02%)</title><rect x="468.4" y="213" width="0.3" height="15.0" fill="rgb(214,105,42)" rx="2" ry="2" />
<text  x="471.43" y="223.5" ></text>
</g>
<g >
<title>__gthread_mutex_lock (10 samples, 0.01%)</title><rect x="1064.1" y="213" width="0.1" height="15.0" fill="rgb(243,169,38)" rx="2" ry="2" />
<text  x="1067.10" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (13 samples, 0.01%)</title><rect x="868.2" y="229" width="0.1" height="15.0" fill="rgb(243,77,28)" rx="2" ry="2" />
<text  x="871.19" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (26 samples, 0.02%)</title><rect x="1055.9" y="181" width="0.3" height="15.0" fill="rgb(237,37,49)" rx="2" ry="2" />
<text  x="1058.90" y="191.5" ></text>
</g>
<g >
<title>pmemobj_tx_stage (16 samples, 0.01%)</title><rect x="245.7" y="149" width="0.2" height="15.0" fill="rgb(245,159,43)" rx="2" ry="2" />
<text  x="248.72" y="159.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;std::unique_ptr&lt;std::__future_base::_Result_base, std::__future_base::_Result_base::_Deleter&gt;  (22,775 samples, 20.55%)</title><rect x="839.7" y="453" width="242.5" height="15.0" fill="rgb(249,141,36)" rx="2" ry="2" />
<text  x="842.69" y="463.5" >std::_Function_handler&lt;std::uniq..</text>
</g>
<g >
<title>pmem::obj::operator-=&lt;unsigned long, unsigned long&gt; (28 samples, 0.03%)</title><rect x="469.4" y="181" width="0.3" height="15.0" fill="rgb(233,101,41)" rx="2" ry="2" />
<text  x="472.37" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (11 samples, 0.01%)</title><rect x="479.0" y="245" width="0.1" height="15.0" fill="rgb(216,150,52)" rx="2" ry="2" />
<text  x="482.02" y="255.5" ></text>
</g>
<g >
<title>scythedb::PutVarint32 (317 samples, 0.29%)</title><rect x="853.8" y="261" width="3.4" height="15.0" fill="rgb(208,27,16)" rx="2" ry="2" />
<text  x="856.83" y="271.5" ></text>
</g>
<g >
<title>std::_Function_base::_Base_manager&lt;scythedb::NVMArena::AllocateAligned (37 samples, 0.03%)</title><rect x="472.6" y="213" width="0.4" height="15.0" fill="rgb(210,40,26)" rx="2" ry="2" />
<text  x="475.64" y="223.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (531 samples, 0.48%)</title><rect x="1015.0" y="213" width="5.6" height="15.0" fill="rgb(230,154,35)" rx="2" ry="2" />
<text  x="1017.95" y="223.5" ></text>
</g>
<g >
<title>std::__addressof&lt;scythedb::NVMBlock::NVMBlock (19 samples, 0.02%)</title><rect x="457.4" y="197" width="0.2" height="15.0" fill="rgb(215,212,54)" rx="2" ry="2" />
<text  x="460.44" y="207.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (21 samples, 0.02%)</title><rect x="473.6" y="229" width="0.2" height="15.0" fill="rgb(251,200,8)" rx="2" ry="2" />
<text  x="476.55" y="239.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (314 samples, 0.28%)</title><rect x="743.5" y="325" width="3.3" height="15.0" fill="rgb(205,92,39)" rx="2" ry="2" />
<text  x="746.50" y="335.5" ></text>
</g>
<g >
<title>ycsbc::CoreWorkload::Init (11 samples, 0.01%)</title><rect x="838.6" y="533" width="0.1" height="15.0" fill="rgb(217,127,46)" rx="2" ry="2" />
<text  x="841.62" y="543.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::operator= (50 samples, 0.05%)</title><rect x="254.5" y="181" width="0.5" height="15.0" fill="rgb(248,16,13)" rx="2" ry="2" />
<text  x="257.49" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (41 samples, 0.04%)</title><rect x="953.3" y="245" width="0.4" height="15.0" fill="rgb(234,191,21)" rx="2" ry="2" />
<text  x="956.27" y="255.5" ></text>
</g>
<g >
<title>std::mutex::lock (23 samples, 0.02%)</title><rect x="1071.6" y="309" width="0.2" height="15.0" fill="rgb(233,115,3)" rx="2" ry="2" />
<text  x="1074.56" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (137 samples, 0.12%)</title><rect x="966.5" y="197" width="1.4" height="15.0" fill="rgb(214,126,42)" rx="2" ry="2" />
<text  x="969.47" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::~_Alloc_hider (14 samples, 0.01%)</title><rect x="909.5" y="213" width="0.1" height="15.0" fill="rgb(249,30,41)" rx="2" ry="2" />
<text  x="912.48" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (15 samples, 0.01%)</title><rect x="489.9" y="293" width="0.1" height="15.0" fill="rgb(217,127,35)" rx="2" ry="2" />
<text  x="492.87" y="303.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (13 samples, 0.01%)</title><rect x="1052.6" y="197" width="0.2" height="15.0" fill="rgb(254,43,37)" rx="2" ry="2" />
<text  x="1055.63" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (63 samples, 0.06%)</title><rect x="1041.2" y="261" width="0.7" height="15.0" fill="rgb(216,15,40)" rx="2" ry="2" />
<text  x="1044.18" y="271.5" ></text>
</g>
<g >
<title>std::function&lt;void  (222 samples, 0.20%)</title><rect x="1018.1" y="149" width="2.4" height="15.0" fill="rgb(217,124,25)" rx="2" ry="2" />
<text  x="1021.11" y="159.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (13 samples, 0.01%)</title><rect x="1028.5" y="213" width="0.1" height="15.0" fill="rgb(251,13,15)" rx="2" ry="2" />
<text  x="1031.50" y="223.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (46 samples, 0.04%)</title><rect x="850.5" y="293" width="0.5" height="15.0" fill="rgb(217,39,2)" rx="2" ry="2" />
<text  x="853.49" y="303.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (28 samples, 0.03%)</title><rect x="25.5" y="469" width="0.3" height="15.0" fill="rgb(242,23,45)" rx="2" ry="2" />
<text  x="28.51" y="479.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (48 samples, 0.04%)</title><rect x="1015.2" y="197" width="0.6" height="15.0" fill="rgb(238,68,21)" rx="2" ry="2" />
<text  x="1018.24" y="207.5" ></text>
</g>
<g >
<title>moodycamel::details::hash_thread_id (27 samples, 0.02%)</title><rect x="884.2" y="229" width="0.2" height="15.0" fill="rgb(232,103,27)" rx="2" ry="2" />
<text  x="887.16" y="239.5" ></text>
</g>
<g >
<title>scythedb::Status::OK (11 samples, 0.01%)</title><rect x="905.6" y="325" width="0.1" height="15.0" fill="rgb(209,40,24)" rx="2" ry="2" />
<text  x="908.57" y="335.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (46 samples, 0.04%)</title><rect x="464.6" y="245" width="0.5" height="15.0" fill="rgb(205,204,24)" rx="2" ry="2" />
<text  x="467.61" y="255.5" ></text>
</g>
<g >
<title>[libstdc++.so.6.0.25] (10 samples, 0.01%)</title><rect x="900.5" y="101" width="0.1" height="15.0" fill="rgb(250,83,18)" rx="2" ry="2" />
<text  x="903.47" y="111.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (14 samples, 0.01%)</title><rect x="1060.5" y="181" width="0.2" height="15.0" fill="rgb(221,134,47)" rx="2" ry="2" />
<text  x="1063.51" y="191.5" ></text>
</g>
<g >
<title>__condvar_dec_grefs (488 samples, 0.44%)</title><rect x="1121.2" y="597" width="5.2" height="15.0" fill="rgb(215,73,6)" rx="2" ry="2" />
<text  x="1124.20" y="607.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (30 samples, 0.03%)</title><rect x="116.2" y="245" width="0.3" height="15.0" fill="rgb(252,143,7)" rx="2" ry="2" />
<text  x="119.19" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (21 samples, 0.02%)</title><rect x="268.2" y="245" width="0.3" height="15.0" fill="rgb(228,102,14)" rx="2" ry="2" />
<text  x="271.23" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (104 samples, 0.09%)</title><rect x="1016.6" y="117" width="1.1" height="15.0" fill="rgb(222,147,6)" rx="2" ry="2" />
<text  x="1019.57" y="127.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (227 samples, 0.20%)</title><rect x="215.9" y="293" width="2.4" height="15.0" fill="rgb(206,67,21)" rx="2" ry="2" />
<text  x="218.89" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (179 samples, 0.16%)</title><rect x="1043.1" y="213" width="1.9" height="15.0" fill="rgb(254,4,1)" rx="2" ry="2" />
<text  x="1046.11" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (23 samples, 0.02%)</title><rect x="952.9" y="229" width="0.3" height="15.0" fill="rgb(226,28,34)" rx="2" ry="2" />
<text  x="955.94" y="239.5" ></text>
</g>
<g >
<title>pthread_cond_destroy@@GLIBC_2.3.2 (47 samples, 0.04%)</title><rect x="984.5" y="277" width="0.5" height="15.0" fill="rgb(235,27,21)" rx="2" ry="2" />
<text  x="987.45" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (41 samples, 0.04%)</title><rect x="1052.4" y="245" width="0.4" height="15.0" fill="rgb(240,176,11)" rx="2" ry="2" />
<text  x="1055.39" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (21 samples, 0.02%)</title><rect x="490.7" y="277" width="0.2" height="15.0" fill="rgb(242,74,47)" rx="2" ry="2" />
<text  x="493.70" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (37 samples, 0.03%)</title><rect x="199.1" y="261" width="0.4" height="15.0" fill="rgb(206,28,32)" rx="2" ry="2" />
<text  x="202.15" y="271.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::CalcQueueLane (273 samples, 0.25%)</title><rect x="874.0" y="277" width="2.9" height="15.0" fill="rgb(237,104,34)" rx="2" ry="2" />
<text  x="877.03" y="287.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (30 samples, 0.03%)</title><rect x="863.0" y="165" width="0.4" height="15.0" fill="rgb(249,39,1)" rx="2" ry="2" />
<text  x="866.04" y="175.5" ></text>
</g>
<g >
<title>std::__allocated_ptr&lt;std::allocator&lt;std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (13 samples, 0.01%)</title><rect x="892.6" y="197" width="0.1" height="15.0" fill="rgb(226,159,31)" rx="2" ry="2" />
<text  x="895.60" y="207.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (860 samples, 0.78%)</title><rect x="1011.6" y="229" width="9.1" height="15.0" fill="rgb(228,193,32)" rx="2" ry="2" />
<text  x="1014.56" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock_usercnt (32 samples, 0.03%)</title><rect x="851.8" y="293" width="0.4" height="15.0" fill="rgb(228,41,27)" rx="2" ry="2" />
<text  x="854.81" y="303.5" ></text>
</g>
<g >
<title>operator new (25 samples, 0.02%)</title><rect x="43.4" y="245" width="0.3" height="15.0" fill="rgb(234,73,33)" rx="2" ry="2" />
<text  x="46.40" y="255.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ProducerBase::size_approx (818 samples, 0.74%)</title><rect x="505.7" y="341" width="8.8" height="15.0" fill="rgb(210,186,41)" rx="2" ry="2" />
<text  x="508.75" y="351.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (296 samples, 0.27%)</title><rect x="1011.7" y="213" width="3.2" height="15.0" fill="rgb(218,185,50)" rx="2" ry="2" />
<text  x="1014.74" y="223.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::Add (24,231 samples, 21.87%)</title><rect x="233.3" y="325" width="258.1" height="15.0" fill="rgb(213,7,43)" rx="2" ry="2" />
<text  x="236.32" y="335.5" >scythedb::NVMBlock::Add</text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::PersistentKey (34 samples, 0.03%)</title><rect x="473.4" y="277" width="0.4" height="15.0" fill="rgb(246,69,28)" rx="2" ry="2" />
<text  x="476.44" y="287.5" ></text>
</g>
<g >
<title>std::this_thread::yield (4,197 samples, 3.79%)</title><rect x="746.8" y="357" width="44.7" height="15.0" fill="rgb(206,82,3)" rx="2" ry="2" />
<text  x="749.84" y="367.5" >std:..</text>
</g>
<g >
<title>XXH64_endian_align (192 samples, 0.17%)</title><rect x="874.5" y="229" width="2.1" height="15.0" fill="rgb(227,190,15)" rx="2" ry="2" />
<text  x="877.52" y="239.5" ></text>
</g>
<g >
<title>std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;::move_iterator (14 samples, 0.01%)</title><rect x="1037.7" y="229" width="0.1" height="15.0" fill="rgb(225,81,0)" rx="2" ry="2" />
<text  x="1040.67" y="239.5" ></text>
</g>
<g >
<title>operator delete (15 samples, 0.01%)</title><rect x="490.5" y="245" width="0.2" height="15.0" fill="rgb(238,106,23)" rx="2" ry="2" />
<text  x="493.53" y="255.5" ></text>
</g>
<g >
<title>std::__future_base::_State_baseV2::_M_do_set (22,775 samples, 20.55%)</title><rect x="839.7" y="485" width="242.5" height="15.0" fill="rgb(225,0,32)" rx="2" ry="2" />
<text  x="842.69" y="495.5" >std::__future_base::_State_baseV..</text>
</g>
<g >
<title>scythedb::Slice::size (15 samples, 0.01%)</title><rect x="481.4" y="309" width="0.2" height="15.0" fill="rgb(251,164,37)" rx="2" ry="2" />
<text  x="484.39" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (26 samples, 0.02%)</title><rect x="480.0" y="261" width="0.2" height="15.0" fill="rgb(234,56,14)" rx="2" ry="2" />
<text  x="482.96" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::assign (400 samples, 0.36%)</title><rect x="219.4" y="293" width="4.2" height="15.0" fill="rgb(209,206,5)" rx="2" ry="2" />
<text  x="222.38" y="303.5" ></text>
</g>
<g >
<title>__gthread_active_p (45 samples, 0.04%)</title><rect x="746.3" y="277" width="0.5" height="15.0" fill="rgb(231,132,28)" rx="2" ry="2" />
<text  x="749.34" y="287.5" ></text>
</g>
<g >
<title>__strchrnul_avx2 (14 samples, 0.01%)</title><rect x="1118.1" y="501" width="0.2" height="15.0" fill="rgb(235,11,0)" rx="2" ry="2" />
<text  x="1121.13" y="511.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::allocator (11 samples, 0.01%)</title><rect x="972.7" y="277" width="0.1" height="15.0" fill="rgb(208,124,7)" rx="2" ry="2" />
<text  x="975.69" y="287.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Node::Next (16 samples, 0.01%)</title><rect x="203.2" y="309" width="0.2" height="15.0" fill="rgb(249,45,27)" rx="2" ry="2" />
<text  x="206.19" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (15 samples, 0.01%)</title><rect x="1022.7" y="293" width="0.2" height="15.0" fill="rgb(229,222,0)" rx="2" ry="2" />
<text  x="1025.74" y="303.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (31 samples, 0.03%)</title><rect x="1049.5" y="277" width="0.3" height="15.0" fill="rgb(248,80,47)" rx="2" ry="2" />
<text  x="1052.47" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (24 samples, 0.02%)</title><rect x="901.7" y="117" width="0.3" height="15.0" fill="rgb(219,125,49)" rx="2" ry="2" />
<text  x="904.72" y="127.5" ></text>
</g>
<g >
<title>scythedb::Queue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt;::Enqueue (472 samples, 0.43%)</title><rect x="998.3" y="277" width="5.0" height="15.0" fill="rgb(240,137,16)" rx="2" ry="2" />
<text  x="1001.27" y="287.5" ></text>
</g>
<g >
<title>_int_malloc (293 samples, 0.26%)</title><rect x="822.2" y="565" width="3.1" height="15.0" fill="rgb(209,94,13)" rx="2" ry="2" />
<text  x="825.21" y="575.5" ></text>
</g>
<g >
<title>std::uniform_real_distribution&lt;double&gt;::param_type::b (16 samples, 0.01%)</title><rect x="1071.1" y="197" width="0.1" height="15.0" fill="rgb(241,222,42)" rx="2" ry="2" />
<text  x="1074.07" y="207.5" ></text>
</g>
<g >
<title>std::function&lt;int  (7,736 samples, 6.98%)</title><rect x="117.2" y="277" width="82.3" height="15.0" fill="rgb(217,14,51)" rx="2" ry="2" />
<text  x="120.16" y="287.5" >std::func..</text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::FreeList&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block&gt;::try_get (13 samples, 0.01%)</title><rect x="1000.2" y="181" width="0.2" height="15.0" fill="rgb(233,206,10)" rx="2" ry="2" />
<text  x="1003.21" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (43 samples, 0.04%)</title><rect x="921.0" y="261" width="0.5" height="15.0" fill="rgb(206,209,49)" rx="2" ry="2" />
<text  x="924.01" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (1,753 samples, 1.58%)</title><rect x="97.9" y="261" width="18.7" height="15.0" fill="rgb(211,124,10)" rx="2" ry="2" />
<text  x="100.93" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (184 samples, 0.17%)</title><rect x="922.8" y="277" width="1.9" height="15.0" fill="rgb(244,120,51)" rx="2" ry="2" />
<text  x="925.75" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="907.3" y="277" width="0.1" height="15.0" fill="rgb(223,38,1)" rx="2" ry="2" />
<text  x="910.31" y="287.5" ></text>
</g>
<g >
<title>__condvar_confirm_wakeup (45 samples, 0.04%)</title><rect x="1120.7" y="597" width="0.5" height="15.0" fill="rgb(229,122,50)" rx="2" ry="2" />
<text  x="1123.72" y="607.5" ></text>
</g>
<g >
<title>std::vector&lt;scythedb::Slice, std::allocator&lt;scythedb::Slice&gt; &gt;::size (12 samples, 0.01%)</title><rect x="232.7" y="261" width="0.1" height="15.0" fill="rgb(233,101,54)" rx="2" ry="2" />
<text  x="235.66" y="271.5" ></text>
</g>
<g >
<title>XXH64 (214 samples, 0.19%)</title><rect x="874.4" y="245" width="2.3" height="15.0" fill="rgb(222,29,9)" rx="2" ry="2" />
<text  x="877.43" y="255.5" ></text>
</g>
<g >
<title>XXH64_endian_align (141 samples, 0.13%)</title><rect x="994.7" y="213" width="1.5" height="15.0" fill="rgb(253,22,14)" rx="2" ry="2" />
<text  x="997.68" y="223.5" ></text>
</g>
<g >
<title>std::function&lt;void  (10 samples, 0.01%)</title><rect x="903.5" y="181" width="0.1" height="15.0" fill="rgb(228,54,31)" rx="2" ry="2" />
<text  x="906.52" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_is_local (42 samples, 0.04%)</title><rect x="220.6" y="229" width="0.4" height="15.0" fill="rgb(228,167,28)" rx="2" ry="2" />
<text  x="223.57" y="239.5" ></text>
</g>
<g >
<title>pmem::obj::p&lt;unsigned long&gt;::operator unsigned long (242 samples, 0.22%)</title><rect x="235.5" y="213" width="2.6" height="15.0" fill="rgb(219,74,8)" rx="2" ry="2" />
<text  x="238.55" y="223.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::requisition_block&lt; (15 samples, 0.01%)</title><rect x="881.0" y="229" width="0.1" height="15.0" fill="rgb(208,69,25)" rx="2" ry="2" />
<text  x="883.98" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::size (14 samples, 0.01%)</title><rect x="867.5" y="229" width="0.1" height="15.0" fill="rgb(239,198,15)" rx="2" ry="2" />
<text  x="870.49" y="239.5" ></text>
</g>
<g >
<title>std::__shared_count&lt; (457 samples, 0.41%)</title><rect x="889.0" y="229" width="4.9" height="15.0" fill="rgb(249,52,36)" rx="2" ry="2" />
<text  x="892.00" y="239.5" ></text>
</g>
<g >
<title>std::mutex::unlock (196 samples, 0.18%)</title><rect x="1067.5" y="229" width="2.1" height="15.0" fill="rgb(242,28,19)" rx="2" ry="2" />
<text  x="1070.54" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (13 samples, 0.01%)</title><rect x="986.8" y="213" width="0.1" height="15.0" fill="rgb(239,80,9)" rx="2" ry="2" />
<text  x="989.79" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (12 samples, 0.01%)</title><rect x="1058.2" y="229" width="0.1" height="15.0" fill="rgb(211,105,6)" rx="2" ry="2" />
<text  x="1061.17" y="239.5" ></text>
</g>
<g >
<title>realloc (10 samples, 0.01%)</title><rect x="1189.1" y="597" width="0.2" height="15.0" fill="rgb(205,80,42)" rx="2" ry="2" />
<text  x="1192.15" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (40 samples, 0.04%)</title><rect x="862.9" y="181" width="0.5" height="15.0" fill="rgb(210,145,13)" rx="2" ry="2" />
<text  x="865.93" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (121 samples, 0.11%)</title><rect x="1057.3" y="261" width="1.3" height="15.0" fill="rgb(241,175,45)" rx="2" ry="2" />
<text  x="1060.34" y="271.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::Zeta (11 samples, 0.01%)</title><rect x="838.6" y="453" width="0.1" height="15.0" fill="rgb(253,36,34)" rx="2" ry="2" />
<text  x="841.62" y="463.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::FreeList&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block&gt;::add (11 samples, 0.01%)</title><rect x="536.2" y="277" width="0.1" height="15.0" fill="rgb(234,208,20)" rx="2" ry="2" />
<text  x="539.21" y="287.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (13 samples, 0.01%)</title><rect x="866.2" y="213" width="0.1" height="15.0" fill="rgb(220,46,0)" rx="2" ry="2" />
<text  x="869.16" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (47 samples, 0.04%)</title><rect x="220.6" y="245" width="0.5" height="15.0" fill="rgb(246,107,35)" rx="2" ry="2" />
<text  x="223.56" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (23 samples, 0.02%)</title><rect x="488.8" y="277" width="0.3" height="15.0" fill="rgb(235,48,34)" rx="2" ry="2" />
<text  x="491.81" y="287.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_Vector_impl::~_Vector_impl (12 samples, 0.01%)</title><rect x="911.4" y="293" width="0.1" height="15.0" fill="rgb(244,228,3)" rx="2" ry="2" />
<text  x="914.42" y="303.5" ></text>
</g>
<g >
<title>std::__invoke&lt;void  (71,632 samples, 64.65%)</title><rect x="31.4" y="405" width="762.8" height="15.0" fill="rgb(231,187,52)" rx="2" ry="2" />
<text  x="34.36" y="415.5" >std::__invoke&lt;void </text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (156 samples, 0.14%)</title><rect x="881.7" y="181" width="1.7" height="15.0" fill="rgb(237,73,22)" rx="2" ry="2" />
<text  x="884.72" y="191.5" ></text>
</g>
<g >
<title>scythedb::NVMSkipList::Insert (21,286 samples, 19.21%)</title><rect x="250.2" y="293" width="226.6" height="15.0" fill="rgb(244,100,27)" rx="2" ry="2" />
<text  x="253.16" y="303.5" >scythedb::NVMSkipList::Insert</text>
</g>
<g >
<title>std::distance&lt;char const*&gt; (12 samples, 0.01%)</title><rect x="1056.3" y="213" width="0.1" height="15.0" fill="rgb(246,146,0)" rx="2" ry="2" />
<text  x="1059.27" y="223.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (40 samples, 0.04%)</title><rect x="908.4" y="325" width="0.4" height="15.0" fill="rgb(214,223,8)" rx="2" ry="2" />
<text  x="911.38" y="335.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (14 samples, 0.01%)</title><rect x="975.7" y="325" width="0.1" height="15.0" fill="rgb(247,228,52)" rx="2" ry="2" />
<text  x="978.69" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (22 samples, 0.02%)</title><rect x="989.5" y="229" width="0.3" height="15.0" fill="rgb(227,81,41)" rx="2" ry="2" />
<text  x="992.53" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (171 samples, 0.15%)</title><rect x="1050.4" y="245" width="1.8" height="15.0" fill="rgb(254,134,46)" rx="2" ry="2" />
<text  x="1053.35" y="255.5" ></text>
</g>
<g >
<title>XXH_readLE32_align (11 samples, 0.01%)</title><rect x="876.2" y="197" width="0.1" height="15.0" fill="rgb(251,179,15)" rx="2" ry="2" />
<text  x="879.18" y="207.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (892 samples, 0.81%)</title><rect x="1011.3" y="261" width="9.5" height="15.0" fill="rgb(205,33,4)" rx="2" ry="2" />
<text  x="1014.26" y="271.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (430 samples, 0.39%)</title><rect x="965.2" y="277" width="4.5" height="15.0" fill="rgb(229,156,27)" rx="2" ry="2" />
<text  x="968.16" y="287.5" ></text>
</g>
<g >
<title>pmemobj_root (28 samples, 0.03%)</title><rect x="470.9" y="245" width="0.3" height="15.0" fill="rgb(254,45,41)" rx="2" ry="2" />
<text  x="473.92" y="255.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::begin (10 samples, 0.01%)</title><rect x="947.6" y="293" width="0.1" height="15.0" fill="rgb(216,144,35)" rx="2" ry="2" />
<text  x="950.61" y="303.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::NVMBlockProcessor::Process (18 samples, 0.02%)</title><rect x="32.3" y="389" width="0.2" height="15.0" fill="rgb(221,0,16)" rx="2" ry="2" />
<text  x="35.33" y="399.5" ></text>
</g>
<g >
<title>std::forward&lt;void  (21 samples, 0.02%)</title><rect x="794.0" y="389" width="0.2" height="15.0" fill="rgb(233,182,3)" rx="2" ry="2" />
<text  x="796.99" y="399.5" ></text>
</g>
<g >
<title>__gnu_cxx::operator-&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*, std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt; &gt; (24 samples, 0.02%)</title><rect x="936.9" y="277" width="0.3" height="15.0" fill="rgb(216,110,17)" rx="2" ry="2" />
<text  x="939.92" y="287.5" ></text>
</g>
<g >
<title>__lll_lock_wait_private (14 samples, 0.01%)</title><rect x="1128.9" y="597" width="0.2" height="15.0" fill="rgb(231,103,42)" rx="2" ry="2" />
<text  x="1131.95" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (12 samples, 0.01%)</title><rect x="1056.6" y="261" width="0.1" height="15.0" fill="rgb(217,192,7)" rx="2" ry="2" />
<text  x="1059.57" y="271.5" ></text>
</g>
<g >
<title>std::operator!=&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (30 samples, 0.03%)</title><rect x="1038.1" y="197" width="0.3" height="15.0" fill="rgb(225,145,33)" rx="2" ry="2" />
<text  x="1041.11" y="207.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::assign (14 samples, 0.01%)</title><rect x="920.5" y="261" width="0.1" height="15.0" fill="rgb(242,222,7)" rx="2" ry="2" />
<text  x="923.47" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (184 samples, 0.17%)</title><rect x="900.2" y="149" width="2.0" height="15.0" fill="rgb(225,117,26)" rx="2" ry="2" />
<text  x="903.24" y="159.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::ImplicitProducer::insert_block_index_entry&lt; (11 samples, 0.01%)</title><rect x="1000.1" y="213" width="0.1" height="15.0" fill="rgb(224,25,23)" rx="2" ry="2" />
<text  x="1003.10" y="223.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator= (127 samples, 0.11%)</title><rect x="253.7" y="197" width="1.3" height="15.0" fill="rgb(242,37,17)" rx="2" ry="2" />
<text  x="256.67" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (102 samples, 0.09%)</title><rect x="900.4" y="133" width="1.0" height="15.0" fill="rgb(209,143,44)" rx="2" ry="2" />
<text  x="903.35" y="143.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::max_size (10 samples, 0.01%)</title><rect x="947.0" y="245" width="0.1" height="15.0" fill="rgb(213,25,0)" rx="2" ry="2" />
<text  x="950.01" y="255.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.01%)</title><rect x="1028.3" y="181" width="0.1" height="15.0" fill="rgb(249,134,26)" rx="2" ry="2" />
<text  x="1031.27" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (15 samples, 0.01%)</title><rect x="1053.9" y="213" width="0.2" height="15.0" fill="rgb(239,10,0)" rx="2" ry="2" />
<text  x="1056.91" y="223.5" ></text>
</g>
<g >
<title>pthread_cond_signal@@GLIBC_2.3.2 (73 samples, 0.07%)</title><rect x="218.5" y="293" width="0.7" height="15.0" fill="rgb(235,65,13)" rx="2" ry="2" />
<text  x="221.45" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::append (970 samples, 0.88%)</title><rect x="857.6" y="261" width="10.3" height="15.0" fill="rgb(208,48,46)" rx="2" ry="2" />
<text  x="860.60" y="271.5" ></text>
</g>
<g >
<title>std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt;::pair (16 samples, 0.01%)</title><rect x="243.7" y="37" width="0.2" height="15.0" fill="rgb(225,1,18)" rx="2" ry="2" />
<text  x="246.74" y="47.5" ></text>
</g>
<g >
<title>std::char_traits&lt;char&gt;::copy (15 samples, 0.01%)</title><rect x="1033.0" y="181" width="0.1" height="15.0" fill="rgb(251,227,29)" rx="2" ry="2" />
<text  x="1035.96" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (20 samples, 0.02%)</title><rect x="1025.2" y="261" width="0.3" height="15.0" fill="rgb(210,52,37)" rx="2" ry="2" />
<text  x="1028.24" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (31 samples, 0.03%)</title><rect x="924.3" y="261" width="0.3" height="15.0" fill="rgb(244,161,5)" rx="2" ry="2" />
<text  x="927.25" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (41 samples, 0.04%)</title><rect x="931.6" y="277" width="0.4" height="15.0" fill="rgb(233,158,21)" rx="2" ry="2" />
<text  x="934.60" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::CalcQueueLane (193 samples, 0.17%)</title><rect x="994.3" y="261" width="2.0" height="15.0" fill="rgb(214,29,13)" rx="2" ry="2" />
<text  x="997.29" y="271.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Lock (13 samples, 0.01%)</title><rect x="14.5" y="453" width="0.1" height="15.0" fill="rgb(251,126,53)" rx="2" ry="2" />
<text  x="17.49" y="463.5" ></text>
</g>
<g >
<title>std::allocator&lt;char&gt;::~allocator (12 samples, 0.01%)</title><rect x="946.0" y="229" width="0.2" height="15.0" fill="rgb(216,73,46)" rx="2" ry="2" />
<text  x="949.03" y="239.5" ></text>
</g>
<g >
<title>_IO_old_init (11 samples, 0.01%)</title><rect x="837.4" y="581" width="0.1" height="15.0" fill="rgb(207,176,13)" rx="2" ry="2" />
<text  x="840.38" y="591.5" ></text>
</g>
<g >
<title>__gnu_cxx::__exchange_and_add_dispatch (243 samples, 0.22%)</title><rect x="895.2" y="229" width="2.6" height="15.0" fill="rgb(246,171,36)" rx="2" ry="2" />
<text  x="898.18" y="239.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (10 samples, 0.01%)</title><rect x="235.1" y="261" width="0.1" height="15.0" fill="rgb(209,79,48)" rx="2" ry="2" />
<text  x="238.08" y="271.5" ></text>
</g>
<g >
<title>std::_Sp_counted_ptr_inplace&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;,  (33 samples, 0.03%)</title><rect x="898.5" y="197" width="0.4" height="15.0" fill="rgb(227,213,9)" rx="2" ry="2" />
<text  x="901.54" y="207.5" ></text>
</g>
<g >
<title>std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;&amp;, true&gt; (825 samples, 0.74%)</title><rect x="1025.8" y="293" width="8.8" height="15.0" fill="rgb(252,48,29)" rx="2" ry="2" />
<text  x="1028.83" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (36 samples, 0.03%)</title><rect x="483.1" y="261" width="0.4" height="15.0" fill="rgb(240,36,4)" rx="2" ry="2" />
<text  x="486.14" y="271.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (44 samples, 0.04%)</title><rect x="210.9" y="277" width="0.4" height="15.0" fill="rgb(211,174,39)" rx="2" ry="2" />
<text  x="213.86" y="287.5" ></text>
</g>
<g >
<title>__pthread_mutex_destroy (10 samples, 0.01%)</title><rect x="982.5" y="277" width="0.2" height="15.0" fill="rgb(254,111,45)" rx="2" ry="2" />
<text  x="985.55" y="287.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (101 samples, 0.09%)</title><rect x="1080.4" y="229" width="1.1" height="15.0" fill="rgb(220,193,22)" rx="2" ry="2" />
<text  x="1083.44" y="239.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (47 samples, 0.04%)</title><rect x="838.7" y="581" width="0.5" height="15.0" fill="rgb(245,56,3)" rx="2" ry="2" />
<text  x="841.74" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string&lt;char*, void&gt; (174 samples, 0.16%)</title><rect x="928.5" y="277" width="1.9" height="15.0" fill="rgb(248,165,17)" rx="2" ry="2" />
<text  x="931.52" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr_base::persistent_ptr_base (15 samples, 0.01%)</title><rect x="116.6" y="261" width="0.2" height="15.0" fill="rgb(244,72,7)" rx="2" ry="2" />
<text  x="119.60" y="271.5" ></text>
</g>
<g >
<title>std::__make_move_if_noexcept_iterator&lt;scythedb::Slice, std::move_iterator&lt;scythedb::Slice*&gt; &gt; (29 samples, 0.03%)</title><rect x="230.5" y="261" width="0.3" height="15.0" fill="rgb(234,73,46)" rx="2" ry="2" />
<text  x="233.48" y="271.5" ></text>
</g>
<g >
<title>all (110,803 samples, 100%)</title><rect x="10.0" y="629" width="1180.0" height="15.0" fill="rgb(235,189,37)" rx="2" ry="2" />
<text  x="13.00" y="639.5" ></text>
</g>
<g >
<title>__gthread_active_p (29 samples, 0.03%)</title><rect x="1073.9" y="261" width="0.3" height="15.0" fill="rgb(236,209,19)" rx="2" ry="2" />
<text  x="1076.90" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (14 samples, 0.01%)</title><rect x="957.2" y="229" width="0.2" height="15.0" fill="rgb(220,208,18)" rx="2" ry="2" />
<text  x="960.23" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (646 samples, 0.58%)</title><rect x="1026.7" y="261" width="6.8" height="15.0" fill="rgb(208,168,0)" rx="2" ry="2" />
<text  x="1029.66" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (93 samples, 0.08%)</title><rect x="210.7" y="325" width="1.0" height="15.0" fill="rgb(224,173,44)" rx="2" ry="2" />
<text  x="213.67" y="335.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (13 samples, 0.01%)</title><rect x="42.5" y="325" width="0.2" height="15.0" fill="rgb(241,228,15)" rx="2" ry="2" />
<text  x="45.53" y="335.5" ></text>
</g>
<g >
<title>std::atomic&lt;moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::Block*&gt;::load (10 samples, 0.01%)</title><rect x="535.8" y="261" width="0.1" height="15.0" fill="rgb(205,118,50)" rx="2" ry="2" />
<text  x="538.77" y="271.5" ></text>
</g>
<g >
<title>ycsbc::ZipfianGenerator::RaiseZeta (11 samples, 0.01%)</title><rect x="838.6" y="469" width="0.1" height="15.0" fill="rgb(237,185,24)" rx="2" ry="2" />
<text  x="841.62" y="479.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (28 samples, 0.03%)</title><rect x="990.2" y="261" width="0.3" height="15.0" fill="rgb(240,213,24)" rx="2" ry="2" />
<text  x="993.16" y="271.5" ></text>
</g>
<g >
<title>std::_Any_data::_M_access&lt;scythedb::NVMBlock::NVMBlock (27 samples, 0.02%)</title><rect x="196.2" y="245" width="0.3" height="15.0" fill="rgb(248,176,15)" rx="2" ry="2" />
<text  x="199.22" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::transaction::run&lt;&gt; (296 samples, 0.27%)</title><rect x="241.1" y="149" width="3.1" height="15.0" fill="rgb(214,84,28)" rx="2" ry="2" />
<text  x="244.08" y="159.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (1,093 samples, 0.99%)</title><rect x="936.0" y="293" width="11.6" height="15.0" fill="rgb(249,57,42)" rx="2" ry="2" />
<text  x="938.97" y="303.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (42 samples, 0.04%)</title><rect x="900.7" y="101" width="0.4" height="15.0" fill="rgb(238,49,3)" rx="2" ry="2" />
<text  x="903.67" y="111.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char const*&gt;::pointer_to (12 samples, 0.01%)</title><rect x="865.1" y="165" width="0.2" height="15.0" fill="rgb(242,203,34)" rx="2" ry="2" />
<text  x="868.13" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (10 samples, 0.01%)</title><rect x="926.4" y="293" width="0.1" height="15.0" fill="rgb(241,215,12)" rx="2" ry="2" />
<text  x="929.36" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (22 samples, 0.02%)</title><rect x="209.6" y="293" width="0.3" height="15.0" fill="rgb(234,31,16)" rx="2" ry="2" />
<text  x="212.64" y="303.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;std::pair&lt;pmem::obj::persistent_ptr&lt;char&gt;, unsigned long&gt; []&gt;::operator[]&lt;std::enable_if&lt;true, void&gt; &gt; (17 samples, 0.02%)</title><rect x="243.3" y="69" width="0.2" height="15.0" fill="rgb(229,125,2)" rx="2" ry="2" />
<text  x="246.34" y="79.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (25 samples, 0.02%)</title><rect x="933.2" y="245" width="0.3" height="15.0" fill="rgb(251,159,46)" rx="2" ry="2" />
<text  x="936.19" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (11 samples, 0.01%)</title><rect x="741.1" y="357" width="0.2" height="15.0" fill="rgb(220,197,24)" rx="2" ry="2" />
<text  x="744.13" y="367.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;void  (284 samples, 0.26%)</title><rect x="252.3" y="245" width="3.0" height="15.0" fill="rgb(254,111,48)" rx="2" ry="2" />
<text  x="255.30" y="255.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (10 samples, 0.01%)</title><rect x="357.1" y="181" width="0.1" height="15.0" fill="rgb(232,149,36)" rx="2" ry="2" />
<text  x="360.07" y="191.5" ></text>
</g>
<g >
<title>std::__atomic_base&lt;unsigned int&gt;::operator++ (159 samples, 0.14%)</title><rect x="872.2" y="277" width="1.7" height="15.0" fill="rgb(248,102,45)" rx="2" ry="2" />
<text  x="875.19" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_Alloc_hider::_Alloc_hider (21 samples, 0.02%)</title><rect x="941.3" y="213" width="0.3" height="15.0" fill="rgb(224,83,30)" rx="2" ry="2" />
<text  x="944.34" y="223.5" ></text>
</g>
<g >
<title>cfree@GLIBC_2.2.5 (10 samples, 0.01%)</title><rect x="899.4" y="181" width="0.1" height="15.0" fill="rgb(250,82,14)" rx="2" ry="2" />
<text  x="902.42" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_realloc_insert&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; (562 samples, 0.51%)</title><rect x="1036.1" y="277" width="5.9" height="15.0" fill="rgb(238,189,18)" rx="2" ry="2" />
<text  x="1039.05" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (33 samples, 0.03%)</title><rect x="234.5" y="261" width="0.4" height="15.0" fill="rgb(205,49,22)" rx="2" ry="2" />
<text  x="237.50" y="271.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (48 samples, 0.04%)</title><rect x="252.6" y="181" width="0.5" height="15.0" fill="rgb(253,32,1)" rx="2" ry="2" />
<text  x="255.55" y="191.5" ></text>
</g>
<g >
<title>std::allocate_shared&lt;scythedb::(anonymous namespace)::ProcessorMessage, std::allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;&gt; (431 samples, 0.39%)</title><rect x="1006.4" y="261" width="4.6" height="15.0" fill="rgb(235,157,50)" rx="2" ry="2" />
<text  x="1009.42" y="271.5" ></text>
</g>
<g >
<title>std::_Function_handler&lt;int  (83 samples, 0.07%)</title><rect x="256.0" y="245" width="0.9" height="15.0" fill="rgb(228,227,25)" rx="2" ry="2" />
<text  x="259.00" y="255.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::operator (49 samples, 0.04%)</title><rect x="252.6" y="197" width="0.5" height="15.0" fill="rgb(249,166,50)" rx="2" ry="2" />
<text  x="255.55" y="207.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::get (14 samples, 0.01%)</title><rect x="97.8" y="261" width="0.1" height="15.0" fill="rgb(211,93,42)" rx="2" ry="2" />
<text  x="100.78" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_dispose (98 samples, 0.09%)</title><rect x="906.6" y="309" width="1.1" height="15.0" fill="rgb(241,134,18)" rx="2" ry="2" />
<text  x="909.63" y="319.5" ></text>
</g>
<g >
<title>utils::FNVHash64 (29 samples, 0.03%)</title><rect x="1061.8" y="261" width="0.3" height="15.0" fill="rgb(232,220,12)" rx="2" ry="2" />
<text  x="1064.77" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (129 samples, 0.12%)</title><rect x="858.8" y="213" width="1.4" height="15.0" fill="rgb(227,189,45)" rx="2" ry="2" />
<text  x="861.79" y="223.5" ></text>
</g>
<g >
<title>ycsbc::Client::DoTransaction (10,078 samples, 9.10%)</title><rect x="974.7" y="341" width="107.4" height="15.0" fill="rgb(234,32,2)" rx="2" ry="2" />
<text  x="977.73" y="351.5" >ycsbc::Client..</text>
</g>
<g >
<title>scythedb::CondVar::Wait (60 samples, 0.05%)</title><rect x="877.1" y="293" width="0.6" height="15.0" fill="rgb(246,165,53)" rx="2" ry="2" />
<text  x="880.07" y="303.5" ></text>
</g>
<g >
<title>std::__shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (904 samples, 0.82%)</title><rect x="894.3" y="277" width="9.7" height="15.0" fill="rgb(246,228,32)" rx="2" ry="2" />
<text  x="897.35" y="287.5" ></text>
</g>
<g >
<title>__gnu_cxx::__alloc_traits&lt;std::allocator&lt;char&gt;, char&gt;::_S_select_on_copy (29 samples, 0.03%)</title><rect x="955.7" y="277" width="0.4" height="15.0" fill="rgb(248,64,44)" rx="2" ry="2" />
<text  x="958.74" y="287.5" ></text>
</g>
<g >
<title>std::_Function_base::_M_empty (31 samples, 0.03%)</title><rect x="353.2" y="229" width="0.3" height="15.0" fill="rgb(233,164,47)" rx="2" ry="2" />
<text  x="356.21" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (33 samples, 0.03%)</title><rect x="220.1" y="245" width="0.4" height="15.0" fill="rgb(254,153,52)" rx="2" ry="2" />
<text  x="223.12" y="255.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (18 samples, 0.02%)</title><rect x="1051.7" y="213" width="0.2" height="15.0" fill="rgb(245,0,33)" rx="2" ry="2" />
<text  x="1054.68" y="223.5" ></text>
</g>
<g >
<title>std::__get_helper&lt;0ul, scythedb::(anonymous namespace)::NVMBlockProcessor*&gt; (118 samples, 0.11%)</title><rect x="795.3" y="389" width="1.2" height="15.0" fill="rgb(219,22,46)" rx="2" ry="2" />
<text  x="798.28" y="399.5" ></text>
</g>
<g >
<title>std::thread::_Invoker&lt;std::tuple&lt;int  (22,775 samples, 20.55%)</title><rect x="839.7" y="421" width="242.5" height="15.0" fill="rgb(237,151,30)" rx="2" ry="2" />
<text  x="842.69" y="431.5" >std::thread::_Invoker&lt;std::tuple..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (114 samples, 0.10%)</title><rect x="863.6" y="213" width="1.2" height="15.0" fill="rgb(216,7,13)" rx="2" ry="2" />
<text  x="866.57" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (12 samples, 0.01%)</title><rect x="482.5" y="245" width="0.1" height="15.0" fill="rgb(205,39,1)" rx="2" ry="2" />
<text  x="485.50" y="255.5" ></text>
</g>
<g >
<title>scythedb::Slice::Slice (14 samples, 0.01%)</title><rect x="481.2" y="309" width="0.2" height="15.0" fill="rgb(214,224,27)" rx="2" ry="2" />
<text  x="484.23" y="319.5" ></text>
</g>
<g >
<title>scythedb::NVMBlock::KeyComparator::Compare (9,371 samples, 8.46%)</title><rect x="356.1" y="197" width="99.8" height="15.0" fill="rgb(219,93,49)" rx="2" ry="2" />
<text  x="359.13" y="207.5" >scythedb::NV..</text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char*&gt; (109 samples, 0.10%)</title><rect x="928.9" y="245" width="1.1" height="15.0" fill="rgb(243,51,53)" rx="2" ry="2" />
<text  x="931.85" y="255.5" ></text>
</g>
<g >
<title>std::generate_canonical&lt;double, 53ul, std::linear_congruential_engine&lt;unsigned long, 16807ul, 0ul, 2147483647ul&gt; &gt; (58 samples, 0.05%)</title><rect x="1070.3" y="181" width="0.6" height="15.0" fill="rgb(253,58,24)" rx="2" ry="2" />
<text  x="1073.32" y="191.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::NVMMeta&gt;::get (18 samples, 0.02%)</title><rect x="239.5" y="165" width="0.2" height="15.0" fill="rgb(224,199,9)" rx="2" ry="2" />
<text  x="242.53" y="175.5" ></text>
</g>
<g >
<title>scythedb::Status::~Status (19 samples, 0.02%)</title><rect x="905.7" y="325" width="0.2" height="15.0" fill="rgb(222,219,6)" rx="2" ry="2" />
<text  x="908.69" y="335.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct_aux&lt;char const*&gt; (129 samples, 0.12%)</title><rect x="1055.2" y="245" width="1.4" height="15.0" fill="rgb(228,151,41)" rx="2" ry="2" />
<text  x="1058.18" y="255.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (21 samples, 0.02%)</title><rect x="868.1" y="245" width="0.2" height="15.0" fill="rgb(225,217,50)" rx="2" ry="2" />
<text  x="871.11" y="255.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (18 samples, 0.02%)</title><rect x="14.6" y="453" width="0.2" height="15.0" fill="rgb(215,55,50)" rx="2" ry="2" />
<text  x="17.63" y="463.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (13 samples, 0.01%)</title><rect x="945.5" y="197" width="0.2" height="15.0" fill="rgb(230,177,45)" rx="2" ry="2" />
<text  x="948.53" y="207.5" ></text>
</g>
<g >
<title>scythedb::GetVarint32Ptr (31 samples, 0.03%)</title><rect x="437.3" y="181" width="0.3" height="15.0" fill="rgb(242,133,38)" rx="2" ry="2" />
<text  x="440.27" y="191.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (16 samples, 0.01%)</title><rect x="987.8" y="181" width="0.2" height="15.0" fill="rgb(220,66,11)" rx="2" ry="2" />
<text  x="990.82" y="191.5" ></text>
</g>
<g >
<title>std::pointer_traits&lt;char*&gt;::pointer_to (15 samples, 0.01%)</title><rect x="931.4" y="261" width="0.2" height="15.0" fill="rgb(251,59,23)" rx="2" ry="2" />
<text  x="934.44" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (151 samples, 0.14%)</title><rect x="1059.5" y="229" width="1.6" height="15.0" fill="rgb(239,177,6)" rx="2" ry="2" />
<text  x="1062.50" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::allocate (46 samples, 0.04%)</title><rect x="937.5" y="261" width="0.5" height="15.0" fill="rgb(206,58,4)" rx="2" ry="2" />
<text  x="940.48" y="271.5" ></text>
</g>
<g >
<title>std::__uninitialized_copy&lt;false&gt;::__uninit_copy&lt;std::move_iterator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;*&gt; (47 samples, 0.04%)</title><rect x="1038.0" y="213" width="0.5" height="15.0" fill="rgb(230,84,1)" rx="2" ry="2" />
<text  x="1040.96" y="223.5" ></text>
</g>
<g >
<title>pmemobj_direct_inline (344 samples, 0.31%)</title><rect x="264.1" y="213" width="3.7" height="15.0" fill="rgb(227,148,47)" rx="2" ry="2" />
<text  x="267.12" y="223.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (35 samples, 0.03%)</title><rect x="960.3" y="197" width="0.4" height="15.0" fill="rgb(220,70,17)" rx="2" ry="2" />
<text  x="963.33" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_append (217 samples, 0.20%)</title><rect x="919.4" y="293" width="2.3" height="15.0" fill="rgb(224,120,52)" rx="2" ry="2" />
<text  x="922.41" y="303.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::construct&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; const&amp;&gt; (597 samples, 0.54%)</title><rect x="939.9" y="277" width="6.4" height="15.0" fill="rgb(215,118,37)" rx="2" ry="2" />
<text  x="942.95" y="287.5" ></text>
</g>
<g >
<title>pmemobj_tx_commit (57 samples, 0.05%)</title><rect x="248.1" y="277" width="0.6" height="15.0" fill="rgb(224,228,25)" rx="2" ry="2" />
<text  x="251.07" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (65 samples, 0.06%)</title><rect x="1050.7" y="229" width="0.7" height="15.0" fill="rgb(222,191,15)" rx="2" ry="2" />
<text  x="1053.66" y="239.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::ProcessorSetImpl::Add (341 samples, 0.31%)</title><rect x="492.2" y="309" width="3.6" height="15.0" fill="rgb(242,4,3)" rx="2" ry="2" />
<text  x="495.17" y="319.5" ></text>
</g>
<g >
<title>ycsbc::DelegateClient (22,732 samples, 20.52%)</title><rect x="840.2" y="357" width="242.0" height="15.0" fill="rgb(238,45,2)" rx="2" ry="2" />
<text  x="843.15" y="367.5" >ycsbc::DelegateClient</text>
</g>
<g >
<title>[libpmem.so.1.0.0] (1,225 samples, 1.11%)</title><rect x="799.6" y="581" width="13.0" height="15.0" fill="rgb(218,21,26)" rx="2" ry="2" />
<text  x="802.58" y="591.5" ></text>
</g>
<g >
<title>operator delete (23 samples, 0.02%)</title><rect x="1020.1" y="101" width="0.2" height="15.0" fill="rgb(252,226,50)" rx="2" ry="2" />
<text  x="1023.08" y="111.5" ></text>
</g>
<g >
<title>std::operator!=&lt;scythedb::Slice*&gt; (33 samples, 0.03%)</title><rect x="231.4" y="213" width="0.3" height="15.0" fill="rgb(231,143,47)" rx="2" ry="2" />
<text  x="234.39" y="223.5" ></text>
</g>
<g >
<title>std::__shared_ptr_access&lt;scythedb::(anonymous namespace)::ProcessorMessage,  (48 samples, 0.04%)</title><rect x="868.6" y="277" width="0.5" height="15.0" fill="rgb(205,112,48)" rx="2" ry="2" />
<text  x="871.62" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (16 samples, 0.01%)</title><rect x="958.8" y="277" width="0.2" height="15.0" fill="rgb(253,213,22)" rx="2" ry="2" />
<text  x="961.82" y="287.5" ></text>
</g>
<g >
<title>scythedb::PutFixed64 (173 samples, 0.16%)</title><rect x="477.7" y="309" width="1.9" height="15.0" fill="rgb(229,77,40)" rx="2" ry="2" />
<text  x="480.75" y="319.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_mutate (493 samples, 0.44%)</title><rect x="204.3" y="293" width="5.3" height="15.0" fill="rgb(252,208,53)" rx="2" ry="2" />
<text  x="207.30" y="303.5" ></text>
</g>
<g >
<title>pthread_cond_init@@GLIBC_2.3.2 (25 samples, 0.02%)</title><rect x="985.0" y="277" width="0.2" height="15.0" fill="rgb(216,209,4)" rx="2" ry="2" />
<text  x="987.95" y="287.5" ></text>
</g>
<g >
<title>scythedb::PthreadCall (12 samples, 0.01%)</title><rect x="877.6" y="277" width="0.1" height="15.0" fill="rgb(221,87,36)" rx="2" ry="2" />
<text  x="880.59" y="287.5" ></text>
</g>
<g >
<title>std::forward&lt;char const*&gt; (34 samples, 0.03%)</title><rect x="458.6" y="229" width="0.4" height="15.0" fill="rgb(209,80,4)" rx="2" ry="2" />
<text  x="461.61" y="239.5" ></text>
</g>
<g >
<title>std::allocator_traits&lt;std::allocator&lt;char&gt; &gt;::deallocate (92 samples, 0.08%)</title><rect x="900.5" y="117" width="0.9" height="15.0" fill="rgb(216,75,53)" rx="2" ry="2" />
<text  x="903.46" y="127.5" ></text>
</g>
<g >
<title>moodycamel::ConcurrentQueue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;, moodycamel::ConcurrentQueueDefaultTraits&gt;::try_dequeue&lt;std::shared_ptr&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; &gt; (21,070 samples, 19.02%)</title><rect x="514.5" y="341" width="224.3" height="15.0" fill="rgb(241,222,45)" rx="2" ry="2" />
<text  x="517.46" y="351.5" >moodycamel::ConcurrentQueue&lt;s..</text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator= (48 samples, 0.04%)</title><rect x="470.0" y="181" width="0.5" height="15.0" fill="rgb(252,19,48)" rx="2" ry="2" />
<text  x="473.03" y="191.5" ></text>
</g>
<g >
<title>scythedb::Mutex::Unlock (49 samples, 0.04%)</title><rect x="24.8" y="437" width="0.5" height="15.0" fill="rgb(249,208,37)" rx="2" ry="2" />
<text  x="27.77" y="447.5" ></text>
</g>
<g >
<title>std::_Sp_counted_base&lt; (16 samples, 0.01%)</title><rect x="889.3" y="213" width="0.2" height="15.0" fill="rgb(218,136,42)" rx="2" ry="2" />
<text  x="892.30" y="223.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::max_size (15 samples, 0.01%)</title><rect x="921.8" y="277" width="0.2" height="15.0" fill="rgb(212,183,31)" rx="2" ry="2" />
<text  x="924.81" y="287.5" ></text>
</g>
<g >
<title>operator new (16 samples, 0.01%)</title><rect x="220.3" y="213" width="0.2" height="15.0" fill="rgb(251,193,13)" rx="2" ry="2" />
<text  x="223.29" y="223.5" ></text>
</g>
<g >
<title>pmem::detail::conditional_add_to_tx&lt;pmem::obj::persistent_ptr_base&gt; (12 samples, 0.01%)</title><rect x="254.6" y="165" width="0.2" height="15.0" fill="rgb(207,41,12)" rx="2" ry="2" />
<text  x="257.63" y="175.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_destroy (150 samples, 0.14%)</title><rect x="1023.5" y="277" width="1.6" height="15.0" fill="rgb(254,11,13)" rx="2" ry="2" />
<text  x="1026.55" y="287.5" ></text>
</g>
<g >
<title>scythedb::(anonymous namespace)::BytewiseComparatorImpl::Compare (21 samples, 0.02%)</title><rect x="256.5" y="181" width="0.2" height="15.0" fill="rgb(230,206,24)" rx="2" ry="2" />
<text  x="259.45" y="191.5" ></text>
</g>
<g >
<title>__gnu_cxx::new_allocator&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt;::destroy&lt;scythedb::(anonymous namespace)::ProcessorMessage&gt; (419 samples, 0.38%)</title><rect x="1016.1" y="181" width="4.5" height="15.0" fill="rgb(224,195,45)" rx="2" ry="2" />
<text  x="1019.13" y="191.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::~vector (15 samples, 0.01%)</title><rect x="841.6" y="341" width="0.2" height="15.0" fill="rgb(211,67,48)" rx="2" ry="2" />
<text  x="844.60" y="351.5" ></text>
</g>
<g >
<title>std::swap&lt;bool  (31 samples, 0.03%)</title><rect x="870.1" y="245" width="0.3" height="15.0" fill="rgb(223,125,4)" rx="2" ry="2" />
<text  x="873.08" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_local_data (10 samples, 0.01%)</title><rect x="1035.2" y="245" width="0.1" height="15.0" fill="rgb(205,221,30)" rx="2" ry="2" />
<text  x="1038.21" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (177 samples, 0.16%)</title><rect x="1075.7" y="277" width="1.9" height="15.0" fill="rgb(218,226,22)" rx="2" ry="2" />
<text  x="1078.70" y="287.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (139 samples, 0.13%)</title><rect x="1059.6" y="197" width="1.5" height="15.0" fill="rgb(238,117,11)" rx="2" ry="2" />
<text  x="1062.58" y="207.5" ></text>
</g>
<g >
<title>__memmove_avx_unaligned_erms (14 samples, 0.01%)</title><rect x="221.1" y="229" width="0.1" height="15.0" fill="rgb(225,26,0)" rx="2" ry="2" />
<text  x="224.08" y="239.5" ></text>
</g>
<g >
<title>__pthread_mutex_unlock (78 samples, 0.07%)</title><rect x="851.0" y="293" width="0.8" height="15.0" fill="rgb(207,101,18)" rx="2" ry="2" />
<text  x="853.98" y="303.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_get_Tp_allocator (10 samples, 0.01%)</title><rect x="946.9" y="245" width="0.1" height="15.0" fill="rgb(227,183,4)" rx="2" ry="2" />
<text  x="949.90" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_check_length (22 samples, 0.02%)</title><rect x="922.3" y="277" width="0.3" height="15.0" fill="rgb(250,124,4)" rx="2" ry="2" />
<text  x="925.35" y="287.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;char&gt;::operator char* (17 samples, 0.02%)</title><rect x="259.3" y="261" width="0.2" height="15.0" fill="rgb(210,134,50)" rx="2" ry="2" />
<text  x="262.31" y="271.5" ></text>
</g>
<g >
<title>malloc (12 samples, 0.01%)</title><rect x="1060.2" y="149" width="0.1" height="15.0" fill="rgb(253,132,25)" rx="2" ry="2" />
<text  x="1063.20" y="159.5" ></text>
</g>
<g >
<title>scythedb::DecodeFixed64 (11 samples, 0.01%)</title><rect x="189.6" y="197" width="0.1" height="15.0" fill="rgb(222,198,29)" rx="2" ry="2" />
<text  x="192.58" y="207.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_check_len (14 samples, 0.01%)</title><rect x="935.7" y="293" width="0.1" height="15.0" fill="rgb(220,133,52)" rx="2" ry="2" />
<text  x="938.70" y="303.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_create (89 samples, 0.08%)</title><rect x="951.8" y="245" width="1.0" height="15.0" fill="rgb(211,151,30)" rx="2" ry="2" />
<text  x="954.82" y="255.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_set_length (30 samples, 0.03%)</title><rect x="1028.6" y="213" width="0.4" height="15.0" fill="rgb(243,212,52)" rx="2" ry="2" />
<text  x="1031.64" y="223.5" ></text>
</g>
<g >
<title>__memcmp_avx2_movbe (467 samples, 0.42%)</title><rect x="443.2" y="149" width="5.0" height="15.0" fill="rgb(245,188,3)" rx="2" ry="2" />
<text  x="446.20" y="159.5" ></text>
</g>
<g >
<title>operator delete (21 samples, 0.02%)</title><rect x="963.9" y="229" width="0.2" height="15.0" fill="rgb(227,159,29)" rx="2" ry="2" />
<text  x="966.89" y="239.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::capacity (28 samples, 0.03%)</title><rect x="926.0" y="277" width="0.3" height="15.0" fill="rgb(213,105,9)" rx="2" ry="2" />
<text  x="928.98" y="287.5" ></text>
</g>
<g >
<title>std::function&lt;void  (1,175 samples, 1.06%)</title><rect x="235.2" y="261" width="12.5" height="15.0" fill="rgb(208,65,5)" rx="2" ry="2" />
<text  x="238.18" y="271.5" ></text>
</g>
<g >
<title>std::_Vector_base&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::_M_allocate (31 samples, 0.03%)</title><rect x="1036.9" y="261" width="0.3" height="15.0" fill="rgb(234,118,23)" rx="2" ry="2" />
<text  x="1039.86" y="271.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::basic_string (505 samples, 0.46%)</title><rect x="940.6" y="229" width="5.4" height="15.0" fill="rgb(245,154,18)" rx="2" ry="2" />
<text  x="943.61" y="239.5" ></text>
</g>
<g >
<title>ravl_emplace (47 samples, 0.04%)</title><rect x="1112.7" y="581" width="0.5" height="15.0" fill="rgb(225,104,15)" rx="2" ry="2" />
<text  x="1115.70" y="591.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_S_copy (25 samples, 0.02%)</title><rect x="957.9" y="213" width="0.3" height="15.0" fill="rgb(228,181,14)" rx="2" ry="2" />
<text  x="960.90" y="223.5" ></text>
</g>
<g >
<title>alloc_class_calc_size_idx (21 samples, 0.02%)</title><rect x="1144.7" y="597" width="0.2" height="15.0" fill="rgb(217,155,23)" rx="2" ry="2" />
<text  x="1147.65" y="607.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_data (15 samples, 0.01%)</title><rect x="855.0" y="197" width="0.2" height="15.0" fill="rgb(249,174,43)" rx="2" ry="2" />
<text  x="858.02" y="207.5" ></text>
</g>
<g >
<title>std::addressof&lt;char const&gt; (22 samples, 0.02%)</title><rect x="863.1" y="149" width="0.3" height="15.0" fill="rgb(251,77,2)" rx="2" ry="2" />
<text  x="866.12" y="159.5" ></text>
</g>
<g >
<title>__gnu_cxx::__to_xstring&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, char&gt; (207 samples, 0.19%)</title><rect x="928.2" y="293" width="2.2" height="15.0" fill="rgb(252,41,22)" rx="2" ry="2" />
<text  x="931.17" y="303.5" ></text>
</g>
<g >
<title>std::vector&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt;, std::allocator&lt;std::pair&lt;std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;, std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt; &gt; &gt; &gt;::vector (35 samples, 0.03%)</title><rect x="1042.3" y="309" width="0.4" height="15.0" fill="rgb(244,112,34)" rx="2" ry="2" />
<text  x="1045.30" y="319.5" ></text>
</g>
<g >
<title>pmem::obj::persistent_ptr&lt;scythedb::InternalNode&gt;::persistent_ptr (16 samples, 0.01%)</title><rect x="253.1" y="197" width="0.1" height="15.0" fill="rgb(237,204,9)" rx="2" ry="2" />
<text  x="256.08" y="207.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::_M_construct&lt;char*&gt; (70 samples, 0.06%)</title><rect x="1046.1" y="277" width="0.7" height="15.0" fill="rgb(243,199,21)" rx="2" ry="2" />
<text  x="1049.09" y="287.5" ></text>
</g>
<g >
<title>std::lock_guard&lt;std::mutex&gt;::~lock_guard (202 samples, 0.18%)</title><rect x="1067.5" y="245" width="2.1" height="15.0" fill="rgb(254,47,40)" rx="2" ry="2" />
<text  x="1070.48" y="255.5" ></text>
</g>
<g >
<title>__pthread_mutex_lock (436 samples, 0.39%)</title><rect x="15.8" y="437" width="4.6" height="15.0" fill="rgb(233,220,32)" rx="2" ry="2" />
<text  x="18.77" y="447.5" ></text>
</g>
<g >
<title>_int_free (14 samples, 0.01%)</title><rect x="1114.4" y="565" width="0.2" height="15.0" fill="rgb(217,161,51)" rx="2" ry="2" />
<text  x="1117.41" y="575.5" ></text>
</g>
<g >
<title>std::__cxx11::basic_string&lt;char, std::char_traits&lt;char&gt;, std::allocator&lt;char&gt; &gt;::~basic_string (51 samples, 0.05%)</title><rect x="1034.9" y="293" width="0.5" height="15.0" fill="rgb(220,54,13)" rx="2" ry="2" />
<text  x="1037.89" y="303.5" ></text>
</g>
</g>
</svg>
